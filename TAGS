
cli/main.h,166
#define JIUFENG_CLI_MAIN_H13,131
    u32 ocm_u32Reserved[ocm_u32Reserved27,539
    olchar_t ocm_strUsername[ocm_strUsername29,569
} jiufeng_cli_master_t;30,618

cli/clicmd.c,636
static u32 _setDefaultParamUser(27,568
static u32 _userHelp(37,796
static u32 _parseUser(49,1100
static jf_clieng_caption_t ls_jccUserInfoVerbose[ls_jccUserInfoVerbose88,2200
static void _printUserVerbose(96,2463
static jf_clieng_caption_t ls_jccUserInfoBrief[ls_jccUserInfoBrief122,3183
static void _printUserBrief(131,3340
static u32 _processUser(164,4189
static u32 _setDefaultParamExit(219,6224
static u32 _exitHelp(229,6452
static u32 _parseExit(238,6614
static u32 _processExit(267,7371
static u32 _setDefaultParamHelp(284,7795
static u32 _parseHelp(294,8023
static u32 _processHelp(323,8777
u32 addCmd(345,9398

cli/clicmd.h,707
#define CLI_CLICMD_H13,128
#define CLI_ACTION_UNKNOWN 23,451
#define CLI_ACTION_SHOW_HELP 24,483
#define CLI_ACTION_ADD_USER 29,613
#define CLI_ACTION_LIST_USER 30,647
    u8 cup_u8Action;31,682
    boolean_t cup_bVerbose;32,703
    u8 cup_u8Reserved[cup_u8Reserved33,731
    olchar_t cup_strUsername[cup_strUsername34,757
} cli_user_param_t;35,806
    u8 chp_u8Action;39,844
    u8 chp_u8Reserved[chp_u8Reserved40,865
} cli_help_param_t;41,892
    u8 cep_u8Action;45,930
    u8 cep_u8Reserved[cep_u8Reserved46,951
} cli_exit_param_t;47,978
    cli_exit_param_t cp_cepExit;51,1015
    cli_help_param_t cp_chpHelp;52,1048
    cli_user_param_t cp_cupUser;53,1081
} cli_param_t;54,1114

cli/main.c,328
jiufeng_cli_master_t * ls_pocmMaster 36,715
static const olchar_t * ls_pstrProgramName 38,761
static const olchar_t * ls_pstrVersion 39,815
static const olchar_t * ls_pstrBuildData 40,865
static void _printUsage(43,1002
static u32 _parseCmdLineParam(60,1411
static u32 _printShellGreeting(104,2584
olint_t main(122,3154

cli/user.h,668
#define JIUFENG_CLI_USER_H13,132
#define MAX_USER_NAME_LEN 23,426
#define MAX_PASSWORD_LEN 24,463
#define MAX_USER_FULL_NAME_LEN 25,500
#define MAX_EMAIL_LEN 26,537
#define MAX_NUM_USER	28,575
    olchar_t ui_strUsername[ui_strUsername32,630
    olchar_t ui_strFullname[ui_strFullname33,678
    olchar_t ui_strPassword[ui_strPassword34,731
    olchar_t ui_strEmail[ui_strEmail35,778
    u8 ui_u8UserGroupId;36,819
    boolean_t ui_bEnable;37,844
    u8 ui_u8Reserved[ui_u8Reserved38,870
} user_info_t;39,895
    u16 ul_u16NumUser;43,931
    u16 ul_u16Reserved[ul_u16Reserved44,954
    user_info_t ul_tUser[ul_tUser45,981
} user_list_t;46,1021

xmlparser/xmlparser.c,801
static u32 _destroyXMLNodeList(34,775
static u32 _newXMLNode(56,1277
static u32 _parseXmlDeclaration(129,3885
static u32 _parseXmlElement(171,4849
static u32 _parseXmlAttribute(213,6197
static u32 _parseXmlElementName(227,6626
static u32 _parseXML(275,8232
static u32 _processXMLNodeList(363,10583
static u32 _getXmlAttribute(443,13456
u32 jf_xmlparser_destroyXMLAttributeList(533,16906
u32 jf_xmlparser_lookupXMLNamespace(558,17641
u32 jf_xmlparser_buildXMLNamespaceLookupTable(599,18888
u32 jf_xmlparser_readInnerXML(656,21022
u32 jf_xmlparser_getXMLAttributes(698,22254
u32 jf_xmlparser_parseXML(742,23742
u32 jf_xmlparser_destroyXMLNodeList(758,24138
u32 jf_xmlparser_parseXMLFile(767,24311
u32 jf_xmlparser_destroyXMLFile(818,25608
void jf_xmlparser_printXMLNodeList(836,26058

stringparse/settingparse.c,589
#define MAX_ID_LENGTH 24,517
static u32 _trimSetting(31,717
u32 jf_string_processIdList(76,1670
u32 retrieveSettingsSize(198,4701
u32 retrieveSettingsU32(215,5089
u32 jf_string_retrieveSettingsEnable(243,5674
u32 jf_string_retrieveSettings(267,6326
u32 jf_string_validateSettings(308,7432
u32 jf_string_processKeywordSettings(360,8858
u32 jf_string_processSettings(420,10175
u32 jf_string_getSettingsString(519,12503
u32 jf_string_getSettingsU32(537,13036
u32 jf_string_getSettingsBoolean(568,13962
u32 getSettingsSize(594,14655
u32 jf_string_processSettingString(621,15323

stringparse/scanstring.c,1022
static boolean_t _isDayInRange(34,677
static u32 _getDateFromString(47,971
u32 jf_string_getS32FromString(122,2781
u32 jf_string_getS32FromHexString(151,3500
u32 jf_string_getU32FromString(180,4206
u32 jf_string_getU16FromString(209,4925
u32 jf_string_getU8FromString(241,5770
u32 jf_string_getLongFromString(273,6608
u32 jf_string_getUlongFromString(306,7469
u32 jf_string_getU64FromString(344,8402
u32 jf_string_getS64FromString(379,9247
u32 jf_string_getBinaryFromString(414,10090
    #define ONE_TEGABYTE 450,10976
    #define ONE_TEGABYTE 452,11027
#define ONE_GIGABYTE 454,11078
#define ONE_MEGABYTE 455,11113
#define ONE_KILOBYTE 456,11146
u32 jf_string_getSizeFromString(458,11177
u32 jf_string_getTimeFromString(577,14396
u32 jf_string_getDateFromString(659,16184
u32 jf_string_getDate2FromString(672,16539
u32 jf_string_getMACAddressFromString(683,16814
olsize_t jf_string_getHexFromString(758,18740
u32 jf_string_getFloatFromString(786,19330
u32 jf_string_getDoubleFromString(815,20048

stringparse/printstring.c,1368
const static olchar_t * ls_pstrMonth[ls_pstrMonth25,525
const olchar_t * jf_string_getStringNotApplicable(34,821
const olchar_t * jf_string_getStringNotSupported(39,900
void jf_string_getStringWWN(44,988
void jf_string_getStringU64Integer(56,1298
void jf_string_getStringMACAddress(66,1544
void jf_string_getStringDate(73,1772
void jf_string_getStringDate2(85,2197
void jf_string_getStringDate2ForDaysFrom1970(94,2487
u32 jf_string_getStringUTCTime(103,2737
u32 jf_string_getStringLocalTime(128,3387
void jf_string_getStringTimePeriod(153,4042
    #define ONE_TEGABYTE 199,5090
    #define ONE_TEGABYTE 201,5141
#define ONE_GIGABYTE 203,5192
#define ONE_MEGABYTE 204,5227
#define ONE_KILOBYTE 205,5260
void jf_string_getStringSize(207,5291
void jf_string_getStringSizeMax(292,8239
#define ONE_TEGABYTE_1000_BASED 373,10989
#define ONE_TEGABYTE_1000_BASED 375,11043
#define ONE_GIGABYTE_1000_BASED 377,11097
#define ONE_MEGABYTE_1000_BASED 378,11140
#define ONE_KILOBYTE_1000_BASED 379,11180
void jf_string_getStringSize1000Based(381,11219
void jf_string_getStringVersion(466,14410
const olchar_t * jf_string_getStringEnable(474,14658
const olchar_t * jf_string_getStringUnknown(486,14834
const olchar_t * jf_string_getStringPositive(491,14911
const olchar_t * jf_string_getStringTrue(503,15083
olsize_t jf_string_getStringHex(515,15247

stringparse/parsestring.c,713
static boolean_t _isDelimiter(42,1114
static boolean_t _isblank(69,1825
u32 jf_string_parseAdv(83,2079
u32 jf_string_parse(212,6429
u32 jf_string_destroyParseResult(311,9946
void jf_string_skipBlank(331,10485
boolean_t jf_string_isBlankLine(355,10935
u32 jf_string_free(375,11261
u32 jf_string_duplicateWithLen(384,11398
u32 jf_string_duplicate(405,11878
void jf_string_filterComment(428,12343
void jf_string_lower(441,12593
void jf_string_upper(457,12846
void jf_string_removeLeadingSpace(473,13099
void jf_string_removeTailingSpace(495,13453
void jf_string_trimBlank(514,13709
u32 jf_string_breakToLine(549,14423
u32 jf_string_locateSubString(584,14900
olchar_t * jf_string_replace(602,15287

stringparse/validatestring.c,219
u32 jf_string_validateStringAlias(32,803
u32 jf_string_validateStringUsername(70,1689
u32 jf_string_validateHexString(97,2336
u32 jf_string_validateIntegerString(116,2778
u32 jf_string_validateFloatString(133,3129

template/template.c,0

template/template.h,34
#define JIUFENG_TEMPLATE_H12,130

httpparser/httpparser.c,755
static u32 _parseHttpStartLine(29,621
static u32 _parseHttpHeaderLine(128,4389
u32 jf_httpparser_destroyPacketHeader(222,7579
olint_t jf_httpparser_escapeHttpData(286,9884
olint_t jf_httpparser_getHttpEscapeDataLen(328,11186
olint_t jf_httpparser_unescapeHttpData(365,12202
u32 jf_httpparser_parsePacketHeader(406,13286
u32 jf_httpparser_getRawPacket(447,14484
u32 jf_httpparser_parseUri(560,18073
u32 jf_httpparser_createEmptyPacketHeader(653,20765
u32 jf_httpparser_clonePacketHeader(672,21247
u32 jf_httpparser_setVersion(717,22687
u32 jf_httpparser_setStatusCode(736,23136
u32 jf_httpparser_setDirective(757,23675
u32 jf_httpparser_setBody(787,24563
u32 jf_httpparser_addHeaderLine(812,25134
u32 jf_httpparser_getHeaderLine(876,26982

files/files.c,1451
static u32 _writeVec(36,788
static u32 _readVec(75,1686
u32 _setFileStat(111,2688
u32 _setFileStat(148,4102
u32 jf_file_getStat(170,4832
void jf_file_getDirectoryName(200,5546
void jf_file_getFileName(219,6085
u32 jf_file_removeTrailingPathSeparator(247,6761
u32 jf_file_create(265,7142
u32 jf_file_open(291,7722
u32 jf_file_openWithMode(336,8971
u32 jf_file_close(355,9415
u32 jf_file_remove(372,9685
u32 jf_file_rename(394,10109
u32 jf_file_lock(416,10592
u32 jf_file_unlock(439,11012
u32 jf_file_readn(462,11447
u32 jf_file_readWithTimeout(522,12656
u32 jf_file_writen(576,13811
u32 jf_file_readLine(624,14817
u32 jf_filestream_open(662,15682
u32 jf_filestream_flush(676,16024
u32 jf_filestream_seek(688,16233
u32 jf_filestream_close(702,16507
boolean_t jf_filestream_isEndOfFile(714,16696
u32 jf_filestream_readn(727,16917
u32 jf_filestream_readVec(752,17435
u32 jf_filestream_writeVec(764,17662
u32 jf_filestream_readVecOffset(775,17892
u32 jf_filestream_writeVecOffset(788,18161
u32 jf_filestream_writen(800,18458
u32 jf_filestream_readLine(815,18820
u32 jf_filestream_copyFile(856,19808
olint_t jf_filestream_getChar(886,20613
boolean_t jf_file_isDirFile(891,20694
boolean_t jf_file_isRegFile(901,20873
boolean_t jf_file_isCharDevice(911,21052
boolean_t jf_file_isBlockDevice(921,21234
boolean_t jf_file_isFifoFile(931,21417
boolean_t jf_file_isSockFile(941,21598
boolean_t jf_file_isLinkFile(951,21779

files/directory.c,656
typedef jf_dir_t internal_dir_t;37,756
    HANDLE id_hDir;41,829
    HANDLE id_hFind;42,849
    olchar_t id_strDirName[id_strDirName43,870
} internal_dir_t;44,912
static u32 _getFirstDirEntry(48,1018
static u32 _getNextDirEntry(87,2217
static boolean_t _isIgnoreEntry(126,3291
static u32 _traversalDirectory(137,3511
u32 jf_dir_open(190,5158
u32 jf_dir_close(227,6183
u32 jf_dir_getFirstDirEntry(250,6630
u32 jf_dir_getNextDirEntry(255,6749
u32 jf_dir_create(260,6866
u32 jf_dir_remove(285,7386
u32 jf_dir_traversal(305,7768
u32 jf_dir_parse(319,8127
FILESAPI u32 FILESCALL jf_dir_scan(365,9518
olint_t jf_dir_compareDirEntry(414,10736

files/common.h,58
#define FILES_COMMON_H14,189
    #define ssize_t 23,497

files/conffile.c,407
#define COMMENT_INDICATOR 27,555
    jf_filestream_t * ijc_pjfConfFile;31,603
    u8 ijc_u8Reserved[ijc_u8Reserved32,642
} internal_jf_conffile_t;33,668
static olint_t _readLineFromFile(49,1167
static void _skipBlank(100,2418
static u32 _getValueStringByTag(133,3174
u32 jf_conffile_open(176,4399
u32 jf_conffile_close(199,4975
u32 jf_conffile_getInt(216,5302
u32 jf_conffile_getString(254,6326

crypto/prng/seed.h,34
#define CRYPTO_PRNG_SEED_H13,127

crypto/prng/seed.c,172
    #define RANDOM_DEV 49,1110
static u32 _getSeedFromSystem(56,1290
static u32 _getSeedFromProcess(132,3351
static u32 _getSeedFromTime(150,3648
u32 getSeed(176,4169

crypto/prng/prngcommon.h,67
#define CRYPTO_PRNG_COMMON_H14,204
#define ENTROPY_NEEDED 24,547

crypto/prng/prng.c,688
#define PRNG_POOL_SIZE 35,716
    boolean_t ip_bInitialized;39,767
    boolean_t ip_bPoolStirred;40,798
    u8 ip_u8Reserved[ip_u8Reserved41,829
    jf_mutex_t ip_jmLock;43,855
    u32 ip_u32PoolSize;45,882
    u32 ip_u32PoolIndex;46,906
    u8 ip_u8Pool[ip_u8Pool47,931
    u8 ip_u8Reserved2;48,965
    u8 ip_u8Md[ip_u8Md50,989
    u32 ip_u32NumOfGet;51,1031
    oldouble_t ip_dbEntropy;52,1055
} internal_prng_t;54,1085
static internal_prng_t ls_ipPrng;56,1105
static u32 _getPrngData(60,1221
#define DUMMY_SEED 93,2137
u32 jf_prng_init(180,5071
u32 jf_prng_fini(202,5524
u32 jf_prng_getData(214,5720
u32 jf_prng_getPseudoData(230,6047
u32 jf_prng_seed(241,6282

crypto/common/clrmem.c,61
static u8 ls_u8ClearMemChar 22,468
void clearMemory(27,663

crypto/common/clrmem.h,38
#define CRYPTO_COMMON_CLRMEM_H13,139

crypto/cgmac/hmac.c,64
u32 jf_cgmac_doHmacMd5(31,720
u32 jf_cgmac_doHmacSha1(81,2141

crypto/cghash/cghashcommon.h,268
#define CGHASH_COMMON_H13,165
#define SIZEOF_SHORT 21,453
#define SIZEOF_INT 22,477
#define SIZEOF_LONG 23,499
#define SIZEOF_UNSIGNED_SHORT 25,523
#define SIZEOF_UNSIGNED_INT 26,556
#define SIZEOF_UNSIGNED_LONG 27,587
#define SIZEOF_UNSIGNED_LONG_LONG 28,619

crypto/cghash/sha1.h,68
#define CRYPTO_CGHASH_SHA1_H13,158
#define SHA1_BLOCK_SIZE 22,471

crypto/cghash/md5.h,66
#define CRYPTO_CGHASH_MD5_H13,144
#define MD5_BLOCK_SIZE 22,436

crypto/cghash/sha1.c,1183
typedef u8 sha1_uint8_t;60,1868
typedef short int sha1_int16plus_t;63,1916
typedef int       sha1_int16plus_t;65,1974
typedef long int  sha1_int16plus_t;67,2032
typedef unsigned short int     sha1_uint32_t;73,2200
typedef u32           sha1_uint32_t;75,2283
typedef unsigned long int      sha1_uint32_t;77,2357
typedef unsigned long long int sha1_uint32_t;79,2440
    shaSuccess 85,2577
    shaNull,86,2597
    shaStateError 87,2650
#define SHA1HashSize 90,2710
typedef struct SHA1Context 93,2818
    sha1_uint32_t Intermediate_Hash[Intermediate_Hash94,2847
    sha1_uint32_t Length_Low;95,2921
    sha1_uint32_t Length_High;96,3003
    sha1_int16plus_t Message_Block_Index;97,3085
    sha1_uint8_t Message_Block[Message_Block98,3175
    int Computed;99,3257
    int Corrupted;100,3340
} SHA1Context;101,3432
#define SHA1CircularShift(113,3836
static int SHA1Reset(120,4044
static int SHA1Result(147,4833
static int SHA1Input(176,5676
static void SHA1ProcessMessageBlock(211,6850
static void SHA1PadMessage(298,9667
void jf_cghash_initSha1(337,11463
u32 jf_cghash_updateSha1(342,11569
u32 jf_cghash_finalSha1(357,11940
u32 jf_cghash_doSha1(374,12335

crypto/cghash/md5.c,1226
typedef u8 *POINTER;POINTER67,2273
typedef unsigned short int     UINT4;71,2369
typedef u32           UINT4;73,2444
typedef unsigned long int      UINT4;75,2510
typedef unsigned long long int UINT4;77,2585
  UINT4 state[state84,2735
  UINT4 count[count85,2806
  u8 buffer[buffer86,2877
} MD5_CTX;87,2937
static u8 PADDING[PADDING98,3295
#define F(105,3570
#define G(106,3618
#define H(107,3666
#define I(108,3703
#define ROTATE_LEFT(111,3785
#define FF(115,3979
#define GG(120,4115
#define HH(125,4251
#define II(130,4387
static void MD5Init(137,4598
static void MD5Update(153,5040
static void MD5Final(187,6231
static void MD5Transform(213,6999
#define S11 222,7181
#define S12 223,7195
#define S13 224,7210
#define S14 225,7225
#define S21 244,8113
#define S22 245,8127
#define S23 246,8141
#define S24 247,8156
#define S31 266,9054
#define S32 267,9068
#define S33 268,9083
#define S34 269,9098
#define S41 288,9996
#define S42 289,10010
#define S43 290,10025
#define S44 291,10040
static void Encode(320,11160
static void Decode(338,11605
void jf_cghash_initMd5(359,12060
void jf_cghash_updateMd5(364,12156
void jf_cghash_finalMd5(372,12372
void jf_cghash_doMd5(382,12596

crypto/encrypt/encrypt.c,291
static void _setEncryptIv(35,823
static u32 _setEncryptKey(40,905
static u32 _setDecryptKey(60,1314
u32 jf_encrypt_encryptFile(82,1804
u32 jf_encrypt_decryptFile(152,3563
u32 jf_encrypt_encryptString(226,5461
u32 jf_encrypt_decryptString(272,6615
void jf_encrypt_freeString(306,7513

archive/extract.c,489
static u32 _readDataForArchive(29,681
static u32 _getMemberFilename(46,1064
static u32 _validateHeader(105,2811
static u32 _getFileMode(113,2944
static u32 _writeFile(136,3958
static u32 _extractRegularFile(181,5261
static u32 _extractDir(221,6473
static u32 _extractDeviceFile(235,6760
static u32 _extractHardLinkFile(247,6941
static u32 _extractSymLinkFile(259,7124
static u32 _extractFifoFile(271,7306
static u32 _extractMemberFile(283,7485
u32 extractFromArchive(321,8496

archive/arfile.h,219
#define ARCHIVE_ARFILE_H13,135
typedef void ar_file_t;23,505
    boolean_t afp_bExtract;27,547
    u8 afp_u8Reserved[afp_u8Reserved28,575
    u32 afp_u32Reserved1[afp_u32Reserved129,601
} ar_file_param_t;30,630

archive/archivecommon.h,2376
#define ARCHIVE_COMMON_H13,180
#define AH_TYPE_REGULAR 25,603
#define AH_TYPE_HARD_LINK 26,656
#define AH_TYPE_SYM_LINK 27,706
#define AH_TYPE_CHAR 28,760
#define AH_TYPE_BLOCK 29,817
#define AH_TYPE_DIR 30,870
#define AH_TYPE_FIFO 31,920
#define AH_TYPE_SOCK 32,970
#define AH_NAME_LEN_LONG 35,1059
#define AH_MAGIC 38,1138
#define AH_VERSION 41,1177
#define AH_DIR_DEPTH_NULL 44,1233
#define AH_MODE_SUID 47,1281
#define AH_MODE_SGID 48,1315
#define AH_MODE_SVTX 49,1349
#define AH_MODE_UREAD 50,1383
#define AH_MODE_UWRITE 51,1417
#define AH_MODE_UEXEC 52,1451
#define AH_MODE_GREAD 53,1485
#define AH_MODE_GWRITE 54,1519
#define AH_MODE_GEXEC 55,1553
#define AH_MODE_OREAD 56,1587
#define AH_MODE_OWRITE 57,1621
#define AH_MODE_OEXEC 58,1655
#define AH_NAME_LEN 61,1717
#define AH_MODE_LEN 62,1740
#define AH_USER_ID_LEN 63,1763
#define AH_USER_GROUP_ID_LEN 64,1788
#define AH_SIZE_LEN 65,1819
#define AH_TIME_LEN 66,1842
#define AH_MAGIC_LEN 67,1865
#define AH_VERSION_LEN 68,1888
#define AH_USER_NAME_LEN 69,1913
#define AH_GROUP_NAME_LEN 70,1941
typedef struct archive_header72,1971
    u8 ah_u8HeaderFlags[ah_u8HeaderFlags74,2049
    u8 ah_u8DirDepth;75,2078
    u8 ah_u8NameLen;76,2100
    u8 ah_u8Type;77,2121
    u8 ah_u8Name[ah_u8Name78,2139
    u8 ah_u8Mode[ah_u8Mode79,2170
    u8 ah_u8UserId[ah_u8UserId80,2201
    u8 ah_u8GroupId[ah_u8GroupId81,2237
    u8 ah_u8Size[ah_u8Size82,2280
    u8 ah_u8ModifyTime[ah_u8ModifyTime83,2311
    u8 ah_u8Magic[ah_u8Magic84,2348
    u8 ah_u8Version[ah_u8Version85,2370
    u8 ah_u8Chksum[ah_u8Chksum86,2407
    u8 ah_u8UserName[ah_u8UserName87,2430
    u8 ah_u8GroupName[ah_u8GroupName88,2470
} archive_header_t;89,2512
#define ARCHIVE_BLOCK_SIZE 91,2533
typedef union archive_block94,2567
    u8 ab_u8Buffer[ab_u8Buffer96,2597
    archive_header_t ab_ahHeader;97,2637
} archive_block_t;98,2671
#define MAX_BLOCKS 100,2691
#define MAX_ARCHIVE_BUFFER_LEN 102,2718
    ar_file_t * fh_pafArchive;106,2807
    olchar_t fh_strFullpath[fh_strFullpath107,2838
    u8 * fh_pu8Buffer;108,2881
    olsize_t fh_sBuf;109,2904
    boolean_t fh_bListArchive;110,2926
    boolean_t fh_bVerbose;111,2957
    u8 fh_u8Reserved[fh_u8Reserved112,2984
    u8 fh_u8Reserved2[fh_u8Reserved2113,3009
} file_handler_t;114,3036
#define ARCHIVE_ALIGH_SIZE(116,3055

archive/create.h,32
#define ARCHIVE_CREATE_H13,145

archive/arfile.c,546
#define IAF_BUF_LEN 25,506
    boolean_t iaf_bExtract;29,551
    u8 iaf_u8Reserved[iaf_u8Reserved30,579
    jf_filestream_t * iaf_pjfArchive;31,605
    u8 * iaf_pu8Buffer;32,643
    olsize_t iaf_sBufLen;33,667
    olsize_t iaf_sOffset;34,693
    olsize_t iaf_sTotalLen;35,719
} internal_ar_file_t;36,747
static u32 _flushArBuffer(39,850
static u32 _fillArBuffer(58,1255
u32 createArFile(74,1680
u32 destroyArFile(113,2663
u32 readArFile(135,3143
u32 writeArFile(175,4179
u32 seekArFile(213,5181
boolean_t isEndOfArFile(242,5885

archive/extract.h,33
#define ARCHIVE_EXTRACT_H13,133

archive/archive.c,62
u32 jf_archive_create(36,820
u32 jf_archive_extract(83,2060

archive/create.c,558
static u32 _alignData(29,627
static u32 _setName(44,1034
static u32 _countDirDepth(67,1746
static u32 _setDirDepth(102,2628
static u32 _setFileMode(125,3147
static u32 _setCommonFields(148,4366
static u32 _saveDir(180,5399
static u32 _copyRegularFile(197,5905
static u32 _saveRegularFile(227,6685
static u32 _saveDeviceFile(257,7593
static u32 _saveLinkFile(289,8416
static u32 _saveFifoFile(316,9034
static u32 _saveSockFile(343,9648
static u32 _addFileToArchive(370,10262
static u32 _handleMemberFile(410,11441
u32 writeToArchive(426,11930

ifmgmt/ipaddr.c,573
static u32 _getIpV4LocalIpAddrList(40,921
u32 jf_ipaddr_getLocalIpAddrList(178,5094
u32 jf_ipaddr_convertSockAddrToIpAddr(196,5625
u32 jf_ipaddr_convertIpAddrToSockAddr(236,6740
u32 jf_ipaddr_setIpAddrToInaddrAny(282,8065
u32 jf_ipaddr_setIpV4AddrToInaddrAny(306,8578
u32 jf_ipaddr_setIpV6AddrToInaddrAny(316,8779
void jf_ipaddr_setIpV4Addr(326,8980
boolean_t jf_ipaddr_isIpV4Addr(334,9168
u32 jf_ipaddr_getIpAddrFromString(344,9340
u32 jf_ipaddr_getIpAddrPortFromString(378,10212
u32 jf_ipaddr_validateIpAddr(429,11429
u32 jf_ipaddr_getStringIpAddr(447,11988

ifmgmt/ifmgmt.c,432
#define SYSTEM_NET_DEV_FILE 26,554
static u32 _getIfmgmtIfAddr(33,703
static u32 _getIfmgmtIfFlag(55,1187
static u32 _getIfmgmtIfHwAddr(96,2164
static u32 _getIfmgmtIf(118,2603
static boolean_t _isValidMacAddress(168,3902
u32 jf_ifmgmt_getAllIf(186,4267
u32 jf_ifmgmt_getIf(254,6085
u32 jf_ifmgmt_upIf(266,6324
u32 jf_ifmgmt_downIf(317,7371
u32 jf_ifmgmt_getStringIfFlags(368,8428
u32 jf_ifmgmt_getMacOfFirstIf(403,9237

webclient/webclient.c,3942
#define MAX_IDLE_SESSIONS 35,857
#define WC_HTTP_SESSION_IDLE_TIMEOUT 40,1060
#define HTTP_CONNECT_RETRY_COUNT 47,1355
#define INITIAL_BUFFER_SIZE 51,1446
enum pipeline_type53,1492
    PIPELINE_UNKNOWN 55,1513
    PIPELINE_YES,57,1639
    PIPELINE_NO,58,1719
#define STARTCHUNK 63,1829
#define ENDCHUNK 64,1857
#define DATACHUNK 65,1885
#define FOOTERCHUNK 66,1913
typedef void  jf_webclient_dataobject_t;68,1942
typedef struct internal_web_request70,1984
#define IWR_MAX_NUM_OF_BUF 72,2022
    olint_t iwr_u32NumOfBuffers;73,2052
    u8 * iwr_pu8Buffer[iwr_pu8Buffer74,2085
    olsize_t iwr_sBuffer[iwr_sBuffer75,2129
    boolean_t iwr_bUserFree[iwr_bUserFree78,2300
    jf_network_mem_owner_t iwr_jnmoMemOwner[iwr_jnmoMemOwner79,2349
    u16 iwr_u16Reserved[iwr_u16Reserved81,2415
    void * iwr_pUser;83,2444
    jf_webclient_fnOnResponse_t iwr_fnOnResponse;84,2466
} internal_web_request_t;85,2516
typedef struct internal_webclient87,2543
    jf_network_chain_object_header_t iw_jncohHeader;89,2579
    jf_network_asocket_t ** iw_ppjnaAsockets;91,2633
    u32 iw_u32NumOfAsockets;92,2679
    jf_hashtree_t iw_jhData;94,2709
    jf_hashtree_t iw_jhIdle;97,2856
    jf_queue_t iw_jqBacklog;100,2997
    jf_network_utimer_t * iw_pjnuUtimer;102,3027
    u32 iw_u32IdleCount;103,3068
    olsize_t iw_sBuffer;105,3094
    jf_network_chain_t *iw_pjncChain;iw_pjncChain107,3120
    jf_mutex_t iw_jmLock;108,3158
} internal_webclient_t;109,3184
typedef struct internal_web_chunkdata111,3209
    u32 iwc_u32Flags;113,3249
    u8 * iwc_pu8Buffer;114,3271
    u32 iwc_u32Offset;115,3295
    u32 iwc_u32MallocSize;116,3318
    olint_t iwc_nBytesLeft;118,3346
} internal_web_chunkdata_t;119,3374
typedef struct internal_web_dataobject121,3403
    u32 iwd_u32PipelineFlags;123,3444
    u32 iwd_u32ActivityCounter;124,3474
    jf_ipaddr_t iwd_jiRemote;126,3507
    u16 iwd_u16Port;127,3537
    u16 iwd_u16Reserved[iwd_u16Reserved128,3558
    internal_webclient_t * iwd_piwParent;130,3587
    boolean_t iwd_bFinHeader;132,3663
    boolean_t iwd_bChunked;134,3734
    boolean_t iwd_bWaitForClose;136,3803
    boolean_t iwd_bInitialRequestAnswered;137,3836
    boolean_t iwd_bPause;138,3879
    u8 iwd_u8Reserved[iwd_u8Reserved139,3905
    u8 * iwd_pu8BodyBuf;143,4033
    u32 iwd_u32BodyOffset;144,4058
    olint_t iwd_nClosing;149,4178
    olint_t iwd_nBytesLeft;150,4204
    u32 iwd_sHeaderLen;152,4233
    u32 iwd_u32ExponentialBackoff;154,4258
    internal_web_chunkdata_t * iwd_piwcChunk;156,4294
    jf_httpparser_packet_header_t * iwd_pjhphHeader;157,4340
    jf_queue_t iwd_jqRequest;159,4394
    jf_network_asocket_t * iwd_pjnaSock;160,4424
    jf_ipaddr_t iwd_jiLocal;162,4466
} internal_web_dataobject_t;164,4496
static olint_t _getStringHashKey(168,4607
static u32 _destroyWebRequest(179,4873
static u32 _newWebRequest(201,5399
static u32 _destroyWebDataobject(230,6083
static u32 _createWebDataobject(287,7879
static u32 _processWebRequest(319,8900
static u32 _preWebclientProcess(421,12453
static u32 _webclientTimerInterruptSink(459,13653
static u32 _webclientTimerSink(473,14031
static u32 _webclientFinishedResponse(543,16751
static u32 _processChunk(630,20152
static u32 _retrySink(799,26549
static u32 _webclientOnConnect(841,28042
static u32 _webclientOnDisconnect(887,29564
static u32 _webclientOnSendOK(957,31846
static u32 _parseHttpHeader(966,32030
static u32 _webclientOnData(1119,38494
static u32 _webRequestStaticMemory(1245,43422
static u32 _internalWebclientOnResponse(1270,44143
u32 jf_webclient_destroy(1282,44456
u32 jf_webclient_create(1327,45823
u32 jf_webclient_pipelineWebRequest(1401,48081
u32 jf_webclient_pipelineWebRequestEx(1434,49132
jf_httpparser_packet_header_t * jf_webclient_getPacketHeaderFromDataobject(1492,51201
u32 jf_webclient_deleteWebRequests(1498,51402
u32 jf_webclient_resumeDataobject(1559,53411

jiutai/logger.h,985
#define JIUFENG_LOGGER_H15,366
#undef LOGGERAPI22,575
#undef LOGGERCALL23,592
        #define LOGGERAPI 26,661
        #define LOGGERCALL27,710
        #define LOGGERAPI29,747
        #define LOGGERCALL 30,773
    #define LOGGERAPI33,825
    #define LOGGERCALL34,847
#define JF_LOGGER_TRACE_NONE 39,959
#define JF_LOGGER_TRACE_ERROR 40,997
#define JF_LOGGER_TRACE_INFO 41,1035
#define JF_LOGGER_TRACE_DEBUG 42,1073
#define JF_LOGGER_TRACE_DATA 43,1111
#define JF_LOGGER_MAX_MSG_SIZE 45,1150
    boolean_t jlip_bLogToStdout;51,1317
    boolean_t jlip_bLogToSysLog;53,1383
    boolean_t jlip_bLogToFile;55,1489
    boolean_t jlip_bLogToTTY;58,1627
    u8 jlip_u8TraceLevel;60,1680
    u8 jlip_u8Reserved[jlip_u8Reserved61,1706
    olsize_t jlip_sLogFile;63,1793
    u8 * jlip_pu8RemoteMachineIP;65,1892
    olchar_t * jlip_pstrLogFilePath;67,1962
    olchar_t * jlip_pstrTTY;69,2053
    olchar_t * jlip_pstrCallerName;71,2160
} jf_logger_init_param_t;72,2196

jiutai/datavec.h,647
#define JIUTAI_DATAVEC_H13,134
    u8 * dve_pu8Buf;28,542
    olsize_t dve_sBuf;29,580
    olsize_t dve_sOffset;30,633
} data_vec_entry_t;31,702
    u16 dv_u16MaxEntry;37,774
    u16 dv_u16CurEntry;38,837
    u32 dv_u32Reserved8[dv_u32Reserved839,909
    data_vec_entry_t * dv_pdveEntry;40,937
} data_vec_t;41,974
static inline void initDataVec(44,1069
static inline void setDataVec(58,1329
static inline data_vec_entry_t * locateDataVec(83,1844
static inline olsize_t copyDataToVec(110,2398
static inline boolean_t isLastVecEntry(141,3254
static inline u16 newDataVecMaxEntry(152,3558
static inline void convertDataVec(168,3898

jiutai/ollimit.h,252
#define JIUTAI_LIMIT_H12,122
#define MAX_PROGRAM_NAME_LEN 19,388
#define MAX_TRAP_SINKS 21,428
#define MAX_RECIPIENTS 22,466
#define MAX_DATA_TRANSFER_SIZE	24,505
#define MAX_PATH_LEN 26,546
#define BYTES_PER_WORD 28,586
#define MAC_LEN 30,637

jiutai/clieng.h,1627
#define JIUFENG_CLIENG_H14,207
#undef CLIENGAPI25,495
#undef CLIENGCALL26,512
        #define CLIENGAPI 30,606
        #define CLIENGCALL31,655
        #define CLIENGAPI33,692
        #define CLIENGCALL 34,718
    #define CLIENGAPI37,770
    #define CLIENGCALL38,792
typedef void  jf_clieng_cmd_t;43,904
typedef void  jf_clieng_cmd_set_t;44,935
#define JF_CLIENG_MAX_OUTPUT_LINE_LEN 46,971
#define JF_CLIENG_MAX_COMMAND_LINE_SIZE 48,1020
#define JF_CLIENG_MAX_CLI_NAME_LEN 50,1070
typedef u32 (* jf_clieng_fnPrintGreeting_t)52,1119
typedef u32 (* jf_clieng_fnPreEnterLoop_t)53,1180
typedef u32 (* jf_clieng_fnPostExitLoop_t)54,1240
    olsize_t jcip_sMaxCmdLine;59,1370
    olsize_t jcip_sCmdHistroyBuf;61,1457
    olchar_t jcip_strCliName[jcip_strCliName63,1511
    jf_clieng_fnPrintGreeting_t jcip_fnPrintGreeting;64,1569
    jf_clieng_fnPreEnterLoop_t jcip_fnPreEnterLoop;65,1623
    jf_clieng_fnPostExitLoop_t jcip_fnPostExitLoop;66,1675
    void * jcip_pMaster;67,1727
    olchar_t * jcip_pstrNewLine;69,1800
    u32 jcip_u32MaxCmdSet;70,1833
    boolean_t jcip_bEnableScriptEngine;71,1860
    u8 jcip_u8Reserved[jcip_u8Reserved72,1900
    FILE * jcip_fhOutput;73,1927
    olchar_t  jcip_strInputCmd[jcip_strInputCmd74,1953
} jf_clieng_init_param_t;75,2018
    olchar_t * jcc_pstrCaption;80,2135
    u32 jcc_u32Len;81,2167
} jf_clieng_caption_t;82,2187
#define JF_CLIENG_CAP_FULL_LINE 84,2211
#define JF_CLIENG_CAP_HALF_LINE 85,2276
typedef u32 (* jf_clieng_fnSetDefaultParam_t)87,2346
typedef u32 (* jf_clieng_fnParseCmd_t)88,2424
typedef u32 (* jf_clieng_fnProcessCmd_t)90,2532

jiutai/process.c,706
static u32 _setThreadAttr(41,941
static u32 _runCommandLine(54,1268
static void setProcessTerminationReason(72,1630
void getPidFilename(98,2454
u32 formCmdLineArguments(105,2676
u32 switchToDaemon(172,4504
boolean_t bAlreadyRunning(219,5374
void initProcessId(328,8495
boolean_t isValidProcessId(333,8595
u32 createProcess(348,8865
u32 terminateProcess(391,9784
u32 waitForChildProcessTermination(422,10476
void initThreadId(511,12653
boolean_t isValidThreadId(516,12748
u32 createThread(531,13021
u32 terminateThread(571,14031
u32 waitForThreadTermination(596,14579
u32 registerSignalHandlers(616,15073
u32 getCurrentWorkingDirectory(682,16745
u32 setCurrentWorkingDirectory(706,17261

jiutai/uuid.h,934
#define JIUFENG_UUID_H15,316
#undef UUIDAPI22,523
#undef UUIDCALL23,538
        #define UUIDAPI 27,628
        #define UUIDCALL28,675
        #define UUIDAPI30,710
        #define UUIDCALL 31,734
    #define UUIDAPI34,784
    #define UUIDCALL35,804
#define JF_UUID_LEN_BIN 42,956
#define JF_UUID_LEN_STR 46,1067
#define JF_UUID_LEN_HEX 50,1173
#define JF_UUID_LEN_SIV 55,1310
    JF_UUID_VER_1 63,1467
    JF_UUID_VER_3 64,1517
    JF_UUID_VER_4,65,1585
    JF_UUID_VER_5,66,1661
} jf_uuid_ver_t;67,1730
    JF_UUID_FMT_BIN 73,1783
    JF_UUID_FMT_STR,74,1827
    JF_UUID_FMT_HEX,75,1874
    JF_UUID_FMT_SIV,76,1918
} jf_uuid_fmt_t;77,1987
    boolean_t jup_bMulticastMac;82,2097
    u8 jup_u8Reserved[jup_u8Reserved83,2130
    jf_uuid_fmt_t jup_ufFmt;85,2179
    u8 jup_u8Reserved2[jup_u8Reserved286,2208
    olchar_t * jup_pstrName;88,2275
    u8 * jup_pu8NameSpace;90,2363
} jf_uuid_param_t;91,2390

jiutai/archive.h,787
#define JIUFENG_ARCHIVE_H13,140
#undef ARCHIVEAPI22,390
#undef ARCHIVECALL23,408
        #define ARCHIVEAPI 27,504
        #define ARCHIVECALL28,554
        #define ARCHIVEAPI30,592
        #define ARCHIVECALL 31,619
    #define ARCHIVEAPI34,672
    #define ARCHIVECALL35,695
    boolean_t jacp_bCompress;46,987
    boolean_t jacp_bFastest;47,1017
    boolean_t jacp_bBestCompress;48,1046
    boolean_t jacp_bVerbose;49,1080
    u8 jacp_u8Reserved[jacp_u8Reserved50,1109
    u8 jacp_u8Reserved2[jacp_u8Reserved251,1136
} jf_archive_create_param_t;52,1165
    boolean_t jaep_bListArchive;56,1212
    boolean_t jaep_bVerbose;57,1245
    u8 jaep_u8Reserved[jaep_u8Reserved58,1274
    u8 jaep_u8Reserved2[jaep_u8Reserved259,1301
} jf_archive_extract_param_t;60,1330

jiutai/crc32c.c,196
static u32 ls_u32CrcTable[ls_u32CrcTable23,457
#define TB_INIT 91,4079
#define TB_INIT_REFLECTED 92,4106
#define TB_XOROT 93,4143
void jf_crc_crc32c(101,4501
void jf_crc_crc32cVec(119,5014

jiutai/respool.h,622
#define JIUTAI_RESPOOL_H15,343
typedef void  resource_t;29,774
typedef void  resource_pool_t;33,846
typedef void  resource_data_t;37,934
typedef u32 (* fnCreateResource_t)52,1388
typedef u32 (* fnDestroyResource_t)66,1836
    olchar_t * rpp_pstrName;74,2061
    u32 rpp_u32MinResources;76,2167
    u32 rpp_u32MaxResources;78,2270
    boolean_t rpp_bImmediateRelease;80,2377
    u8 rpp_u8Reserved[rpp_u8Reserved81,2414
    fnCreateResource_t rpp_fnCreateResource;83,2494
    fnDestroyResource_t rpp_fnDestroyResource;85,2595
    u32 rpp_u32Reserved2[rpp_u32Reserved287,2643
} resource_pool_param_t;88,2672

jiutai/encode.h,539
#define JIUFENG_ENCODE_H15,214
#undef ENCODEAPI24,466
#undef ENCODECALL25,483
        #define ENCODEAPI 29,577
        #define ENCODECALL30,626
        #define ENCODEAPI32,663
        #define ENCODECALL 33,689
    #define ENCODEAPI36,741
    #define ENCODECALL37,763
#define JF_ENCODE_MAX_HUFFMAN_CODE_LEN 44,956
typedef struct huffman_code46,1003
    u16 jehc_u16Symbol;49,1070
    u16 jehc_u16CodeLen;51,1117
    u32 jehc_u32Freq;53,1177
    bit_array_t jehc_baCode[jehc_baCode55,1229
} jf_encode_huffman_code_t;56,1290

jiutai/stringparse.h,800
#define JIUFENG_STRINGPARSE_H14,207
#undef STRINGPARSEAPI22,442
#undef STRINGPARSECALL23,464
        #define STRINGPARSEAPI 27,568
        #define STRINGPARSECALL28,622
        #define STRINGPARSEAPI30,664
        #define STRINGPARSECALL 31,695
    #define STRINGPARSEAPI34,752
    #define STRINGPARSECALL35,779
typedef struct jf_string_parse_result_field44,1004
    olchar_t * jsprf_pstrData;47,1067
    olsize_t jsprf_sData;49,1129
    struct jf_string_parse_result_field * jsprf_pjsprfNext;51,1177
} jf_string_parse_result_field_t;52,1237
typedef struct jf_string_parse_result56,1293
    jf_string_parse_result_field_t * jspr_pjsprfFirst;59,1357
    jf_string_parse_result_field_t * jspr_pjsprfLast;61,1435
    u32 jspr_u32NumOfResult;63,1519
} jf_string_parse_result_t;64,1548

jiutai/jtsqlite.c,497
#define DB_LOCK_WAIT 28,611
#define MAX_TRANSACTION_RETRY 32,702
#define TRANSACTION_RETRY_MIN_TIME 36,804
#define TRANSACTION_RETRY_MAX_TIME 39,906
static u32 _jtSqliteEvalSqlStmt(43,1032
static u32 _jtSqliteExecSql(98,2678
static u32 _jtSqliteExecSqlTransaction(131,3528
u32 jf_sqlite_init(159,4380
u32 jf_sqlite_fini(213,5786
u32 jf_sqlite_rollbackTransaction(228,6039
u32 jf_sqlite_startTransaction(249,6512
u32 jf_sqlite_commitTransaction(267,6922
u32 jf_sqlite_execSql(288,7389

jiutai/olbasic.h,4416
#define JIUTAI_OLBASIC_H12,132
    #define optarg 35,736
#define IN42,879
#define OUT43,890
typedef char                        olchar_t;45,903
#define BITS_PER_OLCHAR 46,949
#define BYTES_PER_OLCHAR 47,989
typedef unsigned char               u8;49,1030
#define U8_MAX 50,1070
#define BITS_PER_U8 51,1113
#define BYTES_PER_U8 52,1153
typedef signed char                 s8;54,1194
#define S8_MAX 55,1234
#define BITS_PER_S8 56,1277
#define BYTES_PER_S8 57,1317
typedef unsigned short              u16;59,1358
#define U16_MAX 60,1399
#define BITS_PER_U16 61,1444
#define BYTES_PER_U16 62,1485
typedef signed short                s16;64,1526
#define S16_MAX 65,1567
#define BITS_PER_S16 66,1612
#define BYTES_PER_S16 67,1653
typedef short                       olshort_t;69,1694
#define OLSHORT_MAX 70,1741
#define BITS_PER_OLSHORT 71,1785
#define BYTES_PER_OLSHORT 72,1834
typedef unsigned int                u32;74,1885
#define U32_MAX 75,1926
#define BITS_PER_U32 76,1975
#define BYTES_PER_U32 77,2016
typedef signed int                  s32;79,2057
#define S32_MAX 80,2098
#define BITS_PER_S32 81,2147
#define BYTES_PER_S32 82,2188
typedef int                          olint_t;84,2229
#define OLINT_MAX 85,2275
#define BITS_PER_OLINT 86,2320
#define BYTES_PER_OLINT 87,2370
typedef unsigned long                ulong;89,2422
    #define ULONG_MAX 91,2484
#define BITS_PER_ULONG 93,2543
typedef signed long                  slong;95,2586
#define SLONG_MAX 96,2630
#define BITS_PER_SLONG 97,2682
    typedef unsigned long long       u64;100,2744
    typedef unsigned __int64         u64;102,2809
#define U64_MAX 104,2858
#define BITS_PER_U64 105,2919
#define BYTES_PER_U64 106,2961
    typedef long long                s64;109,3022
    typedef __int64                  s64;111,3087
#define S64_MAX 113,3136
#define BITS_PER_S64 114,3197
#define BYTES_PER_S64 115,3239
typedef float                        olfloat_t;117,3281
#define BYTES_PER_OLFLOAT 118,3329
typedef double                       oldouble_t;120,3371
#define BYTES_PER_OLDOUBLE 121,3420
typedef s32                          olsize_t;123,3462
#define OLSIZE_MAX 124,3509
typedef u8                           boolean_t;126,3555
    #define TRUE 128,3616
    #define FALSE 131,3680
typedef s32                          olindex_t;134,3731
typedef s32                          olid_t;135,3779
typedef time_t                       oltime_t;136,3824
    #define ol_memset 139,3893
    #define ol_memcpy 140,3937
    #define ol_memcmp 141,3981
    #define ol_memchr 142,4025
    #define ol_bzero 143,4069
    #define ol_strcmp 144,4112
    #define ol_strncmp 145,4156
    #define ol_strcasecmp 146,4201
    #define ol_strncasecmp 147,4247
    #define ol_sprintf 148,4294
    #define ol_snprintf 149,4340
    #define ol_vsnprintf 150,4387
    #define ol_printf 151,4435
    #define ol_sscanf 152,4480
    #define ol_strcpy 153,4525
    #define ol_strncpy 154,4570
    #define ol_strcat 155,4616
    #define ol_strncat 156,4661
    #define ol_strlen 157,4707
    #define ol_random(158,4752
    #define ol_srand 159,4796
    #define ol_time 160,4839
    #define ol_memset 163,4935
    #define ol_memcpy 164,4979
    #define ol_memcmp 165,5023
    #define ol_memchr 166,5067
    #define ol_bzero 167,5111
    #define ol_strcmp 168,5154
    #define ol_strncmp 169,5198
    #define ol_strcasecmp 170,5243
    #define ol_strncasecmp 171,5291
    #define ol_sprintf 172,5340
    #define ol_snprintf 173,5385
    #define ol_vsnprintf 174,5431
    #define ol_vsprintf 175,5478
    #define ol_printf 176,5524
    #define ol_sscanf 177,5568
    #define ol_strcpy 178,5612
    #define ol_strncpy 179,5656
    #define ol_strcat 180,5701
    #define ol_strncat 181,5745
    #define ol_strlen 182,5790
    #define ol_random(183,5834
    #define ol_srand 184,5880
    #define ol_htonl 185,5923
    #define ol_ntohl 186,5966
    #define ol_time 187,6009
    #define PATH_SEPARATOR 191,6080
    #define LINE_TERMINATOR 192,6122
    #define PATH_SEPARATOR 194,6187
    #define LINE_TERMINATOR 195,6228
    #define inline 199,6299
    #define MAX(203,6352
    #define MIN(207,6421
    #define ALIGN(211,6492
    #define ABS(215,6567
#define ARRAY_SIZE(218,6625
static inline int before(221,6759
#define after(225,6841
static inline int between(228,6911

jiutai/cgmac.h,267
#define JIUFENG_CGMAC_H16,357
#undef CGMACAPI24,585
#undef CGMACCALL25,601
        #define CGMACAPI 29,693
        #define CGMACCALL30,741
        #define CGMACAPI32,777
        #define CGMACCALL 33,802
    #define CGMACAPI36,853
    #define CGMACCALL37,874

jiutai/crc32c.h,223
#define JIUTAI_CRC32C_H16,396
#define JF_CRC_CRC32C_FLAG_INIT_RESULT 25,721
#define JF_CRC_CRC32C_FLAG_NETWORK_BYTE_ORDER 27,820
    u8 * jccv_pu8Buffer;32,971
    u32 jccv_u32Len;33,996
} jf_crc_crc32c_vec_t;34,1017

jiutai/syncsem.h,106
#define JIUTAI_SYNCSEM_H13,154
    olint_t js_nSem;26,560
    HANDLE js_hSem;28,604
} jf_sem_t;30,631

jiutai/syncmutex.h,124
#define JIUTAI_SYNCMUTEX_H13,154
    pthread_mutex_t jm_ptmMutex;26,562
    HANDLE jm_hMutex;28,618
} jf_mutex_t;30,647

jiutai/menu.h,195
#define JIUTAI_MENU_H19,644
typedef void  jf_menu_t;30,1012
typedef u32 (* jf_menu_fnPreShow_t)32,1038
typedef u32 (* jf_menu_fnPostShow_t)34,1089
typedef u32 (* jf_menu_fnHandler_t)36,1141

jiutai/httpparser.h,1588
#define JIUFENG_HTTPPARSER_H14,199
#undef HTTPPARSERAPI21,412
#undef HTTPPARSERCALL22,433
        #define HTTPPARSERAPI 26,535
        #define HTTPPARSERCALL27,588
        #define HTTPPARSERAPI29,629
        #define HTTPPARSERCALL 30,659
    #define HTTPPARSERAPI33,715
    #define HTTPPARSERCALL34,741
typedef struct jf_httpparser_packet_header_field40,937
    olchar_t * jhphf_pstrName;42,988
    olsize_t jhphf_sName;43,1019
    olchar_t * jhphf_pstrData;44,1045
    olsize_t jhphf_sData;45,1076
    boolean_t jhphf_bAlloc;47,1103
    u8 jhphf_u8Reserved[jhphf_u8Reserved48,1131
    struct jf_httpparser_packet_header_field * jhphf_pjhphfNext;50,1160
} jf_httpparser_packet_header_field_t;51,1225
typedef struct jf_httpparser_packet_header53,1265
    olchar_t * jhph_pstrDirective;55,1310
    olsize_t jhph_sDirective;56,1345
    olchar_t * jhph_pstrDirectiveObj;57,1375
    olsize_t jhph_sDirectiveObj;58,1413
    olint_t jhph_nStatusCode;59,1446
    olchar_t * jhph_pstrStatusData;60,1476
    olsize_t jhph_sStatusData;61,1512
    olchar_t * jhph_pstrVersion;62,1543
    olsize_t jhph_sVersion;63,1576
    u8 * jhph_pu8Body;64,1604
    olsize_t jhph_sBody;65,1627
    boolean_t jhph_bAllocDirective;67,1653
    boolean_t jhph_bAllocStatus;68,1689
    boolean_t jhph_bAllocVersion;69,1722
    boolean_t jhph_bAllocBody;70,1756
    u8 jhph_bReserved[jhph_bReserved71,1787
    jf_httpparser_packet_header_field_t * jhph_pjhphfFirst;73,1814
    jf_httpparser_packet_header_field_t * jhph_pjhphfLast;74,1874
} jf_httpparser_packet_header_t;75,1933

jiutai/bitop.h,454
#define JIUTAI_BITOP_H14,261
#define BITOP_MASK(25,681
#define BITOP_GET(30,878
#define BITOP_GET_BIT(35,1053
#define BITOP_SET(39,1179
#define BITOP_SET_BIT(45,1423
#define BITOP_CLEAR(49,1551
#define BITOP_CLEAR_BIT(53,1677
#define BITOP_BIT(57,1804
#define BITOP_QUAD(61,1934
#define BITOP_OCTET(67,2143
#define BITOP_POW2(72,2299
#define BITOP_SHL(76,2378
#define BITOP_SHR(80,2463
#define BITOP_ROL(84,2563
#define BITOP_ROR(90,2773

jiutai/bitarray.h,908
#define JIUTAI_BITARRAY_H25,926
typedef u8  bit_array_t;33,1216
#define BA_BITS_PER_BIT_ARRAY 40,1442
#define BA_CHARS(43,1524
#define BA_BITS(46,1593
#define BA_BIT_CHAR(49,1683
#define BA_BIT_IN_CHAR(52,1783
#define BA_BITS_TO_CHARS(55,1925
#define INIT_BIT_ARRAY(57,1994
#define DUMP_BIT_ARRAY(61,2078
#define SET_BIT_ARRAY(80,2936
#define LSHIFT_BIT_ARRAY(84,3032
#define RSHIFT_BIT_ARRAY(131,5632
#define AND_BIT_ARRAY(177,8152
#define OR_BIT_ARRAY(191,8840
#define XOR_BIT_ARRAY(205,9528
#define NOT_BIT_ARRAY(219,10216
#define COPY_BIT_ARRAY(233,10870
#define INCREMENT_BIT_ARRAY(242,11236
#define DECREMENT_BIT_ARRAY(262,12249
static inline void setBitArrayBit(285,13333
static inline void clearBitArrayBit(291,13486
static inline boolean_t testBitArrayBit(303,13737
static inline boolean_t testSetBitArrayBit(309,13915
static inline boolean_t testClearBitArrayBit(319,14131

jiutai/conffile.h,235
#define JIUTAI_CONFFILE_H19,563
#define JF_CONFFILE_MAX_LINE_LEN 29,873
typedef void  jf_conffile_t;33,997
    olchar_t * jcop_pstrFile;37,1044
    u32 jcop_u32Reserved[jcop_u32Reserved38,1074
} jf_conffile_open_param_t;39,1103

jiutai/files.h,2561
#define JIUFENG_FILES_H17,390
#undef FILESAPI35,799
#undef FILESCALL36,815
        #define FILESAPI 40,907
        #define FILESCALL41,955
        #define FILESAPI43,991
        #define FILESCALL 44,1016
    #define FILESAPI47,1067
    #define FILESCALL48,1088
    typedef olint_t  jf_file_t;54,1218
    typedef DIR      jf_dir_t;55,1250
    #define JF_FILE_INVALID_FILE_VALUE 56,1281
    typedef HANDLE   jf_file_t;58,1349
    typedef void     jf_dir_t;59,1381
    #define JF_FILE_INVALID_FILE_VALUE 60,1412
        #define O_RDONLY 63,1497
        #define O_WRONLY 67,1571
        #define O_RDWR 71,1643
        #define O_APPEND 75,1717
        #define O_CREAT 79,1790
        #define O_TRUNC 83,1863
        #define O_EXCL 87,1935
#define JF_FILE_MODE_TYPE_MASK 93,2032
#define JF_FILE_MODE_TSOCK 95,2077
#define JF_FILE_MODE_TLNK 96,2131
#define JF_FILE_MODE_TREG 97,2192
#define JF_FILE_MODE_TBLK 98,2252
#define JF_FILE_MODE_TDIR 99,2312
#define JF_FILE_MODE_TCHR 100,2369
#define JF_FILE_MODE_TFIFO 101,2433
#define JF_FILE_MODE_SUID 103,2486
#define JF_FILE_MODE_SGID 104,2525
#define JF_FILE_MODE_SVTX 105,2564
#define JF_FILE_MODE_PERM_MASK 107,2604
#define JF_FILE_MODE_RUSR 109,2649
#define JF_FILE_MODE_WUSR 110,2688
#define JF_FILE_MODE_XUSR 111,2727
#define JF_FILE_MODE_RGRP 113,2767
#define JF_FILE_MODE_WGRP 114,2806
#define JF_FILE_MODE_XGRP 115,2845
#define JF_FILE_MODE_ROTH 117,2885
#define JF_FILE_MODE_WOTH 118,2924
#define JF_FILE_MODE_XOTH 119,2963
    u32 jfs_u32Mode;123,3020
    u32 jfs_u32Dev;124,3041
    u32 jfs_u32RDev;125,3061
    u32 jfs_u32INode;126,3082
    u64 jfs_u64Size;127,3104
    u16 jfs_u16Link;128,3125
    u16 jfs_u16UserId;129,3146
    u16 jfs_u16GroupId;130,3169
    u16 jfs_u16Reserved;131,3193
    u32 jfs_u32AccessTime;132,3218
    u32 jfs_u32ModifyTime;133,3292
    u32 jfs_u32Createtime;134,3319
    u32 jfs_u32Reserved2;135,3346
    u32 jfs_u32Reserved3[jfs_u32Reserved3136,3372
} jf_file_stat_t;137,3401
    typedef mode_t    jf_file_mode_t;148,3877
    typedef u16       jf_file_mode_t;150,3938
#define JF_FILE_DEFAULT_CREATE_MODE 153,3984
#define JF_DIR_DEFAULT_CREATE_MODE 155,4031
typedef FILE     jf_filestream_t;157,4078
    olchar_t jde_strName[jde_strName163,4211
    olsize_t jde_sName;164,4251
    u8 jde_u8Reserved[jde_u8Reserved165,4275
} jf_dir_entry_t;166,4302
typedef u32 (* jf_dir_fnHandleFile_t)280,8285
typedef boolean_t (* jf_dir_fnFilterDirEntry_t)290,8677
typedef olint_t (* jf_dir_fnCompareDirEntry_t)291,8750

jiutai/persistency.h,709
#define JIUFENG_PERSISTENCY_H14,281
typedef enum jf_persistency_type25,657
	JF_PERSISTENCY_TYPE_SQLITE 27,692
} jf_persistency_type_t;28,753
typedef struct jf_persistency_config_sqlite30,779
#define JF_PERSISTENCY_MAX_NAME_LEN 32,825
    olchar_t jpcs_strDbName[jpcs_strDbName34,899
    olchar_t jpcs_strTableName[jpcs_strTableName36,993
    olchar_t jpcs_strKeyColumnName[jpcs_strKeyColumnName38,1114
    olchar_t jpcs_strValueColumnName[jpcs_strValueColumnName40,1242
} jf_persistency_config_sqlite_t;41,1309
typedef union jf_persistency_config43,1344
    jf_persistency_config_sqlite_t jpc_pcsConfigSqlite;45,1382
} jf_persistency_config_t;46,1438
typedef void  jf_persistency_t;48,1466

jiutai/array.h,258
#define JIUTAI_ARRAY_H15,291
typedef void jf_array_element_t;26,660
typedef void jf_array_t;27,693
typedef u32 (* jf_array_fnDestroyElement_t)51,1380
typedef boolean_t (* jf_array_fnFindElement_t)59,1668
typedef u32 (* jf_array_fnOpOnElement_t)66,1902

jiutai/hostinfo.c,241
    typedef void (WINAPI *PGNSI)PGNSI43,947
#define SM_SERVERR2 45,1003
#define BUFSIZE 46,1026
static u32 _getHostVersion(50,1127
static u32 _getHostNetworkInfo(323,12091
void jf_host_getName(399,14750
u32 jf_host_getInfo(408,14894

jiutai/xmlparser.h,1940
#define JIUFENG_XMLPARSER_H13,139
#undef XMLPARSERAPI21,370
#undef XMLPARSERCALL22,390
        #define XMLPARSERAPI 26,490
        #define XMLPARSERCALL27,542
        #define XMLPARSERAPI29,582
        #define XMLPARSERCALL 30,611
    #define XMLPARSERAPI33,666
    #define XMLPARSERCALL34,691
typedef struct jf_xmlparser_xml_node41,887
    olchar_t * jxxn_pstrName;44,946
    olsize_t jxxn_sName;45,976
    u32 jxxn_u32Reserved;46,1001
    olchar_t * jxxn_pstrNs;48,1048
    olsize_t jxxn_sNs;49,1076
    u32 jxxn_u32Reserved2;50,1099
    boolean_t jxxn_bStartTag;52,1127
    boolean_t jxxn_bEmptyTag;53,1157
    u8 jxxn_u8Reserved[jxxn_u8Reserved54,1187
    void * jxxn_pReserved;56,1215
    jf_hashtree_t jxxn_jhNameSpace;57,1242
    struct jf_xmlparser_xml_node * jxxn_pjxxnNext;59,1279
    struct jf_xmlparser_xml_node * jxxn_pjxxnParent;60,1330
    struct jf_xmlparser_xml_node * jxxn_pjxxnChildren;61,1383
    struct jf_xmlparser_xml_node * jxxn_pjxxnSibling;62,1438
    struct jf_xmlparser_xml_node * jxxn_pjxxnClosingTag;64,1493
    struct jf_xmlparser_xml_node * jxxn_pjxxnStartingTag;65,1550
} jf_xmlparser_xml_node_t;66,1608
typedef struct jf_xmlparser_xml_attribute68,1636
    olchar_t * jxxa_pstrName;70,1680
    olsize_t jxxa_sName;71,1710
    olchar_t * jxxa_pstrPrefix;73,1736
    olsize_t jxxa_sPrefix;74,1768
    olchar_t * jxxa_pstrValue;76,1796
    olsize_t jxxa_sValue;77,1827
    struct jf_xmlparser_xml_attribute * jxxa_pjxxaNext;78,1853
} jf_xmlparser_xml_attribute_t;79,1909
typedef struct jf_xmlparser_xml_doc81,1942
    jf_xmlparser_xml_node_t * jxxd_pjxxnRoot;83,1980
    jf_xmlparser_xml_node_t * jxxd_pjxxnError;84,2026
    u8 jxxd_u8Reserved[jxxd_u8Reserved85,2073
} jf_xmlparser_xml_doc_t;86,2101
typedef struct jf_xmlparser_xml_file88,2128
    olchar_t * jxxf_pstrBuf;90,2167
    jf_xmlparser_xml_doc_t jxxf_jxxdDoc;91,2196
} jf_xmlparser_xml_file_t;92,2237

jiutai/syncrwlock.h,382
#define JIUTAI_SYNCRWLOCK_H13,150
    pthread_rwlock_t jr_ptrRwlock;26,559
    boolean_t jr_bWritePriority;28,617
    u32 jr_u32ReadCount;30,690
    u32 jr_u32ReadWaiting;31,759
    u32 jr_u32WriteCount;33,836
    u32 jr_u32WriteWaiting;34,905
    HANDLE jr_hReadGreen;36,982
    HANDLE jr_hWriteGreen;37,1040
    CRITICAL_SECTION jr_csLock;38,1097
} jf_rwlock_t;40,1174

jiutai/jiukun.h,1828
#define JIUFENG_JIUKUN_H14,184
#undef JIUKUNAPI25,475
#undef JIUKUNCALL26,492
        #define JIUKUNAPI 30,586
        #define JIUKUNCALL31,635
        #define JIUKUNAPI33,672
        #define JIUKUNCALL 34,698
    #define JIUKUNAPI37,750
    #define JIUKUNCALL38,772
#define JF_JIUKUN_PAGE_SHIFT 43,884
#define JF_JIUKUN_PAGE_SIZE 44,926
#define JF_JIUKUN_PAGE_MASK 45,991
#define JF_JIUKUN_MAX_PAGE_ORDER 50,1166
#define JF_JIUKUN_MAX_MEMORY_ORDER 53,1266
#define JF_JIUKUN_MAX_MEMORY_SIZE 54,1308
#define JF_JIUKUN_MAX_OBJECT_ORDER 57,1442
#define JF_JIUKUN_MAX_OBJECT_SIZE 58,1484
#define JF_JIUKUN_MAX_POOL_SIZE 66,1805
    olsize_t jjip_sPool;67,1894
    boolean_t jjip_bNoGrow;69,1968
    u8 jjip_u8Reserved[jjip_u8Reserved70,1996
    u32 jjip_u32Reserved[jjip_u32Reserved71,2023
} jf_jiukun_init_param_t;72,2052
typedef void  jf_jiukun_cache_t;76,2115
typedef enum jf_jiukun_cache_create_flag81,2275
    JF_JIUKUN_CACHE_CREATE_FLAG_DEBUG_FREE 83,2318
    JF_JIUKUN_CACHE_CREATE_FLAG_NOREAP,85,2478
    JF_JIUKUN_CACHE_CREATE_FLAG_NOGROW,86,2553
    JF_JIUKUN_CACHE_CREATE_FLAG_RECLAIM_ACCOUNT,87,2621
    JF_JIUKUN_CACHE_CREATE_FLAG_ZERO,89,2769
} jf_jiukun_cache_create_flag_t;90,2844
    olchar_t * jjccp_pstrName;94,2895
    u8 jjccp_u8Reserved[jjccp_u8Reserved95,2926
    olsize_t jjccp_sObj;96,2954
    olsize_t jjccp_sOffset;97,2979
    olflag_t jjccp_fCache;98,3007
    u32 jjccp_u32Reserved2[jjccp_u32Reserved299,3034
} jf_jiukun_cache_create_param_t;100,3065
typedef enum jf_jiukun_page_alloc_flag104,3177
    JF_JIUKUN_PAGE_ALLOC_FLAG_NOWAIT 106,3218
} jf_jiukun_page_alloc_flag_t;108,3363
typedef enum jf_jiukun_mem_alloc_flag113,3519
    JF_JIUKUN_MEM_ALLOC_FLAG_NOWAIT 115,3559
    JF_JIUKUN_MEM_ALLOC_FLAG_ZERO,117,3705
} jf_jiukun_mem_alloc_flag_t;118,3772

jiutai/xmalloc.h,32
#define JIUTAI_XMALLOC_H14,199

jiutai/respool.c,1619
    IRS_FREE 31,579
    IRS_RESERVED,32,627
    IRS_BUSY,33,679
} internal_resource_state_t;34,727
    boolean_t ir_bFulltime;42,855
    u8 ir_u8Reserved[ir_u8Reserved43,883
    internal_resource_state_t ir_irsResourceState;45,938
    resource_data_t * ir_prdData;47,1025
} internal_resource_t;48,1059
    olchar_t irp_strName[irp_strName53,1177
    u32 irp_u32MinResources;55,1284
    u32 irp_u32MaxResources;57,1387
    boolean_t irp_bImmediateRelease;59,1479
    jf_mutex_t irp_jmLock;61,1567
    jf_array_t * irp_pjaFulltimeResources;63,1639
    jf_array_t * irp_pjaParttimeResources;65,1731
    fnCreateResource_t irp_fnCreateResource;68,1826
    fnDestroyResource_t irp_fnDestroyResource;70,1923
} internal_resource_pool_t;72,1971
static u32 _validateParam(84,2292
static u32 _lockResourcePool(109,2849
static u32 _unlockResourcePool(127,3226
static u32 _destroyResourceInPool(147,3732
static u32 _isMaxPoolResourcesReached(175,4469
static u32 _setPoolResourceState(211,5438
static u32 _createResourceInPoolArray(231,5998
static u32 _createResourceInPool(294,7770
static u32 _destroyResourceArray(316,8360
static u32 _destroyAllResources(355,9363
static u32 _createResourcePool(393,10581
static boolean_t _isPoolResourceFree(446,12046
static u32 _getResourceFromPoolArray(465,12515
static u32 _getResourceFromPool(518,14003
static u32 _putResourceInPool(551,14909
static u32 _reapResourceInPool(586,15777
u32 createResourcePool(629,17035
u32 destroyResourcePool(650,17577
u32 getResourceFromPool(674,18091
u32 putResourceInPool(693,18580
u32 reapResourceInPool(707,18927

jiutai/hsm.c,145
u32 initHsmStateMachine(27,651
hsm_state_id_t getHsmCurrentStateId(37,865
hsm_state_t * getHsmCurrentState(42,978
u32 handleHsmEvent(47,1073

jiutai/dynlib.c,170
    void * idl_pDynLib;32,609
    HMODULE idl_hDynLib;34,656
} internal_dyn_lib_t;36,688
u32 loadDynLib(42,873
u32 freeDynLib(79,1850
u32 getSymbolAddress(121,2629

jiutai/randnum.h,32
#define JIUTAI_RANDNUM_H13,156

jiutai/xmalloc.c,134
u32 jf_mem_alloc(28,641
u32 jf_mem_calloc(41,878
u32 jf_mem_realloc(56,1157
u32 jf_mem_free(69,1373
u32 jf_mem_duplicate(81,1525

jiutai/array.c,900
typedef struct internal_jf_array_node_t24,476
    jf_array_element_t * ijan_pjaeElement;26,518
    struct internal_jf_array_node_t * ijan_pijanNext;27,561
} internal_jf_array_node_t;28,615
    u32 ija_u32ArraySize;32,661
    internal_jf_array_node_t * ija_pijanElements;33,687
} internal_jf_array_t;34,737
static u32 _getElementAt(38,845
static u32 _removeElementAt(61,1382
static u32 _insertElementAt(100,2392
u32 jf_array_create(138,3414
u32 jf_array_destroy(155,3779
u32 jf_array_getSize(171,4074
u32 jf_array_getElementAt(182,4252
u32 jf_array_removeElementAt(199,4647
u32 jf_array_removeElement(217,5025
u32 jf_array_removeAllElements(262,6146
u32 jf_array_insertElementAt(284,6641
u32 jf_array_appendElementTo(298,6944
u32 jf_array_destroyAllElements(311,7242
u32 jf_array_destroyArrayAndElements(333,7702
u32 jf_array_findElement(348,8071
u32 jf_array_traverse(381,8817

jiutai/hexstr.h,31
#define JIUTAI_HEXSTR_H14,185

jiutai/attask.c,570
typedef struct attask_item24,497
    u32 ai_u32Expire;26,526
    void * ai_pData;27,548
    fnCallbackOfAttaskItem_t ai_fnCallback;28,569
    fnDestroyAttaskItem_t ai_fnDestroy;29,613
    struct attask_item * ai_paiPrev;30,653
    struct attask_item * ai_paiNext;31,690
} attask_item_t;32,727
typedef struct attask34,745
    attask_item_t * ia_paiItems;36,769
} internal_attask_t;37,802
static u32 _flushAttask(49,1093
u32 checkAttask(73,1616
u32 addAttaskItem(148,4135
u32 removeAttaskItem(224,6881
u32 destroyAttask(291,8769
u32 createAttask(308,9071

jiutai/dynlib.h,63
#define JIUTAI_DYNLIB_H15,274
typedef void  dyn_lib_t;24,583

jiutai/menu.c,1828
    ENTRY_TYPE_UNKNOWN,31,600
    ENTRY_TYPE_MENU,32,624
    ENTRY_TYPE_COMMAND,33,645
    ENTRY_TYPE_QUIT,34,669
    ENTRY_TYPE_UPONELEVEL,35,690
} entry_type_t;36,717
typedef struct internal_menu_entry40,763
    olchar_t * ime_pstrName;43,829
    olchar_t * ime_pstrDesc;45,894
    u32 ime_u32Attribute;47,957
    entry_type_t ime_etType;50,1013
            jf_menu_fnHandler_t is_fnHandler;57,1199
            void * is_pArg;58,1245
        } iu_stCommand;59,1273
        struct internal_menu *iu_imMenu;iu_imMenu61,1332
    } ime_uContent;62,1373
    struct internal_menu *ime_imParent;ime_imParent65,1443
    struct internal_menu_entry *ime_imeNext;ime_imeNext68,1523
} internal_menu_entry_t;69,1568
#define  MENU_ENTRY_ATTR_UP_ONE_LEVEL 73,1646
#define  MENU_ENTRY_ATTR_QUIT 77,1742
#define  set_uponelevel_menu_entry(82,1838
#define  set_quit_menu_entry(87,1981
#define  is_uponelevel_menu_entry(92,2110
#define  is_quit_menu_entry(97,2244
typedef struct internal_menu102,2363
    internal_menu_entry_t *im_imeEntries;im_imeEntries105,2426
    boolean_t im_bQuit;107,2547
    struct internal_menu *im_imParent;im_imParent110,2601
    jf_menu_fnPreShow_t im_fnPreShow;113,2700
    jf_menu_fnPostShow_t im_fnPostShow;115,2796
    void * im_pArg;117,2879
} internal_menu_t;118,2899
static internal_menu_t * _getTopMenu(122,3000
static olint_t _quitMenu(130,3161
static u32 _newMenuEntry(141,3318
static u32 _destroyEntry(180,4457
static u32 _newQuitEntry(190,4617
static u32 _newUponelevelEntry(206,4987
static u32 _addEntry(222,5377
static u32 _newMenu(232,5603
static internal_menu_t * _showMenu(289,7122
static olint_t _destroyMenu(378,9654
u32 jf_menu_createTopMenu(407,10261
u32 jf_menu_addEntry(419,10549
u32 jf_menu_addSubMenu(443,11301
u32 jf_menu_start(476,12268

jiutai/network.h,4327
#define JIUFENG_NETWORK_H15,259
#undef NETWORKAPI36,793
#undef NETWORKCALL37,811
        #define NETWORKAPI 41,907
        #define NETWORKCALL42,957
        #define NETWORKAPI44,995
        #define NETWORKCALL 45,1022
    #define NETWORKAPI48,1075
    #define NETWORKCALL49,1098
typedef void  jf_network_socket_t;65,1360
typedef void  jf_network_asocket_t;66,1395
typedef void  jf_network_assocket_t;67,1431
typedef void  jf_network_acsocket_t;68,1468
typedef void  jf_network_adgram_t;69,1505
typedef void  jf_network_chain_t;74,1556
typedef void  jf_network_chain_object_t;75,1590
typedef u32 (* jf_network_fnPreSelectChainObject_t)87,1938
typedef u32 (* jf_network_fnPostSelectChainObject_t)101,2381
    jf_network_fnPreSelectChainObject_t jncoh_fnPreSelect;109,2649
    jf_network_fnPostSelectChainObject_t jncoh_fnPostSelect;110,2708
} jf_network_chain_object_header_t;111,2769
typedef void  jf_network_utimer_t;116,2822
typedef u32 (* jf_network_fnCallbackOfUtimerItem_t)118,2858
typedef u32 (* jf_network_fnDestroyUtimerItem_t)119,2925
typedef enum jf_network_mem_owner123,3012
    JF_NETWORK_MEM_OWNER_LIB 125,3048
    JF_NETWORK_MEM_OWNER_STATIC,126,3112
    JF_NETWORK_MEM_OWNER_USER,129,3291
} jf_network_mem_owner_t;133,3532
typedef u32 (* jf_network_fnAsocketOnData_t)140,3649
typedef u32 (* jf_network_fnAsocketOnConnect_t)148,4077
typedef u32 (* jf_network_fnAsocketOnDisconnect_t)156,4492
typedef u32 (* jf_network_fnAsocketOnSendOK_t)159,4612
    olsize_t jnacp_sInitialBuf;164,4730
    u32 jnacp_u32Reserved;165,4762
    jf_network_fnAsocketOnData_t jnacp_fnOnData;166,4789
    jf_network_fnAsocketOnConnect_t jnacp_fnOnConnect;167,4838
    jf_network_fnAsocketOnDisconnect_t jnacp_fnOnDisconnect;168,4893
    jf_network_fnAsocketOnSendOK_t jnacp_fnOnSendOK;169,4954
    boolean_t jnacp_bNoRead;171,5032
    u8 jnacp_u8Reserved[jnacp_u8Reserved172,5061
    jf_mutex_t * jnacp_pjmLock;173,5090
} jf_network_asocket_create_param_t;174,5122
typedef u32 (* jf_network_fnAssocketOnData_t)182,5349
typedef u32 (* jf_network_fnAssocketOnConnect_t)189,5649
typedef u32 (* jf_network_fnAssocketOnDisconnect_t)201,6105
typedef u32 (* jf_network_fnAssocketOnSendOK_t)207,6349
    olsize_t jnacp_sInitialBuf;214,6555
    u32 jnacp_u32MaxConn;216,6660
    boolean_t jnacp_bNoRead;217,6686
    u8 jnacp_u8Reserved[jnacp_u8Reserved218,6715
    u16 jnacp_u16PortNumber;220,6808
    jf_ipaddr_t jnacp_jiAddr;221,6837
    jf_network_fnAssocketOnConnect_t jnacp_fnOnConnect;223,6932
    jf_network_fnAssocketOnDisconnect_t jnacp_fnOnDisconnect;225,7048
    jf_network_fnAssocketOnData_t jnacp_fnOnData;227,7162
    jf_network_fnAssocketOnSendOK_t jnacp_fnOnSendOK;229,7276
    u32 jnacp_u32Reserved2[jnacp_u32Reserved2230,7330
} jf_network_assocket_create_param_t;231,7361
typedef u32 (* jf_network_fnAcsocketOnData_t)238,7499
typedef u32 (* jf_network_fnAcsocketOnConnect_t)245,7799
typedef u32 (* jf_network_fnAcsocketOnDisconnect_t)257,8273
typedef u32 (* jf_network_fnAcsocketOnSendOK_t)263,8517
    olsize_t jnacp_sInitialBuf;270,8723
    u32 jnacp_u32MaxConn;272,8828
    boolean_t jnacp_bNoRead;273,8854
    u8 jnacp_u8Reserved[jnacp_u8Reserved274,8883
    jf_network_fnAcsocketOnConnect_t jnacp_fnOnConnect;276,8976
    jf_network_fnAcsocketOnDisconnect_t jnacp_fnOnDisconnect;278,9092
    jf_network_fnAcsocketOnData_t jnacp_fnOnData;279,9154
    jf_network_fnAcsocketOnSendOK_t jnacp_fnOnSendOK;281,9268
} jf_network_acsocket_create_param_t;282,9322
typedef u32 (* jf_network_fnAdgramOnData_t)287,9392
typedef u32 (* jf_network_fnAdgramOnSendOK_t)292,9620
    olsize_t jnacp_sInitialBuf;297,9735
    u32 jnacp_u32Reserved;298,9767
    jf_network_fnAdgramOnData_t jnacp_fnOnData;299,9794
    jf_network_fnAdgramOnSendOK_t jnacp_fnOnSendOK;300,9842
    u8 jnacp_u8Reserved[jnacp_u8Reserved301,9894
    void * jnacp_pUser;302,9923
} jf_network_adgram_create_param_t;303,9947
#define jf_network_getPendingBytesToSendOfAssocket(881,29324
#define jf_network_getTotalBytesSentOfAssocket(884,29448
#define jf_network_resetTotalBytesSentOfAssocket(887,29564
#define jf_network_getPendingBytesToSendOfAcsocket(962,32321
#define jf_network_getTotalBytesSentOfAcsocket(965,32445
#define jf_network_resetTotalBytesSentOfAcsocket(968,32561

jiutai/process.h,1417
#define JIUTAI_PROCESS_H15,278
    #define getCurrentProcessId(24,586
    #define getCurrentThreadId(25,630
    #define getCurrentProcessId(27,703
    #define getCurrentThreadId(28,760
    typedef DWORD pthread_t;29,816
    typedef DWORD pid_t;30,845
    #define sleep(31,870
    u8 pa_u8Reserved[pa_u8Reserved37,1025
} process_attr_t;38,1051
    pid_t pi_pId;43,1106
    HANDLE pi_hProcess;45,1147
} process_id_t;47,1178
    boolean_t ta_bDetached;51,1212
    u8 ta_u8Reserved[ta_u8Reserved52,1240
} thread_attr_t;53,1266
    pthread_t ti_ptThreadId;58,1320
    HANDLE ti_hThread;60,1372
} thread_id_t;62,1402
        #define THREAD_RETURN_VALUE 66,1468
        #define THREAD_RETURN(67,1517
        typedef void * (* fnThreadRoutine_t)68,1594
        #define THREAD_RETURN_VALUE 70,1663
        #define THREAD_RETURN(71,1707
        typedef void * (* fnThreadRoutine_t)72,1781
    #define THREAD_RETURN_VALUE 75,1874
    #define THREAD_RETURN 76,1918
    typedef LPTHREAD_START_ROUTINE fnThreadRoutine_t;77,1951
#define PROCESS_TERMINATION_REASON_UNKNOWN 102,2656
#define PROCESS_TERMINATION_REASON_EXITED 104,2718
#define PROCESS_TERMINATION_REASON_SIGNALED 106,2776
#define PROCESS_TERMINATION_REASON_ACCESS_VIOLATION 108,2877
#define PROCESS_TERMINATION_REASON_TERMINATED 110,2967
#define PROCESS_TERMINATION_REASON_KILLED 112,3051
typedef void (* fnSignalHandler_t)132,3571

jiutai/encrypt.h,285
#define JIUFENG_ENCRYPT_H17,421
#undef ENCRYPTAPI24,631
#undef ENCRYPTCALL25,649
        #define ENCRYPTAPI 29,745
        #define ENCRYPTCALL30,795
        #define ENCRYPTAPI32,833
        #define ENCRYPTCALL 33,860
    #define ENCRYPTAPI36,913
    #define ENCRYPTCALL37,936

jiutai/hsm.h,934
#define JIUTAI_HSM_H12,157
typedef u32  hsm_state_id_t;24,525
typedef u32  hsm_event_id_t;25,554
typedef struct hsm_event29,603
    hsm_event_id_t he_hsiEventId;31,630
    void * he_pData;32,664
} hsm_event_t;33,685
typedef boolean_t (* fnHsmEventGuard_t)35,701
typedef u32 (* fnHsmEventAction_t)36,764
typedef struct hsm_transition38,823
#define HSM_LAST_EVENT_ID 40,855
    hsm_event_id_t ht_heiEventId;41,895
    fnHsmEventGuard_t ht_fnGuard;42,929
    fnHsmEventAction_t ht_fnAction;43,963
    struct hsm_state * ht_phsNext;44,999
} hsm_transition_t;45,1034
typedef struct hsm_state47,1055
    hsm_state_id_t hs_hsiStateId;49,1082
#define MAX_HSM_STATE_NAME_LEN 50,1116
    olchar_t hs_strName[hs_strName51,1155
    hsm_transition_t hs_hrTransition[hs_hrTransition52,1204
} hsm_state_t;53,1244
    hsm_state_t * hs_phsInitial;57,1277
    hsm_state_t * hs_phsCurrent;58,1310
} hsm_statemachine_t;59,1343

jiutai/randnum.c,32
u32 getRandomU32InRange(34,783

jiutai/sharedmemory.h,84
#define JIUTAI_SHAREDMEMORY_H15,286
typedef olchar_t  jf_sharedmemory_id_t;28,729

jiutai/xtime.h,59
#define JIUTAI_XTIME_H13,152
    #define INFINITE 24,539

jiutai/servmgmt.h,1580
#define JIUFENG_SERVMGMT_H16,490
#undef SERVMGMTAPI24,722
#undef SERVMGMTCALL25,741
        #define SERVMGMTAPI 29,839
        #define SERVMGMTCALL30,890
        #define SERVMGMTAPI32,929
        #define SERVMGMTCALL 33,957
    #define SERVMGMTAPI36,1011
    #define SERVMGMTCALL37,1035
#define JF_SERVMGMT_MAX_NUM_OF_SERVICE 42,1149
#define JF_SERVMGMT_MAX_SERV_NAME_LEN 44,1199
    JF_SERVMGMT_SERV_STATUS_UNKNOWN 48,1264
    JF_SERVMGMT_SERV_STATUS_STOPPED,49,1305
    JF_SERVMGMT_SERV_STATUS_STARTING,50,1342
    JF_SERVMGMT_SERV_STATUS_RUNNING,51,1380
    JF_SERVMGMT_SERV_STATUS_STOPPING,52,1417
    JF_SERVMGMT_SERV_STATUS_ERROR,53,1455
    JF_SERVMGMT_SERV_STATUS_TERMINATED,54,1490
} jf_servmgmt_serv_status_t;55,1530
    JF_SERVMGMT_SERV_STARTUPTYPE_UNKNOWN 59,1575
    JF_SERVMGMT_SERV_STARTUPTYPE_AUTOMATIC,60,1621
    JF_SERVMGMT_SERV_STARTUPTYPE_MANUAL,61,1665
} jf_servmgmt_serv_startuptype_t;62,1706
    olchar_t jssi_strName[jssi_strName68,1839
    u8 jssi_u8Status;69,1897
    u8 jssi_u8StartupType;70,1919
    u8 jssi_u8Reserved[jssi_u8Reserved71,1946
} jf_servmgmt_serv_info_t;72,1974
    u8 jsi_u8Reserved[jsi_u8Reserved76,2019
    u8 jsi_u8NumOfService;77,2045
    jf_servmgmt_serv_info_t jsi_jssiService[jsi_jssiService78,2072
    u8 jsi_u8Reserved2[jsi_u8Reserved279,2148
} jf_servmgmt_info_t;80,2176
    u8 jsip_u8Reserved[jsip_u8Reserved84,2216
} jf_servmgmt_init_param_t;85,2244
    olchar_t * jssp_pstrSettingFile;89,2290
    u32 jssp_u32Reserved[jssp_u32Reserved90,2327
} jf_servmgmt_start_param_t;91,2356

jiutai/xtime.c,633
u32 jf_time_fileTimeToSecondsSince1970(33,745
u32 jf_time_getTimeOfDay(48,1127
u32 jf_time_msleep(78,1841
u32 jf_time_nsleep(91,2054
olint_t jf_time_convertTimeToSeconds(107,2308
boolean_t jf_date_isLeapYear(112,2431
olint_t jf_date_getDaysOfMonth(121,2596
olint_t jf_date_getDaysOfYear(150,3006
olint_t jf_date_convertDateToDaysFrom1970(159,3140
olint_t jf_date_convertTodayToDaysFrom1970(178,3590
void jf_date_convertDaysFrom1970ToDate(186,3780
olint_t jf_date_getDayOfWeekFromDate(218,4500
olint_t jf_date_getDayOfWeekForToday(241,4894
boolean_t jf_date_isWeekendForDate(249,5073
void jf_date_getDateToday(262,5356

jiutai/hash.h,1446
#define JIUTAI_HASH_H16,412
typedef void  jf_hashtable_t;25,719
typedef olint_t (* jf_hashtable_fnCmpKeys_t)27,750
typedef olint_t (* jf_hashtable_fnHashKey_t)28,825
typedef void * (* jf_hashtable_fnGetKeyFromEntry_t)29,885
typedef u32 (* jf_hashtable_fnFreeEntry_t)30,954
typedef void (* jf_hashtable_fnError_t)31,1016
    u32 jhcp_u32MinSize;36,1172
    u32 jhcp_u32Reserved;37,1239
    jf_hashtable_fnCmpKeys_t jhcp_fnCmpKeys;38,1265
    jf_hashtable_fnHashKey_t jhcp_fnHashKey;39,1310
    jf_hashtable_fnGetKeyFromEntry_t jhcp_fnGetKeyFromEntry;40,1355
    jf_hashtable_fnFreeEntry_t jhcp_fnFreeEntry;41,1416
    jf_hashtable_fnError_t jhcp_fnError;42,1465
    u32 jhcp_u32Reserved2[jhcp_u32Reserved243,1506
} jf_hashtable_create_param_t;44,1536
    jf_hashtable_t * jhi_htTable;97,3496
    olint_t jhi_nPos;98,3530
    void * jhi_pCursor;99,3552
} jf_hashtable_iterator_t;100,3576
        #define BITS_PER_LONG 125,4446
        #define BITS_PER_LONG 127,4490
#define JF_HASHTABLE_GOLDEN_RATIO_PRIME_32 132,4593
#define JF_HASHTABLE_GOLDEN_RATIO_PRIME_64 134,4700
    #define JF_HASHTABLE_GOLDEN_RATIO_PRIME 137,4789
    #define jf_hashtable_hashLong(138,4869
    #define jf_hashtable_hashLong(140,4972
    #define JF_HASHTABLE_GOLDEN_RATIO_PRIME 141,5049
static inline u64 jf_hashtable_hashU64(147,5177
static inline u32 jf_hashtable_hashU32(170,5605
static inline unsigned long jf_hashtable_hashPtr(179,5880

jiutai/olflag.h,258
#define JIUTAI_OLFLAG_H14,211
#define INIT_FLAG(25,535
#define FLAG_MASK(30,711
#define GET_FLAG(34,809
#define SET_FLAG(38,916
#define CLEAR_FLAG(42,1028
#define SET_FLAG_VALUE(46,1153
#define GET_FLAG_VALUE(51,1327
typedef u64    olflag_t;55,1481

jiutai/hash.c,1876
typedef struct hash_table_bucket25,532
    void * htb_pEntry;27,567
    struct hash_table_bucket *htb_htbNext;htb_htbNext28,590
} hash_table_bucket_t;29,633
typedef struct _hash_table31,657
    u32 iht_u32Count;33,686
    u32 iht_u32Size;34,708
    u32 iht_u32Threshold;35,729
    u32 iht_u32Resizes;36,755
    u32 iht_u32PrimesIndex;37,779
    u32 iht_u32Reserved[iht_u32Reserved38,807
    hash_table_bucket_t **iht_htbBucket;iht_htbBucket40,836
    jf_hashtable_fnCmpKeys_t iht_fnCmpKeys;42,878
    jf_hashtable_fnHashKey_t iht_fnHashKey;43,922
    jf_hashtable_fnGetKeyFromEntry_t iht_fnGetKeyFromEntry;44,966
    jf_hashtable_fnFreeEntry_t iht_fnFreeEntry;45,1026
    jf_hashtable_fnError_t iht_fnError;46,1074
} internal_hash_table_t;47,1114
static olint_t primes[primes66,1638
static olint_t _default_fnHtCmpKeys(78,2080
static olint_t _default_fnHtHashKey(88,2265
static void * _default_fnHtGetKeyFromEntry(97,2409
static u32 _default_fnHtFreeEntry(102,2491
static void _default_fnHtError(109,2601
static hash_table_bucket_t ** _getPositionOfKey(116,2738
static u32 _resizeHashTable(142,3369
static u32 _insertAtPosition(188,4855
static u32 _overwriteAtPosition(218,5649
u32 jf_hashtable_create(236,6071
u32 jf_hashtable_destroy(289,7872
u32 jf_hashtable_insertEntry(323,8698
u32 jf_hashtable_removeEntry(336,9085
u32 jf_hashtable_overwriteEntry(356,9634
u32 jf_hashtable_getEntry(375,10114
boolean_t jf_hashtable_isKeyInTable(389,10508
boolean_t jf_hashtable_isEntryInTable(401,10812
u32 jf_hashtable_getSize(414,11162
void jf_hashtable_showStatistics(421,11358
void jf_hashtable_setupIterator(457,12233
void jf_hashtable_incrementIterator(468,12589
boolean_t jf_hashtable_isEndOfIterator(504,13491
void * jf_hashtable_getEntryFromIterator(514,13680
#define HASHPJWSHIFT 530,14101
olint_t jf_hashtable_hashPJW(532,14148

jiutai/sharedmemory.c,394
    #define SV_W 33,677
    #define SV_R 34,702
    #define SVMSG_MODE 36,728
    #define SVSHM_MODE 37,822
    #define DEFAULT_SHARED_MEMORY_SIZE 39,880
#define SHM_ID_LEN 42,932
static u32 _getShmId(46,1056
static u32 _getShmId(56,1298
u32 jf_sharedmemory_create(77,1723
u32 jf_sharedmemory_destroy(137,3250
u32 jf_sharedmemory_attach(185,4373
u32 jf_sharedmemory_detach(248,5732

jiutai/hexstr.c,442
#define BYTE_HEXSTR_HEADER_LENGTH 26,555
#define MIN_BYTE_HEXSTR_LENGTH 27,595
#define MAX_BYTE_PER_HEXSTR_LINE 28,662
#define WORD_HEXSTR_HEADER_LENGTH 31,734
#define MIN_WORD_HEXSTR_LENGTH 32,774
#define MAX_WORD_PER_HEXSTR_LINE 33,841
#define MIN_BYTE_HEXSTR_WITH_ASCII_LENGTH 36,964
olsize_t getByteHexString(45,1267
olsize_t getWordHexString(81,2101
olsize_t getByteHexStringWithAscii(117,2933
void dumpDataInByteHex(170,4094

jiutai/syncsem.c,352
    #define SV_W 28,605
    #define SV_R 29,630
    #define SEM_FLAG 31,656
union semun35,775
    olint_t val;37,789
    struct semid_ds *buf;buf38,806
    ushort * array;39,832
u32 jf_sem_init(47,1029
u32 jf_sem_fini(92,2032
u32 jf_sem_down(127,2658
u32 jf_sem_tryDown(164,3358
u32 jf_sem_downWithTimeout(201,4067
u32 jf_sem_up(244,4981

jiutai/bases.c,1346
static olint_t _getHashValue(43,926
static u32 _newHashtreeEntry(77,1851
static u32 _findHashtreeEntry(118,3048
void jf_queue_init(159,4230
void jf_queue_fini(164,4329
void jf_queue_finiQueueAndData(179,4596
boolean_t jf_queue_isEmpty(198,4956
u32 jf_queue_enqueue(203,5066
void * jf_queue_dequeue(231,5814
void * jf_queue_peek(253,6268
void jf_stack_init(265,6454
u32 jf_stack_push(270,6522
void * jf_stack_pop(287,6887
void * jf_stack_peek(303,7224
void jf_stack_clear(313,7406
void jf_linklist_init(329,7601
void jf_linklist_fini(339,7746
void jf_linklist_finiListAndData(359,8121
u32 jf_linklist_appendTo(383,8589
u32 jf_linklist_insertTo(415,9244
void jf_dlinklist_init(441,9739
void jf_dlinklist_fini(451,9912
void jf_dlinklist_finiListAndData(471,10305
void jf_dlinklist_removeAllNodes(495,10774
u32 jf_dlinklist_findFirstData(519,11215
u32 jf_dlinklist_findFirstNode(550,11842
u32 jf_dlinklist_findLastData(581,12524
u32 jf_dlinklist_findLastNode(612,13151
u32 jf_dlinklist_findNextNode(643,13786
u32 jf_dlinklist_findPrevNode(672,14404
u32 jf_dlinklist_appendTo(701,15040
void jf_hashtree_fini(733,15730
void jf_hashtree_finiHashtreeAndData(754,16237
boolean_t jf_hashtree_hasEntry(781,16907
u32 jf_hashtree_addEntry(797,17349
u32 jf_hashtree_getEntry(811,17766
u32 jf_hashtree_deleteEntry(828,18249

jiutai/attask.h,155
#define JIUTAI_ATTASK_H15,275
typedef void  attask_t;26,665
typedef u32 (* fnCallbackOfAttaskItem_t)28,690
typedef u32 (* fnDestroyAttaskItem_t)29,746

jiutai/comminit.h,125
#define JIUTAI_COMMINIT_H14,247
static inline u32 jf_network_initLib(47,1098
static inline u32 jf_network_finiLib(89,2127

jiutai/matrix.h,385
#define JIUFENG_MATRIX_H14,184
#undef MATRIXAPI23,433
#undef MATRIXCALL24,450
        #define MATRIXAPI 28,544
        #define MATRIXCALL29,593
        #define MATRIXAPI31,630
        #define MATRIXCALL 32,656
    #define MATRIXAPI35,708
    #define MATRIXCALL36,730
    oldouble_t * m_pdbData;45,940
    olint_t m_nRow;46,968
    olint_t m_nCol;47,988
} matrix_t;48,1008

jiutai/prng.h,258
#define JIUFENG_PRNG_H14,280
#undef PRNGAPI22,507
#undef PRNGCALL23,522
        #define PRNGAPI 27,612
        #define PRNGCALL28,659
        #define PRNGAPI30,694
        #define PRNGCALL 31,718
    #define PRNGAPI34,768
    #define PRNGCALL35,788

jiutai/bases.h,5793
#define JIUTAI_BASES_H17,439
typedef struct jf_stack_node31,865
    void * jsn_pData;33,896
    struct jf_stack_node * jsn_pjsnNext;34,918
} jf_stack_node_t;35,959
typedef void  jf_stack_t;37,979
typedef struct jf_queue_node40,1022
    void * jqn_pData;42,1053
    struct jf_queue_node * jqn_pjqnNext;43,1075
} jf_queue_node_t;44,1116
typedef struct jf_queue46,1136
    jf_queue_node_t * jq_pjqnHead;48,1162
    jf_queue_node_t * jq_pjqnTail;49,1197
} jf_queue_t;50,1232
typedef u32 (* jf_queue_fnFreeData_t)52,1247
typedef struct jf_linklist_node55,1319
    struct jf_linklist_node * jln_pjlnNext;57,1353
    void * jln_pData;58,1397
} jf_linklist_node_t;59,1419
typedef struct jf_linklist61,1442
	jf_linklist_node_t * jl_pjlnHead;63,1471
} jf_linklist_t;64,1506
typedef u32 (* jf_linklist_fnFreeNodeData_t)66,1524
typedef struct jf_dlinklist_node69,1610
    struct jf_dlinklist_node * jdn_pjdnNext;71,1645
    struct jf_dlinklist_node * jdn_pjdnPrev;72,1690
    void * jdn_pData;73,1735
} jf_dlinklist_node_t;74,1757
typedef struct jf_dlinklist76,1781
    jf_dlinklist_node_t * jd_pjdnHead;78,1811
    jf_dlinklist_node_t * jd_pjdnTail;79,1850
} jf_dlinklist_t;80,1889
typedef u32 (* jf_dlinklist_fnFreeNodeData_t)82,1908
typedef boolean_t (* jf_dlinklist_fnFindNodeData_t)84,1972
typedef struct jf_hashtree_node87,2067
    struct jf_hashtree_node * jhn_pjhnNext;89,2101
    struct jf_hashtree_node * jhn_pjhnPrev;90,2145
    olint_t jhn_nKey;91,2189
    olchar_t * jhn_pstrKeyValue;92,2211
    olsize_t jhn_sKey;93,2244
    void * jhn_pData;94,2267
} jf_hashtree_node_t;95,2289
typedef struct jf_hashtree_enumerator97,2312
    jf_hashtree_node_t * jhe_pjhnNode;99,2352
} jf_hashtree_enumerator_t;100,2391
typedef struct jf_hashtree102,2420
    jf_hashtree_node_t * jh_pjhnRoot;104,2449
} jf_hashtree_t;105,2487
typedef u32 (* jf_hashtree_fnFreeData_t)107,2505
typedef struct jf_listhead110,2578
    struct jf_listhead * jl_pjlNext;112,2607
    struct jf_listhead * jl_pjlPrev;113,2644
} jf_listhead_t;114,2681
typedef struct jf_hlisthead_node122,2904
    struct jf_hlisthead_node * jhn_pjhnNext;124,2939
    struct jf_hlisthead_node ** jhn_ppjhnPrev;125,2984
} jf_hlisthead_node_t;126,3031
typedef struct jf_hlisthead128,3055
    jf_hlisthead_node_t * jh_pjhnFirst;130,3085
} jf_hlisthead_t;131,3125
typedef struct jf_listarray136,3189
    u32 jl_u32NumOfNode;138,3219
    u32 jl_u32Head;139,3244
} jf_listarray_t;140,3264
#define JF_LISTARRAY_NODE(142,3283
#define JF_LISTARRAY_END 145,3360
static inline boolean_t jf_linklist_isEmpty(283,6420
static inline jf_linklist_node_t * jf_linklist_getFirstNode(293,6613
static inline jf_linklist_node_t * jf_linklist_getNextNode(302,6786
static inline void * jf_linklist_getDataFromNode(311,6954
static inline void * jf_dlinklist_getDataFromNode(359,8400
static inline jf_dlinklist_node_t * jf_dlinklist_getFirstNode(367,8566
static inline jf_dlinklist_node_t * jf_dlinklist_getLastNode(376,8749
static inline jf_dlinklist_node_t * jf_dlinklist_getNextNode(385,8927
static inline jf_dlinklist_node_t * jf_dlinklist_getPrevNode(394,9115
static inline void jf_hashtree_init(410,9384
static inline boolean_t jf_hashtree_isEmpty(441,10161
static inline void jf_hashtree_initEnumerator(506,12127
static inline void jf_hashtree_finiEnumerator(521,12616
static inline boolean_t jf_hashtree_isEnumeratorEmptyNode(527,12777
static inline u32 jf_hashtree_moveEnumeratorNext(542,13175
static inline void jf_hashtree_getEnumeratorValue(571,13981
#define JF_LISTHEAD_INIT(593,14495
#define JF_LISTHEAD(595,14548
static inline void jf_listhead_init(598,14625
static inline void _listAdd(608,14909
static inline void jf_listhead_add(623,15289
static inline void jf_listhead_addTail(634,15583
static inline void _listDel(647,16005
static inline void jf_listhead_del(657,16235
static inline void jf_listhead_replace(670,16590
static inline void jf_listhead_replaceInit(678,16832
static inline void jf_listhead_delInit(688,17099
static inline void jf_listhead_move(699,17402
static inline void jf_listhead_moveTail(710,17724
static inline boolean_t jf_listhead_isLast(721,18046
static inline boolean_t jf_listhead_isFirst(732,18339
static inline boolean_t jf_listhead_isEmpty(742,18566
static inline void _listSplice(747,18680
static inline void jf_listhead_splice(765,19129
static inline void jf_listhead_spliceInit(779,19494
static inline void jf_listhead_split(792,19811
        #define offsetof(810,20249
    #define container_of(812,20333
    typedef long LONG;816,20545
        typedef s64 LONG_PTR;819,20592
        typedef long LONG_PTR;821,20633
    typedef olchar_t CHAR;824,20676
    typedef CHAR *PCHAR;PCHAR825,20703
        typedef u64 ULONG_PTR;828,20752
        typedef unsigned long ULONG_PTR;830,20793
    #define container_of(835,20924
#define jf_listhead_getEntry(846,21251
#define jf_listhead_forEach(855,21472
#define jf_listhead_forEachSafe(864,21815
#define jf_listhead_forEachPrev(873,22117
#define jf_listhead_forEachPrevSafe(882,22478
#define JF_HLISTHEAD(889,22682
#define JF_HLISTHEAD_INIT(890,22757
#define JF_HLISTHEAD_INIT_NODE(891,22817
#define jf_hlisthead_getEntry(894,22918
#define jf_hlisthead_forEach(896,23000
#define jf_hlisthead_forEachEntry(906,23404
static inline void _hlistDel(912,23654
static inline void jf_hlisthead_del(922,23895
static inline void jf_hlisthead_delInit(929,24036
static inline void jf_hlisthead_addHead(938,24201
static inline olsize_t jf_listarray_getSize(951,24524
static inline void jf_listarray_init(958,24688
static inline u32 jf_listarray_getNode(974,25107
static inline void jf_listarray_putNode(986,25355
static inline boolean_t jf_listarray_isEnd(995,25564

jiutai/hostinfo.h,728
#define JIUTAI_HOSTINFO_H14,228
#define JF_HOST_MAX_NET_NAME_LEN 24,560
#define JF_HOST_MAX_NET_INTERFACES 25,602
#define JF_HOST_MAX_IP_ADDR_LEN 26,644
#define JF_HOST_MAX_HOST_NAME_LEN 28,687
#define JF_HOST_MAX_OS_NAME_LEN 29,729
    olchar_t jhni_strName[jhni_strName34,870
    olchar_t jhni_strIpAddr[jhni_strIpAddr35,924
    u8 jhni_u8Reserved[jhni_u8Reserved36,978
} jf_host_net_info_t;37,1006
    olchar_t jhi_strHostName[jhi_strHostName41,1046
    olchar_t jhi_strOSName[jhi_strOSName42,1104
    u8 jhi_u8Reserved[jhi_u8Reserved43,1157
    u16 jhi_u16Reserved[jhi_u16Reserved44,1185
    u16 jhi_u16NetCount;45,1213
    jf_host_net_info_t jhi_jhniNet[jhi_jhniNet46,1238
} jf_host_info_t;47,1302

jiutai/jtsqlite.h,412
#define JIUTAI_JTSQLITE_H14,241
typedef struct jf_sqlite_init_param28,656
    olchar_t * jsip_pstrDbName;30,694
    u32 jsip_u32Reserved[jsip_u32Reserved31,726
} jf_sqlite_init_param_t;32,755
typedef struct jf_sqlite34,782
    boolean_t js_bTransactionStarted;36,809
    boolean_t js_bInitialized;37,847
    u8 js_u8Reserved[js_u8Reserved38,878
    sqlite3 * js_psSqlite;40,904
} jf_sqlite_t;41,931

jiutai/syncrwlock.c,492
static u32 _acquireSyncReadlock(25,579
static u32 _acquireSyncWritelock(86,2216
u32 jf_rwlock_init(152,3984
u32 jf_rwlock_fini(184,4711
u32 jf_rwlock_acquireReadlock(207,5130
u32 jf_rwlock_tryAcquireReadlock(232,5565
u32 jf_rwlock_acquireReadlockWithTimeout(257,6003
u32 jf_rwlock_releaseReadlock(288,6629
u32 jf_rwlock_acquireWritelock(334,7671
u32 jf_rwlock_tryAcquireWritelock(360,8139
u32 jf_rwlock_acquireWritelockWithTimeout(386,8610
u32 jf_rwlock_releaseWritelock(418,9262

jiutai/ifmgmt.h,1342
#define JIUFENG_IFMGMT_H16,315
#undef IFMGMTAPI36,826
#undef IFMGMTCALL37,843
        #define IFMGMTAPI 41,937
        #define IFMGMTCALL42,986
        #define IFMGMTAPI44,1023
        #define IFMGMTCALL 45,1049
    #define IFMGMTAPI48,1101
    #define IFMGMTCALL49,1123
#define JF_IFMGMT_MAX_IF 55,1266
#define JF_IFMGMT_MAX_IF_NAME_LEN 58,1345
#define JF_IFMGMT_MAX_IF_IP_LEN 61,1431
#define JF_IFMGMT_MAC_LEN 64,1510
#define JF_IPADDR_TYPE_V4 66,1561
#define JF_IPADDR_TYPE_V6 68,1608
#define JF_IFMGMT_IF_FLAGS_STR_SIZE 70,1655
    u8 ji_u8AddrType;76,1800
    u8 ji_u8Reserved[ji_u8Reserved77,1822
        olint_t ju_nAddr;80,1863
        u8 ju_u8Addr[ju_u8Addr81,1889
    } ji_uAddr;82,1915
} jf_ipaddr_t;83,1931
typedef struct jf_ifmgmt_if85,1947
    boolean_t jii_bUp;87,1977
    boolean_t jii_bBroadcast;88,2000
    boolean_t jii_bPointopoint;89,2030
    boolean_t jii_bLoopback;90,2062
    boolean_t jii_bRunning;91,2091
    boolean_t jii_bPromisc;92,2119
    boolean_t jii_bMulticast;93,2147
    u8 jii_u8Reserved;94,2177
    olchar_t jii_strName[jii_strName96,2201
    jf_ipaddr_t jii_jiAddr;98,2255
    jf_ipaddr_t jii_jiNetmask;99,2283
    jf_ipaddr_t jii_jiBroadcast;100,2314
    u8 jii_u8Mac[jii_u8Mac102,2348
    u8 jii_u8Reserved2[jii_u8Reserved2104,2436
} jf_ifmgmt_if_t;105,2463

jiutai/errcode.h,15371
#define JIUFENG_ERRCODE_H19,627
#define JF_ERR_CODE_FLAG_SYSTEM 30,959
#define JF_ERR_CODE_MODULE_MASK 32,1009
#define JF_ERR_CODE_MODULE_SHIFT 33,1060
#define JF_ERR_CODE_CODE_MASK 34,1103
#define JF_ERR_NO_ERROR 38,1194
#define JF_ERR_UNKNOWN_ERROR 41,1260
#define JF_ERR_GENERIC_ERROR 42,1301
#define JF_ERR_JIUTAI_ERROR 45,1362
#define JF_ERR_BASES_ERROR 46,1403
#define JF_ERR_XMALLOC_ERROR 47,1466
#define JF_ERR_ARRAY_ERROR 48,1529
#define JF_ERR_SYNCMUTEX_ERROR 49,1592
#define JF_ERR_RESPOOL_ERROR 50,1655
#define JF_ERR_HASH_ERROR 51,1718
#define JF_ERR_CONFFILE_ERROR 52,1781
#define JF_ERR_HOSTINFO_ERROR 53,1844
#define JF_ERR_MENU_ERROR 54,1907
#define JF_ERR_PROCESS_ERROR 55,1970
#define JF_ERR_CKSUM_ERROR 56,2033
#define JF_ERR_SHAREDMEMORY_ERROR 57,2096
#define JF_ERR_XTIME_ERROR 58,2159
#define JF_ERR_RESOURCE_ERROR 59,2222
#define JF_ERR_SYNCSEM_ERROR 60,2285
#define JF_ERR_DYNLIB_ERROR 61,2348
#define JF_ERR_OBSTACK_ERROR 62,2411
#define JF_ERR_ATTASK_ERROR 63,2475
#define JF_ERR_BITARRAY_ERROR 64,2539
#define JF_ERR_RADIXTREE_ERROR 65,2603
#define JF_ERR_SYNCRWLOCK_ERROR 66,2667
#define JF_ERR_COMMINIT_ERROR 67,2731
#define JF_ERR_STATIC_LIB_ERROR 69,2796
#define JF_ERR_DYNAMIC_LIB_ERROR 71,2839
#define JF_ERR_LOGGER_ERROR 72,2881
#define JF_ERR_ARCHIVE_ERROR 73,2949
#define JF_ERR_SMTP_ERROR 74,3017
#define JF_ERR_NETWORK_ERROR 75,3085
#define JF_ERR_ENCRYPT_ERROR 76,3153
#define JF_ERR_ENCODE_ERROR 77,3221
#define JF_ERR_NETSEND_ERROR 78,3289
#define JF_ERR_CLIENG_ERROR 79,3357
#define JF_ERR_EVENT_ERROR 80,3425
#define JF_ERR_STRINGPARSE_ERROR 81,3493
#define JF_ERR_FILES_ERROR 82,3561
#define JF_ERR_UUID_ERROR 83,3629
#define JF_ERR_XMLPARSER_ERROR 84,3697
#define JF_ERR_HTTPPARSER_ERROR 85,3765
#define JF_ERR_WEBCLIENT_ERROR 86,3833
#define JF_ERR_WEBSERVER_ERROR 87,3901
#define JF_ERR_SLP_ERROR 88,3969
#define JF_ERR_BIGNUM_ERROR 89,4038
#define JF_ERR_CGHASH_ERROR 90,4107
#define JF_ERR_CGMAC_ERROR 91,4176
#define JF_ERR_PRNG_ERROR 92,4245
#define JF_ERR_JIUKUN_ERROR 93,4314
#define JF_ERR_IFMGMT_ERROR 94,4383
#define JF_ERR_SERVMGMT_ERROR 95,4452
#define JF_ERR_MATRIX_ERROR 96,4521
#define JF_ERR_PERSISTENCY_ERROR 97,4590
#define JF_ERR_SERVICE_ERROR 99,4660
#define JF_ERR_JIUHUA_ERROR 100,4700
#define JF_ERR_APPLICATION_ERROR 102,4765
#define JF_ERR_CLI_ERROR 103,4805
#define JF_ERR_VENDOR_SPEC_ERROR 105,4874
#define JF_ERR_GENERIC_ERROR_START 108,4936
#define JF_ERR_NOT_FOUND 110,5023
#define JF_ERR_TIMEOUT 111,5083
#define JF_ERR_NULL_POINTER 112,5141
#define JF_ERR_FILE_NOT_FOUND 113,5204
#define JF_ERR_NOT_SUPPORTED 114,5269
#define JF_ERR_OPERATION_FAIL 115,5333
#define JF_ERR_PROGRAM_ERROR 116,5398
#define JF_ERR_BUFFER_TOO_SMALL 117,5462
#define JF_ERR_WRONG_PRODUCT_TYPE 118,5529
#define JF_ERR_NOT_IMPLEMENTED 119,5598
#define JF_ERR_OUT_OF_RANGE 120,5664
#define JF_ERR_INVALID_VERSION 121,5727
#define JF_ERR_PENDING 122,5793
#define JF_ERR_INVALID_DATA 123,5851
#define JF_ERR_BUSY 124,5914
#define JF_ERR_INVALID_PARAM 125,5969
#define JF_ERR_MISSING_PARAM 126,6033
#define JF_ERR_ALREADY_EXIST 127,6098
#define JF_ERR_INVALID_FILE 128,6163
#define JF_ERR_INVALID_INPUT 129,6227
#define JF_ERR_SERVICE_UNAVAILABLE 130,6292
#define JF_ERR_SERVICE_BUSY 131,6363
#define JF_ERR_NOT_READY 132,6427
#define JF_ERR_NOT_MATCH 133,6488
#define JF_ERR_BUFFER_IS_FULL 134,6549
#define JF_ERR_NOT_INITIALIZED 135,6615
#define JF_ERR_BASES_ERROR_START 138,6701
#define JF_ERR_FAIL_CREATE_QUEUE 140,6784
#define JF_ERR_END_OF_HASHTREE 141,6850
#define JF_ERR_HASHTREE_ENTRY_NOT_FOUND 142,6916
#define JF_ERR_XMALLOC_ERROR_START 145,7012
#define JF_ERR_OUT_OF_MEMORY 147,7099
#define JF_ERR_ARRAY_ERROR_START 150,7182
#define JF_ERR_SYNCMUTEX_ERROR_START 155,7334
#define JF_ERR_FAIL_CREATE_MUTEX 157,7425
#define JF_ERR_FAIL_DESTROY_MUTEX 158,7521
#define JF_ERR_FAIL_ACQUIRE_MUTEX 159,7618
#define JF_ERR_FAIL_RELEASE_MUTEX 160,7715
#define JF_ERR_RESPOOL_ERROR_START 163,7833
#define JF_ERR_RESOURCE_BUSY 165,7920
#define JF_ERR_REACH_MAX_RESOURCES 166,7984
#define JF_ERR_HASH_ERROR_START 169,8072
#define JF_ERR_HASH_ENTRY_NOT_FOUND 171,8153
#define JF_ERR_CONFFILE_ERROR_START 174,8243
#define JF_ERR_CONFFILE_INVALID_FLAGS 176,8332
#define JF_ERR_CONFFILE_LINE_TOO_LONG 177,8406
#define JF_ERR_CONFFILE_UNKNOWN_ENTRY 178,8480
#define JF_ERR_CONFFILE_INVALID_ENTRY 179,8554
#define JF_ERR_CONFFILE_ILLEGAL_SYNTAX 180,8628
#define JF_ERR_CONFFILE_MISSING_SECTION_NAME 181,8703
#define JF_ERR_HOSTINFO_ERROR_START 184,8806
#define JF_ERR_MENU_ERROR_START 189,8963
#define JF_ERR_PROCESS_ERROR_START 194,9111
#define JF_ERR_PROCESS_CREATED 196,9198
#define JF_ERR_ALREADY_RUNNING 197,9264
#define JF_ERR_FAIL_CREATE_PROCESS 199,9331
#define JF_ERR_FAIL_CREATE_THREAD 200,9427
#define JF_ERR_FAIL_STOP_THREAD 201,9522
#define JF_ERR_FAIL_WAIT_THREAD_TERMINATION 202,9615
#define JF_ERR_FAIL_TERMINATE_THREAD 203,9720
#define JF_ERR_FAIL_GET_CWD 204,9818
#define JF_ERR_FAIL_SET_CWD 205,9907
#define JF_ERR_FAIL_TERMINATE_PROCESS 206,9996
#define JF_ERR_FAIL_WAIT_PROCESS_TERMINATION 207,10095
#define JF_ERR_CKSUM_ERROR_START 210,10220
#define JF_ERR_SHAREDMEMORY_ERROR_START 215,10371
#define JF_ERR_INVALID_SHAREDMEMORY_ID 217,10468
#define JF_ERR_FAIL_CREATE_SHAREDMEMORY 219,10548
#define JF_ERR_FAIL_SET_SHAREDMEMORY_ATTR 220,10654
#define JF_ERR_FAIL_ATTACH_SHAREDMEMORY 221,10762
#define JF_ERR_FAIL_DETACH_SHAREDMEMORY 222,10868
#define JF_ERR_FAIL_DESTROY_SHAREDMEMORY 223,10974
#define JF_ERR_XTIME_ERROR_START 226,11100
#define JF_ERR_FAIL_GET_TIME 228,11183
#define JF_ERR_RESOURCE_ERROR_START 231,11293
#define JF_ERR_SYNCSEM_ERROR_START 236,11453
#define JF_ERR_FAIL_CREATE_SEM 238,11540
#define JF_ERR_FAIL_DESTROY_SEM 239,11632
#define JF_ERR_FAIL_ACQUIRE_SEM 240,11725
#define JF_ERR_FAIL_RELEASE_SEM 241,11818
#define JF_ERR_DYNLIB_ERROR_START 244,11931
#define JF_ERR_FAIL_LOAD_DYNLIB 246,12016
#define JF_ERR_FAIL_FREE_DYNLIB 247,12108
#define JF_ERR_FAIL_GET_SYMBOL_ADDR 248,12200
#define JF_ERR_OBSTACK_ERROR_START 251,12317
#define JF_ERR_ATTASK_ERROR_START 256,12490
#define JF_ERR_ATTASK_ITEM_NOT_FOUND 258,12575
#define JF_ERR_BITARRAY_ERROR_START 261,12668
#define JF_ERR_RADIXTREE_ERROR_START 266,12830
#define JF_ERR_RADIXTREE_ENTRY_EXIST 268,12921
#define JF_ERR_SYNCRWLOCK_ERROR_START 271,13018
#define JF_ERR_FAIL_CREATE_RWLOCK 273,13111
#define JF_ERR_FAIL_DESTROY_RWLOCK 274,13209
#define JF_ERR_FAIL_ACQUIRE_RWLOCK 275,13308
#define JF_ERR_FAIL_RELEASE_RWLOCK 276,13407
#define JF_ERR_COMMINIT_ERROR_START 279,13528
#define JF_ERR_FAIL_INIT_NET_LIB 281,13617
#define JF_ERR_FAIL_FINI_NET_LIB 282,13712
#define JF_ERR_LOGGER_ERROR_START 285,13827
#define JF_ERR_CALLER_NAME_TOO_LONG 287,13912
#define JF_ERR_ARCHIVE_ERROR_START 290,14003
#define JF_ERR_ARCHIVE_OPEN_FAIL 292,14090
#define JF_ERR_INVALID_FILE_TYPE 293,14158
#define JF_ERR_REACH_MAX_DIR_DEPTH 294,14226
#define JF_ERR_ARCHIVE_CORRUPTED 295,14296
#define JF_ERR_UNRECOGNIZED_FILE_TYPE 296,14364
#define JF_ERR_SMTP_ERROR_START 299,14455
#define JF_ERR_FAIL_SEND_EMAIL 301,14536
#define JF_ERR_EMAIL_SUBJECT_TOO_LONG 302,14599
#define JF_ERR_SMTP_NOT_WELCOME 303,14669
#define JF_ERR_INVALID_SMTP_MSG 304,14733
#define JF_ERR_SMTP_DENY_SENDER 305,14797
#define JF_ERR_SMTP_DENY_RECIPIENT 306,14861
#define JF_ERR_SMTP_FATAL_ERROR 307,14928
#define JF_ERR_INVALID_SMTP_RECIPIENTS 308,14992
#define JF_ERR_UNSUPPORTED_SMTP_AUTH_METHOD 309,15063
#define JF_ERR_INVALID_SMTP_AUTH_CHALLENGE 310,15139
#define JF_ERR_NETWORK_ERROR_START 313,15235
#define JF_ERR_FAIL_INIT_NETWORK_LIB 315,15322
#define JF_ERR_SOCKET_PEER_CLOSED 316,15394
#define JF_ERR_SOCKET_ALREADY_CLOSED 317,15463
#define JF_ERR_ASOCKET_IN_USE 318,15535
#define JF_ERR_HOST_NOT_FOUND 319,15600
#define JF_ERR_HOST_NO_ADDRESS 320,15665
#define JF_ERR_NAME_SERVER_NO_RECOVERY 321,15731
#define JF_ERR_RESOLVE_TRY_AGAIN 322,15805
#define JF_ERR_CREATE_SECURE_SOCKET_ERROR 323,15873
#define JF_ERR_SECURE_SOCKET_NEGOTIATE_ERROR 324,15950
#define JF_ERR_SECURE_SOCKET_SHUTDOWN_ERROR 325,16030
#define JF_ERR_SECURE_SOCKET_NOT_NEGOTIATED 326,16109
#define JF_ERR_UTIMER_ITEM_NOT_FOUND 327,16188
#define JF_ERR_FAIL_CREATE_SOCKET 329,16261
#define JF_ERR_FAIL_BIND_SOCKET 330,16356
#define JF_ERR_FAIL_SEND_ICMP 331,16449
#define JF_ERR_FAIL_RECEIVE_ICMP 332,16540
#define JF_ERR_FAIL_IOCTL_SOCKET 333,16634
#define JF_ERR_FAIL_CLOSE_SOCKET 334,16728
#define JF_ERR_FAIL_GET_ADAPTER_INFO 335,16822
#define JF_ERR_FAIL_SEND_DATA 336,16920
#define JF_ERR_FAIL_RECV_DATA 337,17011
#define JF_ERR_FAIL_INITIATE_CONNECTION 338,17102
#define JF_ERR_FAIL_ACCEPT_CONNECTION 339,17203
#define JF_ERR_FAIL_ENABLE_BROADCAST 340,17302
#define JF_ERR_FAIL_JOIN_MULTICAST_GROUP 341,17400
#define JF_ERR_FAIL_CREATE_SOCKET_PAIR 342,17502
#define JF_ERR_FAIL_LISTEN_ON_SOCKET 343,17602
#define JF_ERR_SELECT_ERROR 344,17700
#define JF_ERR_FAIL_RESOLVE_HOST 345,17789
#define JF_ERR_FAIL_GET_SOCKET_NAME 346,17884
#define JF_ERR_FAIL_GET_SOCKET_OPT 347,17982
#define JF_ERR_FAIL_SET_SOCKET_OPT 348,18079
#define JF_ERR_ENCRYPT_ERROR_START 351,18197
#define JF_ERR_INVALID_ENCRYPT_KEY 353,18284
#define JF_ERR_ENCRYPT_STRING_ERROR 354,18354
#define JF_ERR_DECRYPT_STRING_ERROR 355,18425
#define JF_ERR_INVALID_DECRYPT_KEY 356,18496
#define JF_ERR_ENCODE_ERROR_START 359,18586
#define JF_ERR_FAIL_BUILD_HUFFMAN_TREE 361,18671
#define JF_ERR_NETSEND_ERROR_START 364,18765
#define JF_ERR_FAIL_SEND_NETSEND_MSG 366,18852
#define JF_ERR_FAIL_QUERY_NETBIOS_NAME 367,18924
#define JF_ERR_CLIENG_ERROR_START 370,19018
#define JF_ERR_CMD_NAME_TOO_LONG 372,19103
#define JF_ERR_CMD_ALREADY_EXIST 373,19170
#define JF_ERR_CLIENG_PROMPT_TOO_LONG 374,19237
#define JF_ERR_INVALID_ITEM_FLAG 375,19309
#define JF_ERR_INVALID_CMD_GROUP 376,19376
#define JF_ERR_INVALID_COMMAND 377,19443
#define JF_ERR_CMD_TOO_LONG 378,19508
#define JF_ERR_BLANK_CMD 379,19570
#define JF_ERR_INVALID_COUNT 380,19629
#define JF_ERR_COMMENT_CMD 381,19692
#define JF_ERR_LINE_TOO_LONG 382,19753
#define JF_ERR_EVENT_ERROR_START 385,19829
#define JF_ERR_EVENT_NOT_FOUND 387,19912
#define JF_ERR_INVALID_EVENT_LOCATION 388,19974
#define JF_ERR_EVENT_ID_OUTOFRANGE 389,20045
#define JF_ERR_EVENT_EMPTY_STRING 390,20113
#define JF_ERR_EVENT_STRLENGTH_TOOLONG 391,20180
#define JF_ERR_EVENT_DUPLICATED 392,20252
#define JF_ERR_EVENT_TOTAL_EXCEED_MAX 393,20317
#define JF_ERR_EVENT_NEW_EVENT 394,20388
#define JF_ERR_EVENT_MISSING_EVENT 395,20452
#define JF_ERR_EVENT_DUPLICATE_SEVERITY 396,20520
#define JF_ERR_EVENT_DUPLICATE_CLASS 397,20593
#define JF_ERR_EVENT_DUPLICATE_LOGLOCATION 398,20663
#define JF_ERR_EVENT_LINE_BREAK 399,20739
#define JF_ERR_STRINGPARSE_ERROR_START 402,20830
#define JF_ERR_INVALID_STRING 404,20925
#define JF_ERR_INVALID_SIZE 405,20994
#define JF_ERR_INVALID_IP 406,21061
#define JF_ERR_INVALID_IP_ADDR_TYPE 407,21126
#define JF_ERR_NULL_IP_ADDRESS 408,21201
#define JF_ERR_INVALID_DATE 409,21271
#define JF_ERR_INVALID_TIME 410,21338
#define JF_ERR_INVALID_ALIAS 411,21405
#define JF_ERR_INVALID_INTEGER 412,21473
#define JF_ERR_INVALID_USER_NAME 413,21543
#define JF_ERR_INTEGER_OUT_OF_RANGE 414,21615
#define JF_ERR_SUBSTRING_NOT_FOUND 415,21690
#define JF_ERR_INVALID_FLOAT 416,21764
#define JF_ERR_INVALID_SETTING 418,21833
#define JF_ERR_SETTING_TOO_LONG 419,21905
#define JF_ERR_MISSING_QUOTE 420,21978
#define JF_ERR_SETTING_EMPTY 421,22048
#define JF_ERR_FILES_ERROR_START 424,22137
#define JF_ERR_NOT_A_DIR 426,22220
#define JF_ERR_DIR_ALREADY_EXIST 427,22278
#define JF_ERR_END_OF_FILE 429,22345
#define JF_ERR_FILE_ACCESS_VIOLOATION 430,22406
#define JF_ERR_FILE_PATH_TOO_LONG 431,22478
#define JF_ERR_DIR_ENTRY_NOT_FOUND 433,22547
#define JF_ERR_FAIL_CREATE_DIR 434,22641
#define JF_ERR_FAIL_REMOVE_DIR 435,22731
#define JF_ERR_FAIL_GET_ENTRY 436,22821
#define JF_ERR_FAIL_OPEN_DIR 437,22910
#define JF_ERR_FAIL_CREATE_FILE 439,22999
#define JF_ERR_FAIL_OPEN_FILE 440,23091
#define JF_ERR_FAIL_READ_FILE 441,23181
#define JF_ERR_FAIL_WRITE_FILE 442,23271
#define JF_ERR_FAIL_STAT_FILE 443,23362
#define JF_ERR_FAIL_SEEK_FILE 444,23452
#define JF_ERR_FAIL_FLUSH_FILE 445,23542
#define JF_ERR_FAIL_LOCK_FILE 446,23633
#define JF_ERR_FAIL_UNLOCK_FILE 447,23723
#define JF_ERR_FAIL_REMOVE_FILE 448,23815
#define JF_ERR_FAIL_CLOSE_FILE 449,23907
#define JF_ERR_FAIL_IOCTL_FILE 450,23998
#define JF_ERR_FAIL_RENAME_FILE 451,24089
#define JF_ERR_UUID_ERROR_START 454,24200
#define JF_ERR_INVALID_UUID_FORMAT 456,24281
#define JF_ERR_XMLPARSER_ERROR_START 459,24372
#define JF_ERR_INCOMPLETE_XML 461,24463
#define JF_ERR_ILLEGAL_CLOSE_TAG 462,24530
#define JF_ERR_UNMATCHED_CLOSE_TAG 463,24600
#define JF_ERR_CORRUPTED_XML_FILE 464,24672
#define JF_ERR_INVALID_XML_DECLARATION 465,24743
#define JF_ERR_LIBXML_PARSE_ERROR 466,24819
#define JF_ERR_HTTPPARSER_ERROR_START 469,24915
#define JF_ERR_HTTP_STATUS_NOT_OK 471,25008
#define JF_ERR_CORRUPTED_HTTP_MSG 472,25080
#define JF_ERR_INVALID_HTTP_URI 473,25152
#define JF_ERR_WEBCLIENT_ERROR_START 476,25245
#define JF_ERR_WEBSERVER_ERROR_START 481,25410
#define JF_ERR_SLP_ERROR_START 486,25569
#define JF_ERR_INVALID_SLP_MSG 488,25648
#define JF_ERR_SLP_SERVICE_NOT_FOUND 489,25710
#define JF_ERR_FAIL_SEND_SLP_MSG 490,25778
#define JF_ERR_SLP_INVALID_SERV 491,25842
#define JF_ERR_SLP_REACH_MAX_SERV 492,25905
#define JF_ERR_BIGNUM_ERROR_START 495,25990
#define JF_ERR_FAIL_CREATE_RAND_BIGNUM 497,26075
#define JF_ERR_CGHASH_ERROR_START 500,26168
#define JF_ERR_SHA1_STATE_ERROR 502,26253
#define JF_ERR_CGMAC_ERROR_START 505,26338
#define JF_ERR_PRNG_ERROR_START 510,26490
#define JF_ERR_PRNG_NOT_SEEDED 512,26571
#define JF_ERR_FAIL_GET_RANDOM_DATA 513,26634
#define JF_ERR_JIUKUN_ERROR_START 516,26721
#define JF_ERR_FAIL_DESTROY_JIUKUN_CACHE 518,26806
#define JF_ERR_FAIL_CREATE_JIUKUN_CACHE 519,26881
#define JF_ERR_JIUKUN_CACHE_GROW_NOT_ALLOW 520,26955
#define JF_ERR_FAIL_GROW_JIUKUN_CACHE 521,27032
#define JF_ERR_UNSUPPORTED_MEMORY_SIZE 522,27104
#define JF_ERR_FAIL_ALLOC_JIUKUN_PAGE 523,27177
#define JF_ERR_INVALID_JIUKUN_PAGE_ORDER 524,27249
#define JF_ERR_JIUKUN_OUT_OF_MEMORY 525,27324
#define JF_ERR_FAIL_REAP_JIUKUN 526,27394
#define JF_ERR_IFMGMT_ERROR_START 529,27480
#define JF_ERR_ETHERNET_ADAPTER_NOT_FOUND 531,27565
#define JF_ERR_INVALID_MAC_ADDR 532,27641
#define JF_ERR_SERVMGMT_ERROR_START 535,27729
#define JF_ERR_WAKEUP_SERV_NOT_FOUND 537,27818
#define JF_ERR_MATRIX_ERROR_START 540,27911
#define JF_ERR_MATRIX_SINGULAR 542,27996
#define JF_ERR_PERSISTENCY_ERROR_START 545,28086
#define JF_ERR_SQL_EVAL_ERROR 547,28181
#define JF_ERR_PERSISTENCY_INIT_ERROR 548,28250
#define JF_ERR_SQL_COMPILE_ERROR 549,28327
#define JF_ERR_CLI_ERROR_START 552,28416
#define JF_ERR_LOGOUT_REQUIRED 554,28495
#define JF_ERR_MORE_CANCELED 556,28558
#define JF_ERR_CLI_TOO_MANY_OPTIONS 557,28618
#define JF_ERR_CLI_TERMINATED 558,28685
#define JF_ERR_INVALID_ACTION 560,28747
#define JF_ERR_ACTION_NOT_APPLY 561,28809
#define JF_ERR_INVALID_OPTION 562,28873
#define JF_ERR_VENDOR_SPEC_ERROR_START 565,28964
#define JF_ERR_MAX_VENDOR_SPEC_ERROR 569,29152

jiutai/syncmutex.c,190
u32 jf_mutex_init(29,640
u32 jf_mutex_fini(60,1275
u32 jf_mutex_acquire(86,1730
u32 jf_mutex_tryAcquire(123,2427
u32 jf_mutex_acquireWithTimeout(156,3051
u32 jf_mutex_release(192,3832

jiutai/cghash.h,485
#define JIUFENG_CGHASH_H13,138
#undef CGHASHAPI20,347
#undef CGHASHCALL21,364
        #define CGHASHAPI 25,458
        #define CGHASHCALL26,507
        #define CGHASHAPI28,544
        #define CGHASHCALL 29,570
    #define CGHASHAPI32,622
    #define CGHASHCALL33,644
#define JF_CGHASH_MD5_DIGEST_LEN 40,837
    u8 jcm_u8Ctx[jcm_u8Ctx44,895
} jf_cghash_md5_t;45,918
#define JF_CGHASH_SHA1_DIGEST_LEN 59,1409
    u8 jcs_u8Ctx[jcs_u8Ctx63,1468
} jf_cghash_sha1_t;64,1491

jiutai/webclient.h,705
#define JIUFENG_WEBCLIENT_H13,137
#undef WEBCLIENTAPI21,373
#undef WEBCLIENTCALL22,393
        #define WEBCLIENTAPI 26,493
        #define WEBCLIENTCALL27,545
        #define WEBCLIENTAPI29,585
        #define WEBCLIENTCALL 30,614
    #define WEBCLIENTAPI33,669
    #define WEBCLIENTCALL34,694
typedef void  jf_webclient_t;38,808
enum jf_webclient_event42,917
    JF_WEBCLIENT_EVENT_DATA 44,943
    JF_WEBCLIENT_EVENT_DATAOBJECT_DESTROYED,45,976
    JF_WEBCLIENT_EVENT_WEB_REQUEST_DELETED,46,1021
} jf_webclient_event_t;47,1065
    olint_t jwcp_nPoolSize;52,1187
    olsize_t jwcp_sBuffer;53,1215
} jf_webclient_create_param_t;54,1242
typedef u32 (* jf_webclient_fnOnResponse_t)56,1274

dongyuan/dongyuan.h,217
#define JIUFENG_DONGYUAN_H13,146
typedef void  dongyuan_t;25,540
    olchar_t * gp_pstrCmdLine;29,584
    olchar_t * gp_pstrSettingFile;30,615
    u8 gp_u8Reserved[gp_u8Reserved31,650
} dongyuan_param_t;32,676

dongyuan/dongyuan.c,264
    olchar_t * ig_pstrSettingFile;36,714
    u32 ig_u8Reserved[ig_u8Reserved37,749
} internal_dongyuan_t;38,775
u32 createDongyuan(44,961
u32 destroyDongyuan(79,1936
u32 startDongyuan(91,2132
u32 stopDongyuan(109,2514
u32 setDefaultDongyuanParam(123,2760

dongyuan/main.c,591
static dongyuan_t * ls_pgDongyuan 26,552
static boolean_t ls_bForeground 27,594
static const olchar_t * ls_pstrProgramName 29,636
static const olchar_t * ls_pstrVersion 30,695
    #define SERVICE_RETURN_VALUE 33,765
    #define SERVICE_RETURN(34,803
    #define SERVICE_RETURN_VALUE 36,873
    #define SERVICE_RETURN(37,912
static void _printDongyuanUsage(41,1041
static u32 _parseDongyuanCmdLineParam(59,1554
static void _terminate(113,3008
static u32 _startDongyuan(121,3152
static u32 _initDongyuan(137,3472
SERVICE_RETURN_VALUE _serviceMain(177,4530
olint_t main(191,4876

clieng/engio.h,1484
#define CLIENG_IO_H13,142
#define MAX_OUTPUT_BUFFER_LEN 25,492
    cik_unknown 31,629
    cik_tab,32,650
    cik_up,33,663
    cik_down,34,675
    cik_right,35,689
    cik_left,36,704
    cik_enter,37,718
    cik_esc,38,733
    cik_pgup,39,746
    cik_pgdn,40,760
    cik_space,41,774
    cik_save,42,789
    cik_restore,43,803
    cik_return,44,820
    cik_help,45,836
    cik_backspace,46,850
    cik_delete,47,869
    cik_home,48,885
    cik_end,49,899
    cik_insert,50,912
    cik_f1,51,928
    cik_f2,52,940
    cik_f3,53,952
    cik_f4,54,964
    cik_f5,55,976
    cik_f6,56,988
    cik_f7,57,1000
    cik_f8,58,1012
    cik_f9,59,1024
    cik_f10,60,1036
    cik_f11,61,1049
    cik_f12,62,1062
} clieng_io_key_t;63,1075
    cit_unknown 67,1110
    cit_line,68,1131
    cit_navigation_cmd,69,1145
    cit_param,70,1169
    cit_password,71,1184
    cit_anykey,72,1202
} clieng_input_type_t;73,1218
    cnc_nextCommand 77,1257
    cnc_previousCommand,78,1282
} clieng_navigation_command_t;79,1307
    cot_unknown 83,1354
    cot_text,84,1375
    cot_navigation,85,1389
} clieng_output_type_t;86,1409
    cgt_baudRate 90,1449
    cgt_flowControl,91,1471
} clieng_gettty_type_t;92,1492
    cst_baudRate 96,1532
    cst_flowControl,97,1554
} clieng_settty_type_t;98,1575
    olchar_t * cip_pstrNewLine;102,1617
    FILE * cip_fhOutput;103,1649
    u32 cip_u32Reserved[cip_u32Reserved104,1674
} clieng_io_param_t;105,1702

clieng/clieng.c,1572
#define DEFAULT_PROMPT 29,603
#define MAX_PROMPT_LEN 30,642
#define MAX_USER_NAME_LEN 32,679
    boolean_t ic_bInitialized;36,733
    u8 ic_u8Reserved[ic_u8Reserved37,764
	clieng_cmd_history_t * ic_pcchCmdHistory;38,789
	clieng_parser_t * ic_pcpParser;39,832
    olsize_t ic_sMaxCmdLine;40,865
    olchar_t ic_strUsername[ic_strUsername41,894
    olchar_t ic_strInputBuffer[ic_strInputBuffer42,942
    olchar_t ic_strPrompt[ic_strPrompt43,1007
    jf_clieng_fnPrintGreeting_t ic_fnPrintGreeting;44,1050
    jf_clieng_fnPreEnterLoop_t ic_fnPreEnterLoop;45,1102
    jf_clieng_fnPostExitLoop_t ic_fnPostExitLoop;46,1152
    void * ic_pMaster;47,1202
    boolean_t  ic_bTerminateClieng;48,1225
    boolean_t ic_bEnableScriptEngine;49,1261
    olchar_t ic_strInputCmd[ic_strInputCmd50,1299
    u32 ic_u32Reserved[ic_u32Reserved51,1361
} internal_clieng_t;52,1388
static olint_t ls_nTerminationSignal 54,1410
static internal_clieng_t ls_icClieng;55,1453
static u32 _createCmdHistory(59,1573
static u32 _createInputOutput(75,2006
static u32 _createParser(91,2385
void _terminateCliengShell(109,2830
static u32 _registerSignalHandlers(114,2929
static u32 _printPrompt(173,4535
static u32 _cliengLoop(185,4802
static u32 _processScriptCmd(254,6848
u32 jf_clieng_clearCommandHistory(265,7125
u32 jf_clieng_init(275,7318
u32 jf_clieng_run(315,8401
u32 jf_clieng_stop(355,9380
u32 jf_clieng_fini(365,9546
u32 jf_clieng_newCmd(383,9920
u32 jf_clieng_newCmdSet(401,10490
u32 jf_clieng_addToCmdSet(409,10645
u32 jf_clieng_setPrompt(417,10797

clieng/engio.c,2958
const static olchar_t * cls_pstrCaptionDelimit 30,604
const static olchar_t * cls_pstrByteHexDumpBegin 32,660
const static olchar_t * cls_pstrByteHexDumpEnd 33,737
const static olchar_t * cls_pstrBanner 35,811
const static olchar_t * cls_pstrDivider 38,938
const static olchar_t * cls_pstrBannerShift4 41,1066
const static olchar_t * cls_pstrDividerShift2 44,1199
    boolean_t ici_bInitialized;49,1350
    u8 ici_u8Reserved[ici_u8Reserved50,1382
	char ici_strSpecialDelimit[ici_strSpecialDelimit52,1422
	char ici_strNewLine[ici_strNewLine53,1454
	char ici_strBlankSpaces[ici_strBlankSpaces54,1479
    olchar_t ici_strOutputBuffer[ici_strOutputBuffer55,1536
    olsize_t ici_sNewLine;56,1593
	u8 ici_u8MoreLines;57,1620
    u8 ici_u8Reserved4[ici_u8Reserved458,1641
	boolean_t ici_bSpecialDelimit;61,1801
	boolean_t ici_bMoreEnabled;62,1833
	boolean_t ici_bMoreCancel;63,1862
    u8 ici_u8Reserved2[ici_u8Reserved264,1890
    FILE * ici_fhOutput;65,1917
} internal_clieng_io_t;66,1942
    #define MAX_MORE_LINES 69,1983
    #define MAX_MORE_LINES 71,2038
#define MAX_CMD_LEN 75,2108
#define MAX_CMD_HISTORY 76,2144
static olchar_t str_backspace[str_backspace80,2231
static internal_clieng_io_t ls_iciCliengIo;82,2301
u32 _getMaxMoreLines(86,2442
static u32 _switchToRawMode(107,2731
static u32 _switchToCanonMode(131,3225
static void _back_space_simple(157,3728
static void _right_arrow_simple(170,4010
static void _left_arrow_simple(177,4104
static void _down_arrow_simple(184,4197
static void _upper_arrow_simple(191,4290
static void _back_space(198,4384
static void _right_arrow(218,4742
static void _left_arrow(236,5048
static u32 _getInputPassword(254,5354
static u32 _getInputLine(294,6194
#define MAX_INPUT_LEN 298,6310
static u32 _getAnyKey(534,12834
static u32 _getInput(592,14247
static u32 _postOutput(620,14878
static u32 _waitForMore(638,15238
static u32 _checkCaption(677,16473
u32 initCliengIo(697,16953
u32 finiCliengIo(731,17949
u32 engioInput(746,18195
u32 voutputLine(761,18613
u32 outputLine(842,21012
u32 engioOutput(860,21426
u32 outputParagraph(913,22863
u32 switchSpecialDelimit(1018,25875
char * getEOL(1028,26087
char * getDelimit(1038,26268
void setMoreEnable(1066,26973
void setMoreDisable(1076,27165
u32 getInputKey(1089,27390
u32 jf_clieng_outputLine(1252,32150
u32 jf_clieng_outputRawLine(1264,32363
u32 jf_clieng_outputRawLine2(1344,34750
u32 jf_clieng_reportNotApplicableOpt(1359,35138
u32 jf_clieng_reportInvalidOpt(1368,35313
u32 jf_clieng_printBanner(1377,35482
u32 jf_clieng_printBannerShift4(1392,35836
u32 jf_clieng_printDivider(1407,36204
u32 jf_clieng_printDividerShift2(1416,36339
u32 jf_clieng_printHexDumpInByte(1425,36486
u32 jf_clieng_printHeader(1449,37155
u32 jf_clieng_printHeaderShift4(1478,38016
u32 jf_clieng_printOneFullLine(1508,38892
u32 jf_clieng_printTwoHalfLine(1526,39309
void jf_clieng_appendBriefColumn(1557,40240

clieng/cmdparser.h,198
#define CLIENG_CMDPARSER_H13,150
typedef void  clieng_parser_t;27,582
    u32 cpp_u32MaxCmdSet;31,631
    u32 cpp_u32MaxCmd;32,657
    void * cpp_pMaster;33,680
} clieng_parser_param_t;34,704

clieng/cmdhistory.h,187
#define CLIENG_CMDHISTORY_H13,145
typedef void clieng_cmd_history_t;24,519
	olsize_t cchp_sMaxCmdLine;29,624
	olsize_t cchp_sCmdHistroyBuf;31,712
} clieng_cmd_history_param_t;32,743

clieng/cmdhistory.c,495
#define INVALID_CMD_INDEX 24,497
	olsize_t icch_sMaxCmdLine;29,612
	olsize_t icch_sCmdHistroyBuf;31,717
	olindex_t icch_iCurrentCmd;32,748
	olindex_t icch_iFirstCmd;33,777
	olindex_t icch_iLastCmd;34,804
	olchar_t  icch_strCommands[icch_strCommands35,830
} internal_clieng_cmd_history_t;36,862
u32 createCommandHistory(42,1058
u32 destroyCommandHistory(70,1958
u32 clearCommandHistory(87,2362
u32 appendCommand(105,2798
u32 getPreviousCommand(152,4282
u32 getNextCommand(195,5512

clieng/cmdparser.c,1405
#define MAX_ARGC 41,790
#define MAX_CMD 43,856
#define MAX_CMD_NAME_LEN 45,889
    olchar_t icc_strName[icc_strName49,939
    jf_clieng_fnSetDefaultParam_t icc_fnSetDefaultParam;50,983
    jf_clieng_fnParseCmd_t icc_fnParseCmd;51,1040
    jf_clieng_fnProcessCmd_t icc_fnProcessCmd;52,1083
    void * icc_pParam;53,1130
    u32 icc_u32Reserved[icc_u32Reserved55,1154
} internal_clieng_cmd_t;56,1182
    olchar_t * iccs_pstrName;60,1225
    u32 iccs_u32Reserved[iccs_u32Reserved61,1255
} internal_clieng_cmd_set_t;62,1284
    void * icp_pMaster;66,1331
    olsize_t icp_sArgc;67,1355
    olchar_t * icp_pstrArgv[icp_pstrArgv68,1379
    olchar_t icp_strCommandLine[icp_strCommandLine69,1418
    u32 icp_u32MaxCmdSet;70,1488
    u32 icp_u32NumOfCmdSet;71,1514
    internal_clieng_cmd_set_t * icp_piccsCmdSet;72,1542
    u32 icp_u32MaxCmd;73,1591
    jf_hashtable_t * icp_jhCmd;74,1614
} internal_clieng_parser_t;75,1646
static u32 _printError(79,1756
static u32 _trimCmdLine(101,2369
static u32 _formCmdLineArguments(160,3662
static u32 _preProcessCmdLine(189,4568
static boolean_t _findMore(221,5373
static u32 _parseAndProcess(250,6078
static olint_t _cmpKeys(283,6969
static u32 _freeCmd(288,7095
static olint_t _hashKey(300,7269
static void * _getKeyFromCmd(305,7350
u32 createParser(314,7550
u32 destroyParser(362,8953
u32 parseCmd(384,9412
u32 newCmd(421,10241

test/sharedmemory-test-worker.c,21
olint_t main(30,727

test/prng-test.c,182
boolean_t ls_bMd5 27,561
static void _printUsage(30,669
static u32 _parseCmdLineParam(37,765
static u32 _testPrng(63,1294
#define PRNG_DATA_COUNT 68,1412
olint_t main(133,3106

test/network-test-client.c,224
#define NETWORK_TEST_CLIENT 28,596
#define SERVER_IP 29,637
#define SERVER_PORT 30,678
static void _printUsage(34,797
static u32 _parseCmdLineParam(51,1198
static u32 _networkTestClient(104,2475
olint_t main(156,3776

test/files-test.c,516
static olchar_t * ls_pstrDirName 26,541
static olchar_t * ls_pstrFileName 27,582
static boolean_t ls_bLockFile 28,624
static boolean_t ls_bAppendFile 29,663
static void _printUsage(32,785
static u32 _parseCmdLineParam(45,1017
static u32 _handleFile(83,1843
static u32 _listDir(93,2053
static u32 _testFpWrite(112,2484
static olchar_t * ls_pstrLockFile 129,2846
THREAD_RETURN_VALUE _testLockFileThread(131,2895
static u32 _testLockFile(158,3540
static u32 _testAppendFile(181,4094
olint_t main(202,4665

test/logger-test.c,734
    boolean_t ts_bInitialized;27,542
    u8 ts_u8Reserved[ts_u8Reserved28,573
    olint_t ts_nData1;29,598
    olint_t ts_nData2;30,621
    olint_t ts_nData3;31,644
    olint_t ts_nData4;32,667
} test_struct_t;33,690
static test_struct_t ls_tsStruct;35,708
static boolean_t ls_bDump 36,742
static boolean_t ls_bErrorCode 37,777
static boolean_t ls_bTestLogger 38,817
static u32 ls_u32ErrorCode;40,859
static void _printUsage(44,969
static u32 _scanErrorCode(54,1188
static u32 _parseCmdLineParam(71,1564
static void _testLogger(105,2286
#define E_HELLO_WORLD 127,2901
#define E_SUPER_MAN 128,2962
#define E_IRON_MAN 129,3021
#define E_BAT_MAN 130,3079
static void _printErrorCode(156,3928
olint_t main(174,4397

test/conffile-test.c,375
static void _printUsage(27,599
static u32 _parseCmdLineParam(36,724
    olchar_t * cft_pstrTag;65,1291
    olchar_t * cft_pstrDefault;66,1319
    olint_t cft_nDefault;67,1351
} conf_file_tag_t;68,1377
static conf_file_tag_t ls_cftConfFileTag[ls_cftConfFileTag70,1397
static u32 ls_u32NumOfConfFileTag 83,1696
static u32 _testConfFile(86,1792
olint_t main(138,3706

test/xmalloc-test.c,21
olint_t main(29,666

test/xmlparser-test.c,525
static olchar_t * ls_pstrXmlFileName 52,1198
static void _printUsage(55,1324
static u32 _parseCmdLineParam(71,1752
#define XML_DOCUMENT_1 124,3029
#define XML_DOCUMENT_2 129,3107
#define XML_DOCUMENT_3 134,3181
#define XML_DOCUMENT_4 140,3287
    olchar_t * pstrXml;156,3536
    u32 u32ErrCode;157,3560
} test_xml_parser_t;158,3580
static u32 _testXmlParser_1(160,3602
static u32 _printXmlNodeAttributes(222,5811
static u32 _printXmlNodeAttr(252,6625
static u32 _testXmlParser_2(307,8143
olint_t main(342,9229

test/bitarray-test.c,239
static boolean_t ls_bSizeof 26,557
static void _printUsage(29,675
static u32 _parseCmdLineParam(38,859
static u32 _testBitArrayLogical(68,1478
static u32 _testBitArray(143,3274
static void _testSizeof(249,6159
olint_t main(266,6716

test/bases-test.c,725
static boolean_t ls_bListHead 26,550
static boolean_t ls_bHashTree 27,589
static boolean_t ls_bListArray 28,628
static void _printUsage(32,750
static u32 _parseCmdLineParam(44,1014
    u32 tl_u32Flag1;105,2433
    u32 tl_u32Flag2;106,2454
    jf_listhead_t tl_jlList;107,2475
    u32 tl_u32Flag3;108,2504
    u32 tl_u32Flag4;109,2525
} test_listhead_t;110,2546
static u32 _initTestListhead(112,2566
static void _listHeadEntry(126,2848
static u32 _testListHead(143,3178
static void _printHashTree(212,5145
static u32 _testHashTree(231,5713
static void _dumpListArray(361,9641
#define DEBUG_LOOP_COUNT 376,10066
#define DEBUG_NODE_COUNT 377,10095
static u32 _testListArray(378,10124
olint_t main(454,12212

test/network-test.c,479
#define NETWORK_TEST 29,592
static boolean_t ls_bSocketPair 31,628
static boolean_t ls_bToTerminate 32,669
static olchar_t * ls_pstrServerIp 33,711
static u16 ls_u16Port 34,753
static void _printUsage(37,861
static u32 _parseCmdLineParam(49,1113
THREAD_RETURN_VALUE _socketPairRead(111,2632
THREAD_RETURN_VALUE _socketPairWrite(135,3249
static u32 _testSocketPair(158,3855
static void _terminate(196,4773
static u32 _testConnectServer(201,4845
olint_t main(231,5697

test/syncrwlock-test.c,282
static jf_rwlock_t ls_jrLock;26,559
static boolean_t ls_bToTerminate 27,589
static olint_t nRwlock 28,631
#define MAX_RESOURCE_COUNT 30,660
THREAD_RETURN_VALUE consumer1(33,771
THREAD_RETURN_VALUE consumer2(59,1418
THREAD_RETURN_VALUE producer(85,2065
olint_t main(116,2813

test/jiukun-test.c,617
#define MAX_THREAD_COUNT 27,548
static boolean_t ls_bToTerminate 29,577
boolean_t ls_bMultiThread 31,620
boolean_t ls_bStress 32,655
static void _printUsage(36,767
static u32 _parseCmdLineParam(50,1169
#define DEBUG_LOOP_COUNT 100,2471
u32 _testAllocMem(101,2501
#define MAX_ORDER 183,4730
u32 _testJiukunPage(185,4752
#define TEST_CACHE 267,6972
static jf_jiukun_cache_t * ls_pacCache 268,7004
u32 _testJiukunCache(270,7052
static u32 _stressJiukun(345,9060
THREAD_RETURN_VALUE _allocFree(358,9248
static u32 _testJiukunInThread(385,9946
static u32 _baseJiukunFunc(424,10869
olint_t main(489,12499

test/archive-test.c,349
static olchar_t * ls_pstrArchiveName 25,529
static jf_linklist_t ls_jlMemberFile;26,574
static boolean_t ls_bCreateArchive;27,612
static boolean_t ls_bExtractArchive;28,648
static boolean_t ls_bListArchive;29,685
static boolean_t ls_bVerbose;30,719
static void _printUsage(34,831
static u32 _parseCmdLineParam(54,1448
olint_t main(126,3290

test/bitop-test.c,168
static void _printUsage(28,627
static u32 _parseCmdLineParam(36,759
static olchar_t * _printInBinary64(62,1288
static u32 _testBitOp(87,1680
olint_t main(203,6168

test/hsm-test.c,1227
enum rice_cooker_state_id25,526
    RICE_COOKER_STATE_POWER_OFF 27,554
    RICE_COOKER_STATE_KEEP_WARM,28,591
    RICE_COOKER_STATE_COOK,29,624
enum rice_cooker_event_id32,656
    RICE_COOKER_EVENT_PLUG_IN 34,684
    RICE_COOKER_EVENT_PRESS_BUTTON,35,719
    RICE_COOKER_EVENT_PLUG_OUT,36,755
static hsm_state_t ls_hsRiceCookerStatePowerOff;53,1314
static hsm_state_t ls_hsRiceCookerStateKeepWarm;54,1363
static hsm_state_t ls_hsRiceCookerStateCook;55,1412
static hsm_state_t ls_hsRiceCookerStatePowerOff 57,1458
static hsm_state_t ls_hsRiceCookerStateKeepWarm 67,1733
static hsm_state_t ls_hsRiceCookerStateCook 78,2133
static hsm_statemachine_t ls_hsRiceCookerStateMachine;89,2517
static boolean_t _guardPowerOffForPlugIn(93,2654
static u32 _actionPowerOn(103,2850
static boolean_t _guardKeepWarmForPressButton(111,2958
static boolean_t _guardKeepWarmForPlugOut(121,3164
static u32 _actionCook(131,3362
static u32 _actionPlugOut(139,3467
static boolean_t _guardCookForPressButton(147,3575
static boolean_t _guardCookForPlugOut(157,3777
static u32 _actionKeepWarm(167,3971
static void _printCurrentState(175,4080
static void _printEvent(183,4270
static void _testHsm(202,4717
olint_t main(243,5804

test/encode-test.c,581
static boolean_t ls_bBase64 29,615
static boolean_t ls_bHuffman 30,652
static boolean_t ls_bCanonicalHuffman 31,690
static olchar_t * ls_pstrFile 32,737
static void _printUsage(35,856
static u32 _parseCmdLineParam(47,1115
#define DATA_SIZE 84,1918
static u32 _testBase64(86,1942
static void _bit2String(146,3834
#define NUM_SYMBOL 165,4276
static olint_t _encodeTestCompare(167,4301
static void _printCanonicalHuffmanCode(198,5076
static void _printHuffmanCode(239,6444
static u32 _testGenHuffmanCode(260,7154
static u32 _testHuffman(314,8567
olint_t main(325,8774

test/persistency-test.c,219
static void _printUsage(31,763
static u32 _parseCmdLineParam(41,905
static u32 _testRwPersistency(64,1356
static u32 _testPersistencyTransaction(110,2528
static u32 _testPersistency(144,3566
olint_t main(171,4487

test/httpparser-test.c,598
static boolean_t ls_bParseHttp 27,555
static boolean_t ls_bParseUri 28,595
static boolean_t ls_bGenerateHttpMsg 29,634
static void _printUsage(32,761
static u32 _parseCmdLineParam(50,1244
static u32 _getRawHeader(109,2662
static u32 _testHttpMsg(173,4889
static void _copyHeaderDataString(199,5484
static void _printHttpPacketHeader(206,5639
#define HTTP_MSG_1 242,7053
#define HTTP_MSG_2 256,7369
    olchar_t * pstrHttp;266,7572
    u32 u32ErrCode;267,7597
} test_http_parser_t;268,7617
static u32 _testParseHttp(270,7640
static u32 _testParseUri(317,9042
olint_t main(366,10513

test/stringparse-test.c,394
static boolean_t ls_bScanString 26,542
static boolean_t ls_bParseString 27,583
static void _printUsage(31,707
static u32 _parseCmdLineParam(48,1127
static void _printParseResult(79,1786
static u32 _testParseStringWithDelimiter(103,2482
static u32 _testParseStringAdvWithDelimiter(125,3025
static u32 _testParseString(147,3574
static u32 _testScanString(191,4969
olint_t main(222,5684

test/randnum-test.c,136
static void _printUsage(29,643
static u32 _parseCmdLineParam(37,773
static u32 testRandomNumberInRange(64,1323
olint_t main(89,1892

test/encrypt-test.c,302
static boolean_t ls_bTestEncryptString 26,549
static boolean_t ls_bTestEncryptFile 27,597
static olchar_t * ls_pstrSrcFile 28,643
static void _printUsage(31,765
static u32 _parseCmdLineParam(41,961
static u32 _testEncryptFile(74,1698
static u32 _testEncryptString(93,2246
olint_t main(142,3693

test/genuuid.c,443
static jf_uuid_ver_t ls_juvVersion 26,541
static jf_uuid_fmt_t ls_jufFormat 27,593
static boolean_t ls_bMulticastMac 28,646
static u32 ls_u32NumOfUuid 29,689
static olchar_t * ls_pstrName 30,721
static u8 ls_u8NameSpace_X500[ls_u8NameSpace_X50032,825
static void _printUsage(41,1100
static u32 _parseOptv(57,1580
static u32 _parseOptf(81,2169
static u32 _parseCmdLineParam(102,2765
void _outputUuid(144,3762
olint_t main(165,4201

test/jtsqlite-test.c,287
static void _printUsage(32,775
static u32 _parseCmdLineParam(42,915
static u32 _setJtSqliteValue(65,1366
static u32 _getJtSqliteValue(90,2072
static u32 _testRwJtSqlite(103,2422
static u32 _testJtSqliteTransaction(149,3531
static u32 _testJtSqlite(183,4490
olint_t main(209,5110

test/matrix-test.c,318
static void _printUsage(27,569
static u32 _parseCmdLineParam(41,943
static u32 _testMulMatrix(85,2107
static u32 _testAddSubMatrix(138,3320
static u32 _testTransposeMatrix(197,4614
static u32 _testInverseMatrix(234,5432
static u32 _testHatMatrix(295,7000
static u32 _testMatrix(338,7978
olint_t main(360,8475

test/sharedmemory-test-consumer.c,21
olint_t main(30,718

test/cgmac-test.c,222
boolean_t ls_bHmacSha1 26,543
boolean_t ls_bHmacMd5 27,575
static void _printUsage(30,687
static u32 _parseCmdLineParam(40,874
static u32 _testHmacSha1(72,1544
static u32 _testHmacMd5(144,3590
olint_t main(218,5675

test/process-test.c,136
static boolean_t ls_bToTerminate 25,522
#define MAX_THREAD_COUNT 27,565
THREAD_RETURN_VALUE _testThread(30,674
olint_t main(51,1197

test/hostinfo-test.c,21
olint_t main(29,681

test/cghash-test.c,328
static boolean_t ls_bMd5 26,554
static boolean_t ls_bSha1 27,588
static olchar_t * ls_pstrSource 28,623
static boolean_t ls_bVerbose 29,663
static void _printUsage(32,782
static u32 _parseCmdLineParam(43,1002
static u32 _testMd5(81,1809
static u32 _testSha1(116,2823
static u32 _sha1Str(159,4049
olint_t main(182,4671

test/network-test-client-chain.c,101
static jf_network_chain_t * ls_pjncChain;27,618
static void _terminate(32,743
olint_t main(42,974

test/hash-test.c,670
static olint_t terminate_flag;26,528
static boolean_t ls_bHashU32 27,559
static boolean_t ls_bHashTable 28,597
static void _printUsage(31,718
static u32 _parseCmdLineParam(43,908
static void _terminate(75,1579
static u32 _hashU32(82,1679
typedef struct test_hash_entry109,2190
    olint_t the_nKey;111,2223
    olint_t the_nId;112,2245
    olchar_t * the_pstrKey;113,2266
    olchar_t * the_pstrName;114,2294
    olint_t the_nField;115,2323
} test_hash_entry_t;116,2347
static olint_t _testHtCmpKeys(118,2369
static olint_t _testHtHashKey(123,2446
static void * _testHtGetKeyFromEntry(129,2528
static u32 _testHashTable(136,2690
olint_t main(175,3631

test/ifmgmt-test.c,545
static boolean_t ls_bShowIpInfo 28,588
static boolean_t ls_bShowIfInfo 29,629
static boolean_t ls_bShowAllIfInfo 30,670
static boolean_t ls_bUpIf 31,714
static boolean_t ls_bDownIf 32,749
static olchar_t * ls_pstrIfName 34,787
static void _printUsage(37,908
static u32 _parseCmdLineParam(50,1267
static u32 _showOneIfInfo(94,2304
static u32 _showIfInfo(116,2969
static u32 _showAllIfInfo(130,3224
#define MAX_IF 133,3292
static u32 _showIpInfo(151,3690
static u32 _upIf(187,4643
static u32 _downIf(198,4847
olint_t main(211,5138

test/respool-test.c,1098
    thread_id_t rtwd_tiThreadId;32,642
    boolean_t rtwd_bToTerminate;33,675
    u8 swe_u8Reserved[swe_u8Reserved34,708
    jf_sem_t * rtwd_pjsSem;36,735
    jf_mutex_t * rtwd_pjmLock;39,808
} respool_test_worker_data_t;42,879
#define RESPOOL_TEST_RESOURCE_POOL_NAME 44,910
#define RESPOOL_TEST_MIN_RESOURCES 45,966
#define RESPOOL_TEST_MAX_RESOURCES 46,1009
static resource_pool_t * ls_prpRespoolTestWorkerPool;48,1053
static jf_mutex_t ls_smRespoolTestLock;49,1107
static jf_sem_t ls_jsRespoolTestSem;50,1147
static thread_id_t ls_tiRespoolTestProducer;51,1184
static boolean_t ls_bRespoolTestTerminateProducer;52,1229
static resource_t * ls_prRespoolTestResource[ls_prRespoolTestResource53,1280
THREAD_RETURN_VALUE _respoolTestWorkerThread(58,1437
THREAD_RETURN_VALUE _respoolTestProducerThread(84,2208
static u32 _createRespoolTestWorker(109,2837
static u32 _destroyRespoolTestWorker(138,3732
static u32 _createTestRespool(153,4101
static u32 _testRespool(173,4708
static void _terminate(205,5598
static u32 _releaseRespoolTestResource(212,5723
olint_t main(230,6198

test/xtime-test.c,298
static void test1(28,624
#define NUM_OF_TEST_ENTRY 43,990
static void test2(45,1020
static void test3(62,1509
#define NUM_OF_TEST4_ENTRY 81,1976
static void test4(83,2008
#define NUM_OF_TEST5_ENTRY 102,2659
static void test5(104,2691
u32 getNextTradingDate(124,3360
olint_t main(155,4303

test/dynlib-test.c,21
olint_t main(30,691

test/crc32c-test.c,126
static u32 _printHexDumpInByte(27,616
static void _fillData(47,1075
static void _testCrc32c(76,1678
olint_t main(151,3878

test/menu-test.c,54
static u32 _startInstall(32,654
olint_t main(43,913

test/syncsem-test.c,206
static jf_sem_t ls_jsSem;26,550
static boolean_t ls_bToTerminate 27,576
#define MAX_RESOURCE_COUNT 29,619
THREAD_RETURN_VALUE consumer(32,730
THREAD_RETURN_VALUE producer(63,1563
olint_t main(95,2386

test/webclient-test.c,619
static const olchar_t * ls_pstrProgramName 30,639
static const olchar_t * ls_pstrVersion 31,702
static jf_network_chain_t * ls_pjncChain 33,753
static jf_webclient_t * ls_pwWebclient 34,802
static jf_network_utimer_t * ls_pjnuUtimer 35,849
static olchar_t * ls_pstrQuotationServer 37,901
static jf_ipaddr_t ls_jiServerAddr;38,960
static olchar_t * ls_pstrStocks 39,996
static void _printUsage(42,1132
static u32 _parseCmdLineParam(60,1581
static void _terminate(108,2859
static u32 _wcTestOnResponse(116,3009
static u32 _getSinaQuotation(154,4134
static u32 _testWebclient(193,5627
olint_t main(237,6819

test/servmgmt-test.c,563
static boolean_t ls_bList 26,549
static boolean_t ls_bStop 27,584
static boolean_t ls_bStart 28,619
static boolean_t ls_bStartupType 29,655
static olchar_t * ls_pstrServName 30,697
static u8 ls_u8StartupType 31,739
static const olchar_t * ls_pstrProgramName 33,807
static const olchar_t * ls_pstrVersion 34,866
static void _printUsage(37,997
static u32 _parseCmdLineParam(59,1621
static u32 _listService(125,3406
static u32 _stopService(159,4398
static u32 _startService(175,4707
static u32 _changeServiceStartupType(191,5018
olint_t main(208,5449

test/network-test-server.c,468
#define NETWORK_TEST_SERVER 28,617
#define SERVER_PORT 29,658
typedef struct server_data31,696
    u8 sd_u8Id[sd_u8Id33,725
} server_data_t;34,745
static jf_network_chain_t * ls_pjncChain 36,763
static void _printUsage(40,894
static u32 _parseCmdLineParam(57,1295
static void _terminate(110,2572
static u32 _onNtsConnect(118,2722
static u32 _onNtsDisConnect(138,3173
static u32 _onNtsSendOK(152,3494
static u32 _onNtsData(163,3699
olint_t main(189,4668

test/syncmutex-test.c,239
static jf_mutex_t ls_jmLock;26,556
static boolean_t ls_bToTerminate 27,585
static olint_t nMutex 28,627
#define MAX_RESOURCE_COUNT 30,655
THREAD_RETURN_VALUE consumer(33,766
THREAD_RETURN_VALUE producer(61,1421
olint_t main(91,2123

uuid/output.c,161
static u32 _writeUuidBin(27,604
static u32 _writeUuidStr(69,1819
static u32 _writeUuidHex(91,2547
static u32 _writeUuidSiv(113,3259
u32 outputUuid(122,3486

uuid/uuid.c,1125
#define UUIDS_PER_TICK 37,845
static const u64 ls_u64UuidTimeOffset 43,1040
#define IEEE_MAC_MCBIT 49,1228
#define IEEE_MAC_LOBIT 52,1359
    uuid_obj_t ug_uoObj;59,1501
    boolean_t ug_bInitialized;61,1557
    u8 ug_u8Reserved[ug_u8Reserved62,1588
    uuid_uint8_t ug_u8Mac[ug_u8Mac66,1670
    boolean_t ug_bMulticastMac;68,1744
    u8 ug_u8Reserved2;69,1776
    struct timeval ug_tvLast;71,1835
    u32 ug_u32TimeSeq;73,1908
    jf_cghash_md5_t ug_jcmMd5;77,1983
    jf_cghash_sha1_t ug_jcsSha1;78,2014
    olchar_t * ug_pstrName;80,2087
    u8 * ug_pu8NameSpace;82,2171
} uuid_gen_t;84,2198
static uuid_gen_t ls_ugUuidGen;88,2265
static void _brandUuid(93,2421
static u32 _makeUuidV1(102,2706
static u32 _makeUuidV3(227,6816
static u32 _makeUuidV4(250,7477
static u32 _makeUuidV5(264,7796
static u32 _initUuidGenV1(298,8769
static u32 _initUuidGenV3(313,9094
static u32 _initUuidGenV4(319,9196
static u32 _initUuidGenV5(326,9299
static void _copyUuidParam(333,9402
static u32 _initUuidGen(340,9623
static u32 _checkParam(371,10283
static u32 _genUuid(419,11479
u32 jf_uuid_get(464,12576

uuid/common.h,528
#define UUID_COMMON_H14,204
typedef s8   uuid_int8_t;25,512
typedef u8   uuid_uint8_t;26,538
typedef s16  uuid_int16_t;27,565
typedef u16  uuid_uint16_t;28,592
typedef s32  uuid_int32_t;29,620
typedef u32  uuid_uint32_t;30,647
    uuid_uint32_t uo_u32TimeLow;39,870
    uuid_uint16_t uo_u16TimeMid;41,937
    uuid_uint16_t uo_u16TimeHiAndVersion;43,1023
    uuid_uint8_t uo_u8ClockSeqHiAndReserved;45,1127
    uuid_uint8_t uo_u8ClockSeqLow;47,1214
    uuid_uint8_t uo_u8Node[uo_u8Node49,1288
} uuid_obj_t;50,1325

uuid/output.h,29
#define UUID_OUTPUT_H13,141

persistency/sqlitepersistency.h,48
#define PERSISTENCY_SQLITE_PERSISTENCY_H13,166

persistency/persistency.c,287
u32 jf_persistency_create(32,719
u32 jf_persistency_destroy(75,1716
u32 jf_persistency_getValue(89,2018
u32 jf_persistency_setValue(105,2406
u32 jf_persistency_startTransaction(120,2765
u32 jf_persistency_commitTransaction(134,3085
u32 jf_persistency_rollbackTransaction(148,3411

persistency/sqlitepersistency.c,309
static u32 _rollbackSqliteTransaction(32,710
static u32 _initSqlite(42,970
static u32 _finiSqlite(71,1897
static u32 _getSqliteValue(81,2127
static u32 _setSqliteValue(101,2775
static u32 _startSqliteTransaction(131,3783
static u32 _commitSqliteTransaction(141,4037
u32 initSqlitePersistency(153,4374

persistency/persistencycommon.h,1316
#define PERSISTENCY_COMMON_H13,171
typedef u32 (* fnFiniPersistency_t)28,644
typedef u32 (* fnGetPersistencyValue_t)29,721
typedef u32 (* fnSetPersistencyValue_t)32,864
typedef u32 (* fnStartPersistencyTransaction_t)34,986
typedef u32 (* fnCommitPersistencyTransaction_t)35,1075
typedef u32 (* fnRollbackPersistencyTransaction_t)36,1165
typedef struct sqlite_persistency39,1259
    jf_sqlite_t sp_jsSqlite;41,1295
    jf_persistency_config_sqlite_t sp_jpcsConfigSqlite;42,1324
} sqlite_persistency_t;43,1380
typedef union persistency_data45,1405
    sqlite_persistency_t pd_spSqlite;47,1438
} persistency_data_t;48,1476
typedef struct persistency_manager 50,1499
    jf_persistency_type_t pm_jptType;52,1537
    fnFiniPersistency_t pm_fnFini;54,1577
    fnGetPersistencyValue_t pm_fnGetValue;55,1612
    fnSetPersistencyValue_t pm_fnSetValue;56,1655
    fnStartPersistencyTransaction_t pm_fnStartTransaction;57,1698
    fnCommitPersistencyTransaction_t pm_fnCommitTransaction;58,1757
    fnRollbackPersistencyTransaction_t pm_fnRollbackTransaction;59,1818
    boolean_t pm_bTransactionStarted;61,1884
    boolean_t pm_bInitialized;62,1922
    u8 pm_u8Reserved[pm_u8Reserved63,1953
    persistency_data_t pm_pdData;65,1979
    jf_mutex_t pm_jmLock;67,2014
} persistency_manager_t;68,2040

encode/huffman.h,32
#define ENCODE_HUFFMAN_H13,154

encode/base64.c,286
static const olchar_t ls_cBase64[ls_cBase6433,638
static const olchar_t ls_cDecode[ls_cDecode35,750
static void _encodeBlock(49,1176
static void _decodeBlock(81,2119
u32 jf_encode_encodeBase64(90,2398
u32 jf_encode_decodeBase64(126,3164
u32 jf_encode_freeBase64Buffer(188,4792

encode/huffman.c,1177
#define HUFFMAN_NONE 27,582
typedef struct huffman_node29,614
    jf_encode_huffman_code_t * hn_pjehcCode;31,644
    u64 hn_u64Freq;32,689
    boolean_t hn_bIgnore;34,766
    olint_t hn_nLevel;36,829
    struct huffman_node * hn_phnLeft,41,993
    struct huffman_node * hn_phnLeft, * hn_phnRight,41,993
    struct huffman_node * hn_phnLeft, * hn_phnRight, * hn_phnParent;41,993
} huffman_node_t;42,1062
    huffman_node_t * hnp_phnNodes;46,1098
    u32 hnp_u32MaxNode;47,1133
    u32 hnp_u32NumOfAlloc;48,1157
} huffman_node_pool_t;49,1184
static u32 _destroyHuffmanNodePool(53,1289
static u32 _createHuffmanNodePool(66,1581
static huffman_node_t * _getHuffmanNode(95,2250
static u32 _getHuffmanCompositeNode(122,2995
static olint_t _findMinimumFreq(159,4166
static u32 _buildHuffmanTree(193,5392
static u32 _initHuffmanTreeLeaf(241,6683
static u32 _genHuffmanCode(272,7528
static u32 _assignCanonicalCodes(335,9334
static olint_t _compareByCodeLen(384,10808
static u32 _genCanonicalHuffmanCode(426,11967
u32 jf_encode_genHuffmanCode(483,13447
u32 jf_encode_genCanonicalHuffmanCode(521,14374
u32 jf_encode_genCanonicalHuffmanCodeByCodeLen(560,15336

logger/common.h,39
#define JIUFENG_LOGGER_COMMON_H13,153

logger/errcode.c,576
#define ERR_MSG_FORMAT 23,470
#define SYS_ERR_MSG_FORMAT 24,516
    u32 iecd_u32ErrorCode;29,624
    olchar_t * iecd_pstrDesc;30,651
} internal_error_code_desc_t;31,681
static internal_error_code_desc_t ls_iecdErrorCodeDesc[ls_iecdErrorCodeDesc35,843
static u32 ls_u32NumberOfErrorCodes 231,9569
    ls_iecdVendorSpecErrorCodeDesc[ls_iecdVendorSpecErrorCodeDesc235,9717
static void _getSysErrMsg(238,9864
void _getErrMsg(266,10646
olchar_t * jf_err_getDescription(280,11072
void jf_err_getMsg(323,12260
u32 jf_err_addCode(335,12538
void checkErrCode(351,13022

logger/logger.c,1206
#define IL_LOG_MASK_NONE 38,769
#define IL_LOG_MASK_STDOUT 39,802
#define IL_LOG_MASK_SYSLOG 40,836
#define IL_LOG_MASK_LOGFILE 41,870
#define IL_LOG_MASK_TTY 42,904
#define LOG_INFO 47,1044
#define LOG_ERR 48,1065
#define MAX_CALLER_NAME 51,1091
    boolean_t il_bInitialized;56,1180
    u8 il_u8LogMask;58,1274
    u8 il_u8TraceLevel;60,1336
    u8 il_u8Reserved[il_u8Reserved61,1360
    olchar_t il_strCallerName[il_strCallerName64,1489
    olchar_t il_strLogFilename[il_strLogFilename65,1537
    u32 il_u32LogFileLines;67,1653
    u32 il_u32NextLine;69,1721
    olint_t il_nTTY;72,1823
    olint_t il_nReserved1;73,1844
} internal_logger_t;75,1878
static internal_logger_t ls_ilLogger;77,1900
static u32 _getLogFileLines(87,2195
static void _getLogTimeStamp(105,2583
static void _log(133,3333
static u32 _logMsg(178,4539
static void _setDefaultParam(203,5181
static u32 _logSysErrMsg(218,5685
static u32 _logErrMsg(277,7251
u32 jf_logger_init(309,8083
u32 jf_logger_fini(416,10578
u32 jf_logger_logInfoMsg(432,10841
u32 jf_logger_logDebugMsg(456,11433
u32 jf_logger_logErrMsg(480,12027
u32 jf_logger_logDataMsg(505,12618
u32 jf_logger_logDataMsgWithAscii(546,13822

logger/common.c,33
boolean_t isSysErrorCode(27,648

servmgmt/servmgmt.c,1753
#define MAX_RESTART_COUNT 30,619
#define SERV_MGMT_SETTING_FILE 32,657
#define SERV_MGMT_STATUS_FILE 33,708
    boolean_t ism_bInitialized;41,936
    boolean_t ism_bToTerminate;42,968
    u8 ism_u8Reserved[ism_u8Reserved43,1000
    u32 ism_u32Reserved[ism_u32Reserved45,1027
} internal_serv_mgmt_t;46,1055
    internal_serv_mgmt_t * sma_pismServMgmt;51,1112
    internal_serv_mgmt_setting_t * sma_pismsServSetting;52,1157
    internal_service_info_t * sma_pisiServInfo;53,1214
    u32 sma_u32Reserved[sma_u32Reserved54,1262
} serv_mgmt_attask_t;55,1290
static internal_serv_mgmt_t ls_ismServMgmt;57,1313
static u32 _readServMgmtSetting(61,1439
static u32 _writeServMgmtSetting(73,1695
static u32 _startService(85,1954
static u32 _freeServMgmtAttask(111,2695
static u32 _newServMgmtAttask(120,2839
static u32 _lockStatusFile(143,3490
static u32 _unlockStatusFile(158,3836
static u32 _attaskStartService(172,4065
static u32 _tryStartService(193,4591
static u32 _startAllServices(226,5546
static u32 _stopService(250,6187
static void _dumpServMgmtInfo(264,6562
static u32 _waitForChildProcess(273,6888
static u32 _monitorServices(325,8609
static u32 _saveServiceStatus(368,9748
static u32 _enterMonitorServices(389,10259
static u32 _wakeupServMgmt(408,10731
u32 jf_servmgmt_init(428,11381
u32 jf_servmgmt_fini(445,11749
u32 jf_servmgmt_start(454,11880
u32 jf_servmgmt_stop(531,13841
u32 jf_servmgmt_getInfo(543,14059
u32 jf_servmgmt_stopServ(597,15572
u32 jf_servmgmt_startServ(649,17004
const olchar_t * jf_servmgmt_getStringServStatus(720,18933
const olchar_t * jf_servmgmt_getStringServStartupType(742,19587
u32 jf_servmgmt_getServStartupTypeFromString(756,19931
u32 jf_servmgmt_setServStartupType(771,20356

servmgmt/servmgmtsetting.c,282
static void _parseServiceSettingValue(33,688
static olchar_t * _getStringServRole(80,2250
static void _parseSettingValue(90,2476
static u32 _servmgmtXmlNewChild(103,2769
u32 readServMgmtSetting(123,3274
u32 modifyServiceStartupType(194,5345
u32 writeServMgmtSetting(278,8082

servmgmt/servmgmtsetting.h,1011
#define SERVMGMT_SETTING_H14,214
#define MAX_SERVICE_CMD_PARAM_LEN 24,547
    olchar_t isi_strName[isi_strName29,688
    u8 isi_u8Status;30,745
    u8 isi_u8StartupType;31,766
#define SERVICE_ROLE_INTERNAL 32,792
#define SERVICE_ROLE_WAKEUP 33,826
#define SERVICE_ROLE_EXTERNAL 34,860
    u8 isi_u8Role;35,894
    u8 isi_u8Reserved[isi_u8Reserved36,913
    olchar_t isi_strCmdPath[isi_strCmdPath37,939
    olchar_t isi_strCmdParam[isi_strCmdParam38,982
    u8 isi_u8RestartDelay;41,1143
    u8 isi_u8RestartCount;43,1171
    u8 isi_u8Reserved2[isi_u8Reserved244,1198
    process_id_t isi_piProcessId;46,1227
} internal_service_info_t;47,1261
    olchar_t isms_strSettingFile[isms_strSettingFile51,1306
    olchar_t isms_strVersion[isms_strVersion52,1354
    u32 isms_u32Reserved;53,1387
    u32 isms_u32NumOfService;54,1413
    internal_service_info_t isms_isiService[isms_isiService55,1443
    u8 isms_u8Reserved2[isms_u8Reserved256,1520
} internal_serv_mgmt_setting_t;57,1549

matrix/matrix.c,602
static void _clearMatrixData(25,561
static olint_t _sgn(30,689
static olint_t _invertOrder(35,760
static void _swap(48,997
static oldouble_t _det(56,1096
static u32 _determinant(87,1702
static u32 _algebraicCofactor(111,2196
u32 jf_matrix_alloc(146,3115
u32 jf_matrix_free(166,3559
void jf_matrix_init(175,3695
u32 jf_matrix_add(183,3882
u32 jf_matrix_sub(199,4239
u32 jf_matrix_mul(215,4596
void jf_matrix_print(239,5220
u32 jf_matrix_transpose(257,5536
u32 jf_matrix_adjugate(278,6027
u32 jf_matrix_inverse(302,6676
u32 jf_matrix_getDeterminant(329,7312
u32 jf_matrix_hat(334,7436

jiukun/buddy.h,870
#define JIUKUN_BUDDY_H14,183
#define BUDDY_PAGE_SIZE 28,612
#define sizeToPages(30,664
typedef enum jiukun_page_flag34,768
    JP_FLAG_ALLOCATED 36,800
    JP_FLAG_SLAB,37,852
} jiukun_page_flag_t;38,907
typedef struct jiukun_page42,965
    olflag_t jp_fPage;44,994
    jf_listhead_t jp_jlLru;45,1017
    ulong jp_ulPrivate;47,1105
    u32 jp_u32Reserved[jp_u32Reserved48,1129
} jiukun_page_t;49,1156
#define setJpAllocated(51,1174
#define clearJpAllocated(52,1249
#define isJpAllocated(53,1328
#define setJpSlab(55,1403
#define clearJpSlab(56,1468
#define isJpSlab(57,1537
#define setJpOrder(61,1635
#define getJpOrder(63,1721
#define setJpZoneId(67,1824
#define getJpZoneId(69,1913
#define pageToIndex(71,1983
    u8 bp_u8MaxOrder;75,2054
    boolean_t bp_bNoGrow;76,2076
    u8 bp_u8Reserved[bp_u8Reserved77,2102
} buddy_param_t;78,2127

jiukun/buddy.c,1832
typedef struct free_area30,607
    jf_listhead_t fa_jlFree;33,655
    u32 fa_u32Free;35,723
} free_area_t;36,743
typedef struct buddy_zone38,759
    u32 bz_u32FreePages;40,787
    free_area_t bz_faFreeArea[bz_faFreeArea42,813
    u32 bz_u32MaxOrder;44,875
    u32 bz_u32NumOfPage;45,899
    jiukun_page_t * bz_papPage;46,924
    u8 * bz_pu8Pool;48,957
    u8 * bz_pu8PoolEnd;49,978
} buddy_zone_t;50,1002
#define MAX_BUDDY_ZONES 52,1019
    boolean_t ijb_bInitialized;56,1065
    boolean_t ijb_bNoGrow;57,1097
    u8 ijb_u8Reserved[ijb_u8Reserved58,1124
    u32 ijb_u32MaxOrder;60,1151
    u32 ijb_u32Reserved[ijb_u32Reserved61,1176
    u32 ijb_u32NumOfZone;63,1205
    buddy_zone_t * ijb_pbzZone[ijb_pbzZone64,1231
    jf_mutex_t ijb_jmLock;66,1281
} internal_jiukun_buddy_t;67,1308
static internal_jiukun_buddy_t ls_ijbBuddy;69,1336
static inline void _setPageOrder(73,1462
static inline void _clearPageOrder(78,1566
static inline ulong _getPageOrder(85,1676
static jiukun_page_t * _expand(90,1766
static jiukun_page_t * _rmqueue(113,2297
static inline ulong _getBuddyIndex(139,3004
static inline jiukun_page_t * _findBuddyPage(144,3107
static inline boolean_t _isBuddyPage(158,3502
static inline void _freeOnePage(170,3752
static u32 _destroyBuddyZone(204,4843
static void _initBuddyPage(224,5277
static u32 _createBuddyZone(237,5526
static jiukun_page_t * _allocPages(295,7300
static void _dumpBuddyZone(345,8661
static void _dumpBuddy(375,9620
static inline u32 _u32Log2(392,10060
u32 initJiukunBuddy(403,10261
u32 finiJiukunBuddy(434,11054
u32 jf_jiukun_allocPage(456,11521
void jf_jiukun_freePage(470,11823
u32 getJiukunPage(483,12061
void putJiukunPage(535,13303
void * jiukunPageToAddr(559,13900
jiukun_page_t * addrToJiukunPage(573,14209
void dumpJiukunBuddy(599,14828

jiukun/common.h,31
#define JIUKUN_COMMON_H14,193

jiukun/slab.h,95
#define JIUKUN_SLAB_H13,120
    u8 sp_u8Reserved[sp_u8Reserved28,564
} slab_param_t;29,590

jiukun/slab.c,4292
#define MAX_JP_ORDER 33,756
typedef u32 slab_bufctl_t;44,1230
#define BUFCTL_END 45,1257
#define BUFCTL_FREE 46,1306
#define SLAB_LIMIT 47,1355
    jf_listhead_t s_jlList;55,1636
    void * s_pMem;57,1694
    u32 s_u32InUse;59,1751
    slab_bufctl_t s_sbFree;60,1771
} slab_t;61,1799
#define slab_bufctl(63,1810
#define CACHE_NAME_LEN 69,1930
typedef enum slab_cache_flag74,2004
    SC_FLAG_OFF_SLAB 76,2035
    SC_FLAG_GROWN,77,2098
    SC_FLAG_DESTROY,78,2149
    SC_FLAG_RED_ZONE,79,2208
    SC_FLAG_POISON,82,2419
    SC_FLAG_LOCKED,83,2468
} slab_cache_flag_t;84,2518
typedef struct slab_cache86,2540
    u32 sc_u32ObjSize;88,2568
    u32 sc_u32RealObjSize;89,2591
    olflag_t sc_fCache;91,2641
    u32 sc_u32Num;93,2697
    jf_mutex_t sc_jmCache;96,2768
    jf_listhead_t sc_jlFull;98,2831
    jf_listhead_t sc_jlPartial;100,2893
    jf_listhead_t sc_jlFree;102,2961
    u32 sc_u32Order;105,3032
    olflag_t sc_fPage;108,3076
    struct slab_cache * sc_pscSlab;111,3128
    olchar_t sc_strName[sc_strName114,3187
    jf_listhead_t sc_jlNext;116,3261
    ulong sc_ulNumActive;119,3313
    ulong sc_ulNumAlloced;120,3339
    ulong sc_ulNumHighMark;121,3366
    ulong sc_ulNumGrown;122,3394
    ulong sc_ulNumReaped;123,3419
    ulong sc_ulNumErrors;124,3445
} slab_cache_t;126,3478
#define OFF_SLAB(129,3496
#define GROWN(130,3561
    #define STATS_INC_ACTIVE(133,3647
    #define STATS_DEC_ACTIVE(134,3704
    #define STATS_INC_ALLOCED(135,3761
    #define STATS_INC_GROWN(136,3819
    #define STATS_INC_REAPED(137,3875
    #define STATS_SET_HIGH(138,3932
    #define STATS_INC_ERR(142,4116
    #define STATS_INC_ACTIVE(144,4179
    #define STATS_DEC_ACTIVE(145,4229
    #define STATS_INC_ALLOCED(146,4279
    #define STATS_INC_GROWN(147,4329
    #define STATS_INC_REAPED(148,4379
    #define STATS_SET_HIGH(149,4429
    #define STATS_INC_ERR(150,4479
#define RED_MAGIC1 157,4662
#define RED_MAGIC2 158,4723
#define POISON_BYTE 162,4809
#define POISON_END 163,4872
typedef struct general_cache169,4965
    olsize_t gc_sSize;171,4996
    slab_cache_t * gc_pscCache;172,5019
} general_cache_t;173,5051
static olsize_t ls_sCacheSize[ls_sCacheSize177,5153
#define CACHE(179,5189
#undef CACHE182,5255
#define MAX_NUM_OF_GENERAL_CACHE 185,5273
typedef struct internal_jiukun_slab187,5311
    boolean_t ijs_bInitialized;189,5349
    u8 ijs_u8Reserved[ijs_u8Reserved190,5381
    slab_cache_t ijs_scCacheCache;192,5469
    u32 ijs_u32OffSlabLimit;194,5505
    jf_mutex_t ijs_smLock;196,5535
    u8 ijs_u8Reserved2[ijs_u8Reserved2198,5563
    u16 ijs_u16Reserved[ijs_u16Reserved200,5592
    general_cache_t ijs_gcGeneral[ijs_gcGeneral201,5620
} internal_jiukun_slab_t;202,5681
#define SLAB_ALIGN_SIZE 206,5734
#define SET_PAGE_CACHE(211,5920
#define GET_PAGE_CACHE(213,6007
#define SET_PAGE_SLAB(214,6081
#define GET_PAGE_SLAB(216,6168
static internal_jiukun_slab_t ls_iasSlab;218,6237
void _dumpSlabCache(222,6386
static void _slabCacheEstimate(282,8547
static inline void _freePages(313,9252
static inline void _poisonObj(334,9687
static inline boolean_t _checkPoisonObj(347,10016
static inline void * _allocOneObjFromTail(366,10415
static inline slab_t * _slabMgmt(418,11813
static inline void _initSlabCacheObjs(447,12531
static u32 _growSlabCache(491,13840
static inline void _lockSlabCache(548,15269
static inline void _unlockSlabCache(556,15498
static inline u32 _allocObj(564,15731
    #define CHECK_PAGE(621,17322
    #define CHECK_PAGE(631,17723
static olint_t _extraFreeChecks 635,17792
static inline void _freeOneObj(661,18406
static inline void _freeObj(722,20131
static void _destroySlab(742,20696
static u32 _destroySlabCache(775,21685
static slab_cache_t * _findGeneralSlabCache(806,22408
static u32 _createSlabCache(824,22905
static u32 _initSlabCache(980,28062
static olint_t _shrinkSlabCache(1048,29901
u32 initJiukunSlab(1075,30540
u32 finiJiukunSlab(1097,31043
u32 jf_jiukun_createCache(1127,31678
u32 jf_jiukun_destroyCache(1147,32220
u32 reapJiukunSlab(1171,32907
void jf_jiukun_freeObject(1239,34696
u32 jf_jiukun_allocObject(1250,34991
u32 jf_jiukun_allocMemory(1271,35611
void jf_jiukun_freeMemory(1301,36375
u32 jf_jiukun_copyMemory(1319,36792

jiukun/cachesizes.h,12
	CACHE(1,0

jiukun/jiukun.c,404
static u32 ls_u32OrderPrimes[ls_u32OrderPrimes26,505
    boolean_t ia_bInitialized;38,831
    u8 ia_u8Reserved[ia_u8Reserved39,862
    u32 ia_u32Reserved[ia_u32Reserved41,888
} internal_jiukun_t;42,915
static internal_jiukun_t ls_iaJiukun;44,937
#define MIN_JIUKUN_POOL_SIZE 49,1005
u32 jf_jiukun_init(55,1210
u32 jf_jiukun_fini(96,2291
u32 reapJiukun(114,2576
void jf_jiukun_dump(129,2896

network/network.c,0

network/utimer.c,785
typedef struct utimer_item25,513
    u32 ui_u32Expire;27,542
    void * ui_pData;28,564
    jf_network_fnCallbackOfUtimerItem_t ui_fnCallback;29,585
    jf_network_fnDestroyUtimerItem_t ui_fnDestroy;30,640
    struct utimer_item * ui_puiPrev;31,691
    struct utimer_item * ui_puiNext;32,728
} utimer_item_t;33,765
typedef struct utimer35,783
    jf_network_chain_object_header_t iu_jncohHeader;37,807
    jf_network_chain_t * iu_pbcChain;38,860
    utimer_item_t * iu_puiItems;39,898
    jf_mutex_t iu_jmLock;40,931
} internal_utimer_t;41,957
static u32 _checkUtimer(55,1378
static u32 _flushUtimer(153,4492
u32 jf_network_addUtimerItem(181,5099
u32 jf_network_removeUtimerItem(275,8412
u32 jf_network_destroyUtimer(346,10406
u32 jf_network_createUtimer(365,10769

network/chain.c,678
#define BASIC_CHAIN_MAX_WAIT 32,614
typedef struct internal_basic_chain36,672
    boolean_t ibc_bToTerminate;39,750
    u8 ibc_u8Reserved[ibc_u8Reserved40,782
    jf_network_chain_object_t * ibc_pbcoObject;42,841
    jf_network_socket_t * ibc_pjnsWakeup[ibc_pjnsWakeup44,933
    jf_mutex_t ibc_jmLock;45,978
    struct internal_basic_chain *ibc_pibcNext;ibc_pibcNext47,1027
} internal_basic_chain_t;48,1074
static u32 _readWakeupSocket(52,1182
u32 jf_network_createChain(82,1970
u32 jf_network_destroyChain(111,2668
u32 jf_network_appendToChain(143,3383
u32 jf_network_startChain(174,4111
u32 jf_network_stopChain(266,7106
u32 jf_network_wakeupChain(288,7605

network/resolve.c,37
u32 jf_network_getHostByName(28,656

network/socket.c,1285
u32 jf_network_createDgramSocket(48,1052
u32 jf_network_createStreamSocket(62,1401
u32 jf_network_createTypeStreamSocket(75,1744
u32 jf_network_createSocket(92,2181
u32 jf_network_destroySocket(106,2483
u32 jf_network_ioctlSocket(117,2713
u32 jf_network_setSocketBlock(130,2995
u32 jf_network_setSocketNonblock(142,3241
u32 jf_network_joinMulticastGroup(154,3493
u32 jf_network_enableBroadcast(169,3900
u32 jf_network_send(183,4232
u32 jf_network_sendWithTimeout(198,4613
u32 jf_network_sendn(215,5070
u32 jf_network_sendnWithTimeout(230,5481
u32 jf_network_recv(247,5920
u32 jf_network_recvWithTimeout(262,6313
u32 jf_network_recvfromWithTimeout(279,6765
u32 jf_network_recvn(297,7306
u32 jf_network_recvnWithTimeout(313,7731
u32 jf_network_listen(327,8071
u32 jf_network_connect(339,8328
u32 jf_network_connectWithTimeout(352,8618
u32 jf_network_accept(366,8962
u32 jf_network_sendto(380,9341
u32 jf_network_recvfrom(394,9689
u32 jf_network_select(408,10043
u32 jf_network_getSocketName(419,10307
void jf_network_clearSocketFromFdSet(432,10620
boolean_t jf_network_isSocketSetInFdSet(442,10840
void jf_network_setSocketToFdSet(455,11114
void jf_network_clearFdSet(464,11321
u32 jf_network_getSocketOpt(469,11395
u32 jf_network_setSocketOpt(480,11687

network/asocket.c,3267
typedef struct send_data27,576
    u8 * sd_pu8Buffer;29,603
    olsize_t sd_sBuf;30,626
    olsize_t sd_sBytesSent;31,648
    jf_network_mem_owner_t sd_jnmoOwner;33,677
    struct send_data *sd_psdNext;sd_psdNext34,718
} send_data_t;35,752
    jf_network_chain_object_header_t ia_jncohHeader;39,785
    jf_network_chain_t * ia_pjncChain;40,838
    olsize_t ia_sPendingBytesToSend;42,878
    olsize_t ia_sTotalBytesSent;43,915
    jf_ipaddr_t ia_jiRemote;45,949
    u16 ia_u16Port;46,978
    u16 ia_u16Reserved[ia_u16Reserved47,998
    u16 ia_u16LocalPort;49,1026
    jf_ipaddr_t ia_jiLocal;50,1051
    void * ia_pUser;52,1080
    jf_network_utimer_t * ia_pjnuUtimer;54,1102
    jf_network_socket_t * ia_pjnsSocket;56,1144
    boolean_t ia_bFree;59,1224
    boolean_t ia_bPause;61,1288
    boolean_t ia_bFinConnect;63,1347
    boolean_t ia_bNoRead;65,1424
    u8 ia_u8Reserved2[ia_u8Reserved266,1450
    send_data_t * ia_psdHead;68,1477
    send_data_t * ia_psdTail;69,1507
    jf_mutex_t * ia_pjmLock;71,1538
    olsize_t ia_sBeginPointer;73,1568
    olsize_t ia_sEndPointer;74,1599
    u8 * ia_pu8Buffer;76,1629
    olsize_t ia_sMalloc;77,1652
    u32 ia_u32Reserved2;78,1677
    u32 ia_u32Status;80,1703
    u32 ia_u32Reserved3;81,1725
    void * ia_pTag;83,1751
    boolean_t ia_bSilent;86,1823
    u8 ia_u8Reserved10[ia_u8Reserved1087,1849
    jf_network_fnAsocketOnData_t ia_fnOnData;89,1877
    jf_network_fnAsocketOnConnect_t ia_fnOnConnect;90,1923
    jf_network_fnAsocketOnDisconnect_t ia_fnOnDisconnect;91,1975
    jf_network_fnAsocketOnSendOK_t ia_fnOnSendOK;92,2033
} internal_asocket_t;93,2083
static u32 _asRecvn(97,2187
static void _destroySendData(111,2510
static u32 _clearAsocket(122,2746
static void _clearPendingSendOfAsocket(153,3490
static u32 _freeAsocket(168,3799
static u32 _asDisconnect(194,4370
static inline void _onDataNotify(212,4867
static u32 _processAsocket(225,5283
static u32 _preSelectAsocket(310,7676
static u32 _asPostSelectSendData(351,9042
static u32 _postSelectAsocket(410,10896
static u32 _asConnectTo(487,13430
static u32 _asAddPendingData(517,14371
static u32 _asTrySendData(548,15430
u32 jf_network_destroyAsocket(614,17903
u32 jf_network_createAsocket(646,18765
u32 jf_network_disconnectAsocket(694,20396
void jf_network_clearPendingSendOfAsocket(715,20868
u32 jf_network_sendAsocketData(722,21049
u32 jf_network_sendnAsocket(771,22321
u32 jf_network_connectAsocketTo(787,22772
boolean_t jf_network_isAsocketFree(831,23912
olsize_t jf_network_getPendingBytesToSendOfAsocket(838,24076
olsize_t jf_network_getTotalBytesSentOfAsocket(849,24317
void jf_network_resetTotalBytesSentOfAsocket(859,24542
void jf_network_getBufferOfAsocket(866,24722
void jf_network_clearBufferOfAsocket(886,25211
u32 jf_network_useSocketForAsocket(894,25410
void jf_network_setRemoteAddressOfAsocket(923,26044
void jf_network_getRemoteInterfaceOfAsocket(931,26283
void jf_network_getLocalInterfaceOfAsocket(939,26524
u32 jf_network_resumeAsocket(947,26763
u32 jf_network_recvAsocketData(965,27187
u32 jf_network_getAsocketOpt(979,27596
u32 jf_network_setAsocketOpt(997,28109
void * jf_network_getTagOfAsocket(1015,28620
void jf_network_setTagOfAsocket(1022,28782

network/acsocket.c,1822
typedef struct acsocket_data29,586
    struct internal_acsocket * ad_iaAcsocket;31,617
    void * ad_pUser;32,663
    u32 ad_u32Reserved[ad_u32Reserved33,684
} acsocket_data_t;34,711
typedef struct internal_acsocket36,731
    jf_network_chain_object_header_t ia_jncohHeader;38,766
    jf_network_chain_t * ia_pjncChain;39,819
    u16 ia_u32MaxConn;41,859
    u16 ia_u16Reserved[ia_u16Reserved42,882
    u8 ia_u8Reserved[ia_u8Reserved43,909
    jf_network_fnAcsocketOnData_t ia_fnOnData;45,935
    jf_network_fnAcsocketOnConnect_t ia_fnOnConnect;46,982
    jf_network_fnAcsocketOnDisconnect_t ia_fnOnDisconnect;47,1035
    jf_network_fnAcsocketOnSendOK_t ia_fnOnSendOK;48,1094
    jf_mutex_t ia_jmAsocket;50,1146
    jf_listarray_t * ia_pjlAsocket;51,1175
    jf_mutex_t * ia_pjmAsockets;53,1212
    jf_network_asocket_t ** ia_pjnaAsockets;54,1245
    acsocket_data_t * ia_padData;55,1290
    void * ia_pTag;57,1325
} internal_acsocket_t;58,1345
#define ACS_MAX_CONNECTIONS 60,1369
static u32 _preSelectAcsocket(74,1801
static u32 _postSelectAcsocket(94,2353
static u32 _acsOnData(117,3022
static u32 _acsOnConnect(146,3833
static u32 _acsGetTagOfAsocket(164,4284
static u32 _acsOnDisconnect(183,4809
static u32 _acsOnSendOK(213,5707
u32 jf_network_destroyAcsocket(232,6227
u32 jf_network_createAcsocket(274,7350
void * jf_network_getTagOfAcsocket(380,10926
void jf_network_setTagOfAcsocket(387,11094
u32 jf_network_disconnectAcsocket(394,11273
boolean_t jf_network_isAcsocketFree(415,11967
u32 jf_network_sendAcsocketData(429,12392
u32 jf_network_resumeAcsocket(446,12972
u32 jf_network_recvAcsocketData(462,13450
u32 jf_network_getAcsocketOpt(479,13993
u32 jf_network_setAcsocketOpt(496,14581
u32 jf_network_sendnAcsocket(513,15167
u32 jf_network_connectAcsocketTo(530,15698

network/adgram.c,2317
typedef struct send_data26,557
    u8 * sd_pu8Buffer;28,584
    olsize_t sd_sBuf;29,607
    olsize_t sd_sBytesSent;30,629
    jf_ipaddr_t sd_jiRemote;32,658
    u16 sd_u16RemotePort;33,687
    u16 sd_u16Reserved[sd_u16Reserved34,713
    jf_network_mem_owner_t sd_jnmoOwner;36,741
    struct send_data * sd_psdNext;38,783
} send_data_t;39,818
    jf_network_chain_object_header_t ia_jncohHeader;43,851
    jf_network_chain_t * ia_pjncChain;44,904
    jf_network_socket_t * ia_pjnsSocket;46,944
    jf_ipaddr_t ia_iaRemote;48,986
    u16 ia_u16RemotePort;49,1015
    u16 is_u16Reserved3;50,1041
    jf_network_fnAdgramOnData_t ia_fnOnData;52,1067
    jf_network_fnAdgramOnSendOK_t ia_fnOnSendOK;53,1112
    void * ia_pUser;55,1162
    jf_network_utimer_t * ia_pjnuUtimer;57,1184
    boolean_t ia_bFree;59,1226
    boolean_t ia_bPause;60,1250
    u8 ia_u8Reserved2[ia_u8Reserved261,1275
    olsize_t ia_sBeginPointer;63,1302
    olsize_t ia_sEndPointer;64,1333
    u8 * ia_pu8Buffer;66,1363
    olsize_t ia_sMalloc;67,1386
    u32 ia_u32Reserved;68,1411
    olsize_t ia_sPendingBytesToSend;70,1436
    olsize_t ia_sTotalBytesSent;71,1473
    send_data_t * ia_psdHead;73,1507
    send_data_t * ia_psdTail;74,1537
    jf_mutex_t ia_jmLock;76,1568
} internal_adgram_t;77,1594
static u32 _adRecvfrom(80,1696
static u32 _destroySendData(96,2097
static u32 _processAdgram(114,2517
static u32 _preSelectAdgram(168,4132
static u32 _postSelectAdgram(207,5243
static u32 _createDgramSocket(289,8066
static u32 _adAddPendingData(305,8432
static u32 _adTrySendData(340,9482
u32 jf_network_destroyAdgram(411,11763
u32 jf_network_createAdgram(442,12537
u32 jf_network_clearPendingSendOfAdgram(491,13904
u32 jf_network_sendAdgramData(513,14404
boolean_t jf_network_isAdgramFree(571,16134
olsize_t jf_network_getPendingBytesToSendOfAdgram(578,16291
olsize_t jf_network_getTotalBytesSentOfAdgram(585,16478
void jf_network_resetTotalBytesSentOfAdgram(592,16657
void jf_network_getBufferOfAdgram(599,16832
void jf_network_clearBufferOfAdgram(610,17162
u32 jf_network_useSocketForAdgram(618,17356
u32 jf_network_freeSocketForAdgram(647,18112
u32 jf_network_resumeAdgram(668,18636
u32 jf_network_joinMulticastGroupOfAdgram(682,18944
u32 jf_network_enableBroadcastOfAdgram(695,19302

network/socketpair.c,168
static u32 _createUnixSocketPair(32,671
static u32 _createInetSocketPair(57,1271
u32 jf_network_createSocketPair(108,2558
u32 jf_network_destroySocketPair(145,3487

network/internalsocket.c,1158
#define  NET_MIN_PORT_NUMBER 45,992
#define  NET_PORT_NUMBER_RANGE 49,1088
u32 newIsocket(54,1296
u32 newIsocketWithSocket(75,1740
u32 freeIsocket(96,2199
u32 createDgramIsocket(130,3024
u32 createStreamIsocket(197,5343
u32 createIsocket(249,7155
u32 destroyIsocket(276,7754
u32 ioctlIsocket(287,7951
u32 setIsocketBlock(305,8334
u32 setIsocketNonblock(323,8710
u32 isJoinMulticastGroup(341,9086
u32 isEnableBroadcast(396,10989
u32 isSend(418,11489
u32 isSendWithTimeout(446,12127
u32 isSendn(487,13095
u32 isSendnWithTimeout(514,13732
u32 isRecv(575,15300
u32 isRecvWithTimeout(604,16020
u32 isRecvfromWithTimeout(646,17090
u32 isRecvn(689,18244
u32 isRecvnWithTimeout(716,18914
u32 isListen(775,20418
u32 isConnect(791,20720
u32 isConnectWithTimeout(820,21471
u32 isAccept(876,22866
u32 isSendto(914,24075
u32 isRecvfrom(946,24837
u32 isSelect(978,25656
u32 getIsocketName(1002,26137
u32 WSAIoctlIsocket(1021,26604
void clearIsocketFromFdSet(1041,27214
boolean_t isIsocketSetInFdSet(1048,27346
void setIsocketToFdSet(1060,27555
void clearIsocketFdSet(1067,27683
u32 isGetSockOpt(1072,27743
u32 isSetSockOpt(1089,28128

network/assocket.c,1908
typedef struct assocket_data29,585
    struct internal_assocket * ad_iaAssocket;31,616
    void * ad_pUser;32,662
    u32 ad_u32Reserved[ad_u32Reserved33,683
} assocket_data_t;34,710
typedef struct internal_assocket36,730
    jf_network_chain_object_header_t ia_jncohHeader;38,765
    jf_network_chain_t * ia_pjncChain;39,818
    u16 ia_u32MaxConn;41,858
    u16 ia_u16PortNumber;42,881
    boolean_t ia_bListening;43,907
    u8 ia_u8Reserved[ia_u8Reserved44,936
    jf_ipaddr_t ia_jiAddr;45,961
    jf_network_socket_t * ia_pjnsListenSocket;47,989
    jf_network_fnAssocketOnData_t ia_fnOnData;49,1037
    jf_network_fnAssocketOnConnect_t ia_fnOnConnect;50,1084
    jf_network_fnAssocketOnDisconnect_t ia_fnOnDisconnect;51,1137
    jf_network_fnAssocketOnSendOK_t ia_fnOnSendOK;52,1196
    jf_mutex_t ia_jmAsocket;54,1248
    jf_listarray_t * ia_pjlAsocket;55,1277
    jf_mutex_t * ia_pjmAsockets;57,1314
    jf_network_asocket_t ** ia_pjnaAsockets;58,1347
    assocket_data_t * ia_padData;59,1392
    void * ia_pTag;61,1427
} internal_assocket_t;62,1447
#define ASS_MAX_CONNECTIONS 64,1471
static u32 _preSelectAssocket(70,1630
static u32 _postSelectAssocket(108,3033
static u32 _assOnData(196,6332
static u32 _assGetTagOfAsocket(217,6914
static u32 _assOnDisconnect(236,7439
static u32 _assOnSendOK(265,8333
u32 jf_network_destroyAssocket(285,8866
u32 jf_network_createAssocket(330,10095
u16 jf_network_getPortNumberOfAssocket(443,13941
void * jf_network_getTagOfAssocket(450,14122
void jf_network_setTagOfAssocket(457,14290
u32 jf_network_disconnectAssocket(464,14469
boolean_t jf_network_isAssocketFree(485,15163
u32 jf_network_sendAssocketData(499,15588
u32 jf_network_resumeAssocket(516,16168
u32 jf_network_recvAssocketData(532,16646
u32 jf_network_getAssocketOpt(549,17189
u32 jf_network_setAssocketOpt(566,17777
u32 jf_network_sendnAssocket(583,18363

network/internalsocket.h,402
#define NETWORK_INTERNALSOCKET_H13,196
    typedef olint_t isocket_t;27,616
    #define INVALID_ISOCKET 28,647
    typedef SOCKET isocket_t;30,701
    #define INVALID_ISOCKET 31,731
    isocket_t is_isSocket;36,799
    boolean_t is_bSecure;37,826
    u8 is_u8Reserved[is_u8Reserved38,852
    u32 is_u32Reserved[is_u32Reserved39,877
    void * is_pPrivate;40,904
} internal_socket_t;41,928
